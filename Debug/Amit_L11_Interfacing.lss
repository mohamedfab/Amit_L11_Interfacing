
Amit_L11_Interfacing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ea2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000ea2  00000f16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000016bc  00000000  00000000  00000f18  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000277  00000000  00000000  000025d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  0000284b  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  0000287a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d4a  00000000  00000000  00002a32  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000926  00000000  00000000  0000477c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e52  00000000  00000000  000050a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002fc  00000000  00000000  00005ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000813  00000000  00000000  000061f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000191c  00000000  00000000  00006a03  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000831f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	ADC_ADCSRA_REG|=(ADC_ENABLE)|(ADCPS_128);
}
u16 adcRead(adc_ChannelID chnlNo)
{
    u16 result;
    ADC_ADMUX_REG = (ADC_ADMUX_REG & 0xF0)|(chnlNo);
   0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
   4:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
    SET_BIT(ADC_ADCSRA_REG,ADSC_BIT_NO);
   8:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>

 	while(!(CHECK_BIT(ADC_ADCSRA_REG,ADIF_BIT_NO)))
   c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
 		  	  /*	Do Nothing	*/
 		  	  	  ;
 	  }
 	  SET_BIT(ADC_ADCSRA_REG,ADIF_BIT_NO);

 	result=(ADC_ADCL_REG|(ADC_ADCH_REG<<8));
  10:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  14:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  18:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  1c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
 	return result;
}
  20:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
		break;

	case INT2:
		if (intSense == FAILING_EDGE_MODE)
		{
			CLEAR_BIT(EXTINT_MCUCSR_REG,EXT_INT2_SENSE_BIT);
  24:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  28:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
		}
		else if (intSense == RISING_EDGE_MODE)
  2c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
		{
			SET_BIT(EXTINT_MCUCSR_REG,EXT_INT2_SENSE_BIT);
  30:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  34:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
	Dio_ConfigChannel(LCD_RS_PORT, LCD_RS_CHANNEL, OUTPUT);
	Dio_ConfigChannel(LCD_RW_PORT, LCD_RW_CHANNEL, OUTPUT);
	Dio_ConfigChannel(LCD_EN_PORT, LCD_EN_CHANNEL, OUTPUT);

	Dio_ConfigChannels(LCD_DATA_PORT, LCD_MASK, OUTPUT);
	Dio_WriteChannel(LCD_RW_PORT, LCD_RW_CHANNEL, STD_LOW);
  38:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  3c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  40:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  44:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  48:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>

	_delay_ms(15);
	Lcd_Cmd(0x03);
  4c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  50:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>

00000054 <__c.2006>:
  54:	6e 61 6e 00                                         nan.

00000058 <__c.2004>:
  58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
	_delay_ms(5);
	Lcd_Cmd(0x03);
	_delay_us(100);
	Lcd_Cmd(0x03);
	Lcd_Cmd(0x02);
  78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
	Lcd_Cmd(_LCD_4BIT_MODE);
  88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
			{
				Lcd_DisplayChr(customChar[loc_CharIndx][loc_ByteIndex]);
			}
	}
}
void Lcd_Init(void)
  98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
	u8 loc_ByteIndex=0;
	u8 loc_CharIndx=0;
	for (loc_CharIndx=0;loc_CharIndx<NO_CSTOM_CHAR;loc_CharIndx++)
	{
		Lcd_Cmd(_LCD_CGRAM_START_ADDRESS +(loc_CharIndx*8));
			for (loc_ByteIndex =0; loc_ByteIndex<NO_CSTOM_CHAR_BYTES;loc_ByteIndex++)
  b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
	_delay_us(100);
	Lcd_Cmd(0x03);
	Lcd_Cmd(0x02);
	Lcd_Cmd(_LCD_4BIT_MODE);
	Lcd_WriteCustom();
	Lcd_GoToRowColumn(0, 0);
  c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
}
  d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
  e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
  f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
 156:	11 24       	eor	r1, r1
 158:	1f be       	out	0x3f, r1	; 63
 15a:	cf e5       	ldi	r28, 0x5F	; 95
 15c:	d8 e0       	ldi	r29, 0x08	; 8
 15e:	de bf       	out	0x3e, r29	; 62
 160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
 162:	10 e0       	ldi	r17, 0x00	; 0
 164:	a0 e6       	ldi	r26, 0x60	; 96
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	e2 ea       	ldi	r30, 0xA2	; 162
 16a:	fe e0       	ldi	r31, 0x0E	; 14
 16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
 16e:	05 90       	lpm	r0, Z+
 170:	0d 92       	st	X+, r0
 172:	a0 36       	cpi	r26, 0x60	; 96
 174:	b1 07       	cpc	r27, r17
 176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>
 178:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <main>
 17c:	0c 94 4f 07 	jmp	0xe9e	; 0xe9e <_exit>

00000180 <__bad_interrupt>:
 180:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000184 <Dio_ConfigChannel>:

#include "Dio_Interface.h"

void Dio_ConfigChannel(Dio_Port port,Dio_Channel channel, Dio_Direction direction)
{
	switch (port)
 184:	81 30       	cpi	r24, 0x01	; 1
 186:	21 f1       	breq	.+72     	; 0x1d0 <Dio_ConfigChannel+0x4c>
 188:	30 f0       	brcs	.+12     	; 0x196 <Dio_ConfigChannel+0x12>
 18a:	82 30       	cpi	r24, 0x02	; 2
 18c:	f1 f1       	breq	.+124    	; 0x20a <Dio_ConfigChannel+0x86>
 18e:	83 30       	cpi	r24, 0x03	; 3
 190:	09 f0       	breq	.+2      	; 0x194 <Dio_ConfigChannel+0x10>
 192:	74 c0       	rjmp	.+232    	; 0x27c <Dio_ConfigChannel+0xf8>
 194:	57 c0       	rjmp	.+174    	; 0x244 <Dio_ConfigChannel+0xc0>
	{
	case DIO_PORTA:
		if (direction == INPUT)
 196:	41 11       	cpse	r20, r1
 198:	0e c0       	rjmp	.+28     	; 0x1b6 <Dio_ConfigChannel+0x32>
		{
			CLEAR_BIT(DIO_DDRA_REG,channel);
 19a:	2a b3       	in	r18, 0x1a	; 26
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	ac 01       	movw	r20, r24
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <Dio_ConfigChannel+0x24>
 1a4:	44 0f       	add	r20, r20
 1a6:	55 1f       	adc	r21, r21
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <Dio_ConfigChannel+0x20>
 1ac:	ba 01       	movw	r22, r20
 1ae:	60 95       	com	r22
 1b0:	62 23       	and	r22, r18
 1b2:	6a bb       	out	0x1a, r22	; 26
 1b4:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRA_REG,channel);
 1b6:	2a b3       	in	r18, 0x1a	; 26
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	ac 01       	movw	r20, r24
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <Dio_ConfigChannel+0x40>
 1c0:	44 0f       	add	r20, r20
 1c2:	55 1f       	adc	r21, r21
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <Dio_ConfigChannel+0x3c>
 1c8:	ba 01       	movw	r22, r20
 1ca:	62 2b       	or	r22, r18
 1cc:	6a bb       	out	0x1a, r22	; 26
 1ce:	08 95       	ret
		}
		break;
	case DIO_PORTB:
		if (direction == INPUT)
 1d0:	41 11       	cpse	r20, r1
 1d2:	0e c0       	rjmp	.+28     	; 0x1f0 <Dio_ConfigChannel+0x6c>
		{
			CLEAR_BIT(DIO_DDRB_REG,channel);
 1d4:	27 b3       	in	r18, 0x17	; 23
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	ac 01       	movw	r20, r24
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <Dio_ConfigChannel+0x5e>
 1de:	44 0f       	add	r20, r20
 1e0:	55 1f       	adc	r21, r21
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <Dio_ConfigChannel+0x5a>
 1e6:	ba 01       	movw	r22, r20
 1e8:	60 95       	com	r22
 1ea:	62 23       	and	r22, r18
 1ec:	67 bb       	out	0x17, r22	; 23
 1ee:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRB_REG,channel);
 1f0:	27 b3       	in	r18, 0x17	; 23
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	ac 01       	movw	r20, r24
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <Dio_ConfigChannel+0x7a>
 1fa:	44 0f       	add	r20, r20
 1fc:	55 1f       	adc	r21, r21
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <Dio_ConfigChannel+0x76>
 202:	ba 01       	movw	r22, r20
 204:	62 2b       	or	r22, r18
 206:	67 bb       	out	0x17, r22	; 23
 208:	08 95       	ret
		}
		break;
	case DIO_PORTC:
		if (direction == INPUT)
 20a:	41 11       	cpse	r20, r1
 20c:	0e c0       	rjmp	.+28     	; 0x22a <Dio_ConfigChannel+0xa6>
		{
			CLEAR_BIT(DIO_DDRC_REG,channel);
 20e:	24 b3       	in	r18, 0x14	; 20
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	ac 01       	movw	r20, r24
 216:	02 c0       	rjmp	.+4      	; 0x21c <Dio_ConfigChannel+0x98>
 218:	44 0f       	add	r20, r20
 21a:	55 1f       	adc	r21, r21
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <Dio_ConfigChannel+0x94>
 220:	ba 01       	movw	r22, r20
 222:	60 95       	com	r22
 224:	62 23       	and	r22, r18
 226:	64 bb       	out	0x14, r22	; 20
 228:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRC_REG,channel);
 22a:	24 b3       	in	r18, 0x14	; 20
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	ac 01       	movw	r20, r24
 232:	02 c0       	rjmp	.+4      	; 0x238 <Dio_ConfigChannel+0xb4>
 234:	44 0f       	add	r20, r20
 236:	55 1f       	adc	r21, r21
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <Dio_ConfigChannel+0xb0>
 23c:	ba 01       	movw	r22, r20
 23e:	62 2b       	or	r22, r18
 240:	64 bb       	out	0x14, r22	; 20
 242:	08 95       	ret
		}
		break;
	case DIO_PORTD:
		if (direction == INPUT)
 244:	41 11       	cpse	r20, r1
 246:	0e c0       	rjmp	.+28     	; 0x264 <Dio_ConfigChannel+0xe0>
		{
			CLEAR_BIT(DIO_DDRD_REG,channel);
 248:	21 b3       	in	r18, 0x11	; 17
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	ac 01       	movw	r20, r24
 250:	02 c0       	rjmp	.+4      	; 0x256 <Dio_ConfigChannel+0xd2>
 252:	44 0f       	add	r20, r20
 254:	55 1f       	adc	r21, r21
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <Dio_ConfigChannel+0xce>
 25a:	ba 01       	movw	r22, r20
 25c:	60 95       	com	r22
 25e:	62 23       	and	r22, r18
 260:	61 bb       	out	0x11, r22	; 17
 262:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRD_REG,channel);
 264:	21 b3       	in	r18, 0x11	; 17
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	ac 01       	movw	r20, r24
 26c:	02 c0       	rjmp	.+4      	; 0x272 <Dio_ConfigChannel+0xee>
 26e:	44 0f       	add	r20, r20
 270:	55 1f       	adc	r21, r21
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <Dio_ConfigChannel+0xea>
 276:	ba 01       	movw	r22, r20
 278:	62 2b       	or	r22, r18
 27a:	61 bb       	out	0x11, r22	; 17
 27c:	08 95       	ret

0000027e <Dio_WriteChannel>:
		break;
	}
}
void Dio_WriteChannel(Dio_Port port,Dio_Channel channel, Dio_Level level)
{
	switch (port)
 27e:	81 30       	cpi	r24, 0x01	; 1
 280:	21 f1       	breq	.+72     	; 0x2ca <Dio_WriteChannel+0x4c>
 282:	30 f0       	brcs	.+12     	; 0x290 <Dio_WriteChannel+0x12>
 284:	82 30       	cpi	r24, 0x02	; 2
 286:	f1 f1       	breq	.+124    	; 0x304 <Dio_WriteChannel+0x86>
 288:	83 30       	cpi	r24, 0x03	; 3
 28a:	09 f0       	breq	.+2      	; 0x28e <Dio_WriteChannel+0x10>
 28c:	74 c0       	rjmp	.+232    	; 0x376 <Dio_WriteChannel+0xf8>
 28e:	57 c0       	rjmp	.+174    	; 0x33e <Dio_WriteChannel+0xc0>
	{
	case DIO_PORTA:
		if (level == STD_LOW)
 290:	41 11       	cpse	r20, r1
 292:	0e c0       	rjmp	.+28     	; 0x2b0 <Dio_WriteChannel+0x32>
		{
			CLEAR_BIT(DIO_PORTA_REG,channel);
 294:	2b b3       	in	r18, 0x1b	; 27
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	ac 01       	movw	r20, r24
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <Dio_WriteChannel+0x24>
 29e:	44 0f       	add	r20, r20
 2a0:	55 1f       	adc	r21, r21
 2a2:	6a 95       	dec	r22
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <Dio_WriteChannel+0x20>
 2a6:	ba 01       	movw	r22, r20
 2a8:	60 95       	com	r22
 2aa:	62 23       	and	r22, r18
 2ac:	6b bb       	out	0x1b, r22	; 27
 2ae:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_PORTA_REG,channel);
 2b0:	2b b3       	in	r18, 0x1b	; 27
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	ac 01       	movw	r20, r24
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <Dio_WriteChannel+0x40>
 2ba:	44 0f       	add	r20, r20
 2bc:	55 1f       	adc	r21, r21
 2be:	6a 95       	dec	r22
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <Dio_WriteChannel+0x3c>
 2c2:	ba 01       	movw	r22, r20
 2c4:	62 2b       	or	r22, r18
 2c6:	6b bb       	out	0x1b, r22	; 27
 2c8:	08 95       	ret
		}
		break;
	case DIO_PORTB:
		if (level == STD_LOW)
 2ca:	41 11       	cpse	r20, r1
 2cc:	0e c0       	rjmp	.+28     	; 0x2ea <Dio_WriteChannel+0x6c>
		{
			CLEAR_BIT(DIO_PORTB_REG,channel);
 2ce:	28 b3       	in	r18, 0x18	; 24
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	ac 01       	movw	r20, r24
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <Dio_WriteChannel+0x5e>
 2d8:	44 0f       	add	r20, r20
 2da:	55 1f       	adc	r21, r21
 2dc:	6a 95       	dec	r22
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <Dio_WriteChannel+0x5a>
 2e0:	ba 01       	movw	r22, r20
 2e2:	60 95       	com	r22
 2e4:	62 23       	and	r22, r18
 2e6:	68 bb       	out	0x18, r22	; 24
 2e8:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_PORTB_REG,channel);
 2ea:	28 b3       	in	r18, 0x18	; 24
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	ac 01       	movw	r20, r24
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <Dio_WriteChannel+0x7a>
 2f4:	44 0f       	add	r20, r20
 2f6:	55 1f       	adc	r21, r21
 2f8:	6a 95       	dec	r22
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <Dio_WriteChannel+0x76>
 2fc:	ba 01       	movw	r22, r20
 2fe:	62 2b       	or	r22, r18
 300:	68 bb       	out	0x18, r22	; 24
 302:	08 95       	ret
		}
		break;
	case DIO_PORTC:
		if (level == STD_LOW)
 304:	41 11       	cpse	r20, r1
 306:	0e c0       	rjmp	.+28     	; 0x324 <Dio_WriteChannel+0xa6>
		{
			CLEAR_BIT(DIO_PORTC_REG,channel);
 308:	25 b3       	in	r18, 0x15	; 21
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	ac 01       	movw	r20, r24
 310:	02 c0       	rjmp	.+4      	; 0x316 <Dio_WriteChannel+0x98>
 312:	44 0f       	add	r20, r20
 314:	55 1f       	adc	r21, r21
 316:	6a 95       	dec	r22
 318:	e2 f7       	brpl	.-8      	; 0x312 <Dio_WriteChannel+0x94>
 31a:	ba 01       	movw	r22, r20
 31c:	60 95       	com	r22
 31e:	62 23       	and	r22, r18
 320:	65 bb       	out	0x15, r22	; 21
 322:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_PORTC_REG,channel);
 324:	25 b3       	in	r18, 0x15	; 21
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	ac 01       	movw	r20, r24
 32c:	02 c0       	rjmp	.+4      	; 0x332 <Dio_WriteChannel+0xb4>
 32e:	44 0f       	add	r20, r20
 330:	55 1f       	adc	r21, r21
 332:	6a 95       	dec	r22
 334:	e2 f7       	brpl	.-8      	; 0x32e <Dio_WriteChannel+0xb0>
 336:	ba 01       	movw	r22, r20
 338:	62 2b       	or	r22, r18
 33a:	65 bb       	out	0x15, r22	; 21
 33c:	08 95       	ret
		}
		break;
	case DIO_PORTD:
		if (level == STD_LOW)
 33e:	41 11       	cpse	r20, r1
 340:	0e c0       	rjmp	.+28     	; 0x35e <Dio_WriteChannel+0xe0>
		{
			CLEAR_BIT(DIO_PORTD_REG,channel);
 342:	22 b3       	in	r18, 0x12	; 18
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	ac 01       	movw	r20, r24
 34a:	02 c0       	rjmp	.+4      	; 0x350 <Dio_WriteChannel+0xd2>
 34c:	44 0f       	add	r20, r20
 34e:	55 1f       	adc	r21, r21
 350:	6a 95       	dec	r22
 352:	e2 f7       	brpl	.-8      	; 0x34c <Dio_WriteChannel+0xce>
 354:	ba 01       	movw	r22, r20
 356:	60 95       	com	r22
 358:	62 23       	and	r22, r18
 35a:	62 bb       	out	0x12, r22	; 18
 35c:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_PORTD_REG,channel);
 35e:	22 b3       	in	r18, 0x12	; 18
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	ac 01       	movw	r20, r24
 366:	02 c0       	rjmp	.+4      	; 0x36c <Dio_WriteChannel+0xee>
 368:	44 0f       	add	r20, r20
 36a:	55 1f       	adc	r21, r21
 36c:	6a 95       	dec	r22
 36e:	e2 f7       	brpl	.-8      	; 0x368 <Dio_WriteChannel+0xea>
 370:	ba 01       	movw	r22, r20
 372:	62 2b       	or	r22, r18
 374:	62 bb       	out	0x12, r22	; 18
 376:	08 95       	ret

00000378 <Led_Init>:

#include "Led_Interface.h"

void Led_Init(void)
{
	Dio_ConfigChannel(LED0_PORT, LED0_CHANNEL, OUTPUT);
 378:	41 e0       	ldi	r20, 0x01	; 1
 37a:	62 e0       	ldi	r22, 0x02	; 2
 37c:	82 e0       	ldi	r24, 0x02	; 2
 37e:	0e 94 c2 00 	call	0x184	; 0x184 <Dio_ConfigChannel>
	Dio_ConfigChannel(LED1_PORT, LED1_CHANNEL, OUTPUT);
 382:	41 e0       	ldi	r20, 0x01	; 1
 384:	67 e0       	ldi	r22, 0x07	; 7
 386:	82 e0       	ldi	r24, 0x02	; 2
 388:	0e 94 c2 00 	call	0x184	; 0x184 <Dio_ConfigChannel>
	Dio_ConfigChannel(LED2_PORT, LED2_CHANNEL, OUTPUT);
 38c:	41 e0       	ldi	r20, 0x01	; 1
 38e:	63 e0       	ldi	r22, 0x03	; 3
 390:	83 e0       	ldi	r24, 0x03	; 3
 392:	0e 94 c2 00 	call	0x184	; 0x184 <Dio_ConfigChannel>
 396:	08 95       	ret

00000398 <Led_ON>:
}
void Led_ON(Led_ID led)
{
	switch (led)
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	51 f0       	breq	.+20     	; 0x3b0 <Led_ON+0x18>
 39c:	18 f0       	brcs	.+6      	; 0x3a4 <Led_ON+0xc>
 39e:	82 30       	cpi	r24, 0x02	; 2
 3a0:	91 f4       	brne	.+36     	; 0x3c6 <Led_ON+0x2e>
 3a2:	0c c0       	rjmp	.+24     	; 0x3bc <Led_ON+0x24>
	{
	case LED0:
#if (LED0_CONNECTION == FORWARD)
		Dio_WriteChannel(LED0_PORT,LED0_CHANNEL,STD_HIGH);
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	62 e0       	ldi	r22, 0x02	; 2
 3a8:	82 e0       	ldi	r24, 0x02	; 2
 3aa:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_WriteChannel>
#elif (LED0_CONNECTION == REVERSE)
		Dio_WriteChannel(LED0_PORT,LED0_CHANNEL,STD_LOW);
#endif
		break;
 3ae:	08 95       	ret
	case LED1:
#if (LED1_CONNECTION == FORWARD)
		Dio_WriteChannel(LED1_PORT,LED1_CHANNEL,STD_HIGH);
 3b0:	41 e0       	ldi	r20, 0x01	; 1
 3b2:	67 e0       	ldi	r22, 0x07	; 7
 3b4:	82 e0       	ldi	r24, 0x02	; 2
 3b6:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_WriteChannel>
#elif (LED1_CONNECTION == REVERSE)
		Dio_WriteChannel(LED1_PORT,LED1_CHANNEL,STD_LOW);
#endif
		break;
 3ba:	08 95       	ret
	case LED2:
#if (LED2_CONNECTION == FORWARD)
		Dio_WriteChannel(LED2_PORT,LED2_CHANNEL,STD_HIGH);
 3bc:	41 e0       	ldi	r20, 0x01	; 1
 3be:	63 e0       	ldi	r22, 0x03	; 3
 3c0:	83 e0       	ldi	r24, 0x03	; 3
 3c2:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_WriteChannel>
 3c6:	08 95       	ret

000003c8 <Led_OFF>:
		break;
	}
}
void Led_OFF(Led_ID led)
{
	switch (led)
 3c8:	81 30       	cpi	r24, 0x01	; 1
 3ca:	51 f0       	breq	.+20     	; 0x3e0 <Led_OFF+0x18>
 3cc:	18 f0       	brcs	.+6      	; 0x3d4 <Led_OFF+0xc>
 3ce:	82 30       	cpi	r24, 0x02	; 2
 3d0:	91 f4       	brne	.+36     	; 0x3f6 <Led_OFF+0x2e>
 3d2:	0c c0       	rjmp	.+24     	; 0x3ec <Led_OFF+0x24>
	{
	case LED0:
#if (LED0_CONNECTION == FORWARD)
		Dio_WriteChannel(LED0_PORT,LED0_CHANNEL,STD_LOW);
 3d4:	40 e0       	ldi	r20, 0x00	; 0
 3d6:	62 e0       	ldi	r22, 0x02	; 2
 3d8:	82 e0       	ldi	r24, 0x02	; 2
 3da:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_WriteChannel>
#elif (LED0_CONNECTION == REVERSE)
		Dio_WriteChannel(LED0_PORT,LED0_CHANNEL,STD_HIGH);
#endif

		break;
 3de:	08 95       	ret
	case LED1:
#if (LED1_CONNECTION == FORWARD)
		Dio_WriteChannel(LED1_PORT,LED1_CHANNEL,STD_LOW);
 3e0:	40 e0       	ldi	r20, 0x00	; 0
 3e2:	67 e0       	ldi	r22, 0x07	; 7
 3e4:	82 e0       	ldi	r24, 0x02	; 2
 3e6:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_WriteChannel>
#elif (LED1_CONNECTION == REVERSE)
		Dio_WriteChannel(LED1_PORT,LED1_CHANNEL,STD_HIGH);
#endif
		break;
 3ea:	08 95       	ret
	case LED2:
#if (LED2_CONNECTION == FORWARD)
		Dio_WriteChannel(LED2_PORT,LED2_CHANNEL,STD_LOW);
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	63 e0       	ldi	r22, 0x03	; 3
 3f0:	83 e0       	ldi	r24, 0x03	; 3
 3f2:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_WriteChannel>
 3f6:	08 95       	ret

000003f8 <main>:
#include "BIT_MATH.h"
#include "avr/io.h"
#include "Led_Interface.h"
int main(void)
{
	Led_Init();
 3f8:	0e 94 bc 01 	call	0x378	; 0x378 <Led_Init>
	/*	Reset CPU every 2.1 s	*/
SET_BIT(WDTCR,3);	
 3fc:	81 b5       	in	r24, 0x21	; 33
 3fe:	88 60       	ori	r24, 0x08	; 8
 400:	81 bd       	out	0x21, r24	; 33
WDTCR|=0x07;
 402:	81 b5       	in	r24, 0x21	; 33
 404:	87 60       	ori	r24, 0x07	; 7
 406:	81 bd       	out	0x21, r24	; 33

Led_ON(LED0);
 408:	80 e0       	ldi	r24, 0x00	; 0
 40a:	0e 94 cc 01 	call	0x398	; 0x398 <Led_ON>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40e:	2f ef       	ldi	r18, 0xFF	; 255
 410:	83 ed       	ldi	r24, 0xD3	; 211
 412:	90 e3       	ldi	r25, 0x30	; 48
 414:	21 50       	subi	r18, 0x01	; 1
 416:	80 40       	sbci	r24, 0x00	; 0
 418:	90 40       	sbci	r25, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <main+0x1c>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <main+0x26>
 41e:	00 00       	nop
_delay_ms(1000);
Led_OFF(LED0);
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <Led_OFF>
 426:	2f ef       	ldi	r18, 0xFF	; 255
 428:	83 ed       	ldi	r24, 0xD3	; 211
 42a:	90 e3       	ldi	r25, 0x30	; 48
 42c:	21 50       	subi	r18, 0x01	; 1
 42e:	80 40       	sbci	r24, 0x00	; 0
 430:	90 40       	sbci	r25, 0x00	; 0
 432:	e1 f7       	brne	.-8      	; 0x42c <main+0x34>
 434:	00 c0       	rjmp	.+0      	; 0x436 <main+0x3e>
 436:	00 00       	nop
_delay_ms(1000);


    while(1)
    {
		asm("WDR");
 438:	a8 95       	wdr
 43a:	fe cf       	rjmp	.-4      	; 0x438 <main+0x40>

0000043c <vfprintf>:
 43c:	a2 e1       	ldi	r26, 0x12	; 18
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	e4 e2       	ldi	r30, 0x24	; 36
 442:	f2 e0       	ldi	r31, 0x02	; 2
 444:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__prologue_saves__>
 448:	7c 01       	movw	r14, r24
 44a:	1b 01       	movw	r2, r22
 44c:	6a 01       	movw	r12, r20
 44e:	fc 01       	movw	r30, r24
 450:	17 82       	std	Z+7, r1	; 0x07
 452:	16 82       	std	Z+6, r1	; 0x06
 454:	83 81       	ldd	r24, Z+3	; 0x03
 456:	81 fd       	sbrc	r24, 1
 458:	03 c0       	rjmp	.+6      	; 0x460 <vfprintf+0x24>
 45a:	6b c3       	rjmp	.+1750   	; 0xb32 <__stack+0x2d3>
 45c:	65 01       	movw	r12, r10
 45e:	05 c0       	rjmp	.+10     	; 0x46a <vfprintf+0x2e>
 460:	88 24       	eor	r8, r8
 462:	83 94       	inc	r8
 464:	91 2c       	mov	r9, r1
 466:	8c 0e       	add	r8, r28
 468:	9d 1e       	adc	r9, r29
 46a:	f7 01       	movw	r30, r14
 46c:	93 81       	ldd	r25, Z+3	; 0x03
 46e:	f1 01       	movw	r30, r2
 470:	93 fd       	sbrc	r25, 3
 472:	85 91       	lpm	r24, Z+
 474:	93 ff       	sbrs	r25, 3
 476:	81 91       	ld	r24, Z+
 478:	1f 01       	movw	r2, r30
 47a:	88 23       	and	r24, r24
 47c:	09 f4       	brne	.+2      	; 0x480 <vfprintf+0x44>
 47e:	55 c3       	rjmp	.+1706   	; 0xb2a <__stack+0x2cb>
 480:	85 32       	cpi	r24, 0x25	; 37
 482:	39 f4       	brne	.+14     	; 0x492 <vfprintf+0x56>
 484:	93 fd       	sbrc	r25, 3
 486:	85 91       	lpm	r24, Z+
 488:	93 ff       	sbrs	r25, 3
 48a:	81 91       	ld	r24, Z+
 48c:	1f 01       	movw	r2, r30
 48e:	85 32       	cpi	r24, 0x25	; 37
 490:	31 f4       	brne	.+12     	; 0x49e <vfprintf+0x62>
 492:	b7 01       	movw	r22, r14
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 49a:	56 01       	movw	r10, r12
 49c:	df cf       	rjmp	.-66     	; 0x45c <vfprintf+0x20>
 49e:	71 2c       	mov	r7, r1
 4a0:	61 2c       	mov	r6, r1
 4a2:	20 e0       	ldi	r18, 0x00	; 0
 4a4:	20 32       	cpi	r18, 0x20	; 32
 4a6:	a8 f4       	brcc	.+42     	; 0x4d2 <vfprintf+0x96>
 4a8:	8b 32       	cpi	r24, 0x2B	; 43
 4aa:	61 f0       	breq	.+24     	; 0x4c4 <vfprintf+0x88>
 4ac:	28 f4       	brcc	.+10     	; 0x4b8 <vfprintf+0x7c>
 4ae:	80 32       	cpi	r24, 0x20	; 32
 4b0:	51 f0       	breq	.+20     	; 0x4c6 <vfprintf+0x8a>
 4b2:	83 32       	cpi	r24, 0x23	; 35
 4b4:	71 f4       	brne	.+28     	; 0x4d2 <vfprintf+0x96>
 4b6:	0b c0       	rjmp	.+22     	; 0x4ce <vfprintf+0x92>
 4b8:	8d 32       	cpi	r24, 0x2D	; 45
 4ba:	39 f0       	breq	.+14     	; 0x4ca <vfprintf+0x8e>
 4bc:	80 33       	cpi	r24, 0x30	; 48
 4be:	49 f4       	brne	.+18     	; 0x4d2 <vfprintf+0x96>
 4c0:	21 60       	ori	r18, 0x01	; 1
 4c2:	28 c0       	rjmp	.+80     	; 0x514 <vfprintf+0xd8>
 4c4:	22 60       	ori	r18, 0x02	; 2
 4c6:	24 60       	ori	r18, 0x04	; 4
 4c8:	25 c0       	rjmp	.+74     	; 0x514 <vfprintf+0xd8>
 4ca:	28 60       	ori	r18, 0x08	; 8
 4cc:	23 c0       	rjmp	.+70     	; 0x514 <vfprintf+0xd8>
 4ce:	20 61       	ori	r18, 0x10	; 16
 4d0:	21 c0       	rjmp	.+66     	; 0x514 <vfprintf+0xd8>
 4d2:	27 fd       	sbrc	r18, 7
 4d4:	27 c0       	rjmp	.+78     	; 0x524 <vfprintf+0xe8>
 4d6:	38 2f       	mov	r19, r24
 4d8:	30 53       	subi	r19, 0x30	; 48
 4da:	3a 30       	cpi	r19, 0x0A	; 10
 4dc:	78 f4       	brcc	.+30     	; 0x4fc <vfprintf+0xc0>
 4de:	26 ff       	sbrs	r18, 6
 4e0:	06 c0       	rjmp	.+12     	; 0x4ee <vfprintf+0xb2>
 4e2:	fa e0       	ldi	r31, 0x0A	; 10
 4e4:	7f 9e       	mul	r7, r31
 4e6:	30 0d       	add	r19, r0
 4e8:	11 24       	eor	r1, r1
 4ea:	73 2e       	mov	r7, r19
 4ec:	13 c0       	rjmp	.+38     	; 0x514 <vfprintf+0xd8>
 4ee:	4a e0       	ldi	r20, 0x0A	; 10
 4f0:	64 9e       	mul	r6, r20
 4f2:	30 0d       	add	r19, r0
 4f4:	11 24       	eor	r1, r1
 4f6:	63 2e       	mov	r6, r19
 4f8:	20 62       	ori	r18, 0x20	; 32
 4fa:	0c c0       	rjmp	.+24     	; 0x514 <vfprintf+0xd8>
 4fc:	8e 32       	cpi	r24, 0x2E	; 46
 4fe:	21 f4       	brne	.+8      	; 0x508 <vfprintf+0xcc>
 500:	26 fd       	sbrc	r18, 6
 502:	13 c3       	rjmp	.+1574   	; 0xb2a <__stack+0x2cb>
 504:	20 64       	ori	r18, 0x40	; 64
 506:	06 c0       	rjmp	.+12     	; 0x514 <vfprintf+0xd8>
 508:	8c 36       	cpi	r24, 0x6C	; 108
 50a:	11 f4       	brne	.+4      	; 0x510 <vfprintf+0xd4>
 50c:	20 68       	ori	r18, 0x80	; 128
 50e:	02 c0       	rjmp	.+4      	; 0x514 <vfprintf+0xd8>
 510:	88 36       	cpi	r24, 0x68	; 104
 512:	41 f4       	brne	.+16     	; 0x524 <vfprintf+0xe8>
 514:	f1 01       	movw	r30, r2
 516:	93 fd       	sbrc	r25, 3
 518:	85 91       	lpm	r24, Z+
 51a:	93 ff       	sbrs	r25, 3
 51c:	81 91       	ld	r24, Z+
 51e:	1f 01       	movw	r2, r30
 520:	81 11       	cpse	r24, r1
 522:	c0 cf       	rjmp	.-128    	; 0x4a4 <vfprintf+0x68>
 524:	98 2f       	mov	r25, r24
 526:	95 54       	subi	r25, 0x45	; 69
 528:	93 30       	cpi	r25, 0x03	; 3
 52a:	18 f4       	brcc	.+6      	; 0x532 <vfprintf+0xf6>
 52c:	20 61       	ori	r18, 0x10	; 16
 52e:	80 5e       	subi	r24, 0xE0	; 224
 530:	06 c0       	rjmp	.+12     	; 0x53e <vfprintf+0x102>
 532:	98 2f       	mov	r25, r24
 534:	95 56       	subi	r25, 0x65	; 101
 536:	93 30       	cpi	r25, 0x03	; 3
 538:	08 f0       	brcs	.+2      	; 0x53c <vfprintf+0x100>
 53a:	a4 c1       	rjmp	.+840    	; 0x884 <__stack+0x25>
 53c:	2f 7e       	andi	r18, 0xEF	; 239
 53e:	26 fd       	sbrc	r18, 6
 540:	02 c0       	rjmp	.+4      	; 0x546 <vfprintf+0x10a>
 542:	16 e0       	ldi	r17, 0x06	; 6
 544:	71 2e       	mov	r7, r17
 546:	bf e3       	ldi	r27, 0x3F	; 63
 548:	5b 2e       	mov	r5, r27
 54a:	52 22       	and	r5, r18
 54c:	85 36       	cpi	r24, 0x65	; 101
 54e:	19 f4       	brne	.+6      	; 0x556 <vfprintf+0x11a>
 550:	f0 e4       	ldi	r31, 0x40	; 64
 552:	5f 2a       	or	r5, r31
 554:	07 c0       	rjmp	.+14     	; 0x564 <vfprintf+0x128>
 556:	86 36       	cpi	r24, 0x66	; 102
 558:	19 f4       	brne	.+6      	; 0x560 <vfprintf+0x124>
 55a:	40 e8       	ldi	r20, 0x80	; 128
 55c:	54 2a       	or	r5, r20
 55e:	02 c0       	rjmp	.+4      	; 0x564 <vfprintf+0x128>
 560:	71 10       	cpse	r7, r1
 562:	7a 94       	dec	r7
 564:	57 fe       	sbrs	r5, 7
 566:	07 c0       	rjmp	.+14     	; 0x576 <vfprintf+0x13a>
 568:	5b e3       	ldi	r21, 0x3B	; 59
 56a:	57 15       	cp	r21, r7
 56c:	48 f0       	brcs	.+18     	; 0x580 <vfprintf+0x144>
 56e:	47 2c       	mov	r4, r7
 570:	43 94       	inc	r4
 572:	27 e0       	ldi	r18, 0x07	; 7
 574:	0d c0       	rjmp	.+26     	; 0x590 <vfprintf+0x154>
 576:	87 e0       	ldi	r24, 0x07	; 7
 578:	87 15       	cp	r24, r7
 57a:	30 f0       	brcs	.+12     	; 0x588 <vfprintf+0x14c>
 57c:	27 2d       	mov	r18, r7
 57e:	07 c0       	rjmp	.+14     	; 0x58e <vfprintf+0x152>
 580:	27 e0       	ldi	r18, 0x07	; 7
 582:	ac e3       	ldi	r26, 0x3C	; 60
 584:	4a 2e       	mov	r4, r26
 586:	04 c0       	rjmp	.+8      	; 0x590 <vfprintf+0x154>
 588:	27 e0       	ldi	r18, 0x07	; 7
 58a:	f7 e0       	ldi	r31, 0x07	; 7
 58c:	7f 2e       	mov	r7, r31
 58e:	41 2c       	mov	r4, r1
 590:	56 01       	movw	r10, r12
 592:	94 e0       	ldi	r25, 0x04	; 4
 594:	a9 0e       	add	r10, r25
 596:	b1 1c       	adc	r11, r1
 598:	f6 01       	movw	r30, r12
 59a:	60 81       	ld	r22, Z
 59c:	71 81       	ldd	r23, Z+1	; 0x01
 59e:	82 81       	ldd	r24, Z+2	; 0x02
 5a0:	93 81       	ldd	r25, Z+3	; 0x03
 5a2:	04 2d       	mov	r16, r4
 5a4:	a4 01       	movw	r20, r8
 5a6:	0e 94 d7 05 	call	0xbae	; 0xbae <__ftoa_engine>
 5aa:	8c 01       	movw	r16, r24
 5ac:	49 81       	ldd	r20, Y+1	; 0x01
 5ae:	4c 87       	std	Y+12, r20	; 0x0c
 5b0:	40 ff       	sbrs	r20, 0
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <vfprintf+0x17c>
 5b4:	43 ff       	sbrs	r20, 3
 5b6:	07 c0       	rjmp	.+14     	; 0x5c6 <vfprintf+0x18a>
 5b8:	51 fc       	sbrc	r5, 1
 5ba:	08 c0       	rjmp	.+16     	; 0x5cc <vfprintf+0x190>
 5bc:	52 fe       	sbrs	r5, 2
 5be:	09 c0       	rjmp	.+18     	; 0x5d2 <vfprintf+0x196>
 5c0:	e0 e2       	ldi	r30, 0x20	; 32
 5c2:	de 2e       	mov	r13, r30
 5c4:	07 c0       	rjmp	.+14     	; 0x5d4 <vfprintf+0x198>
 5c6:	7d e2       	ldi	r23, 0x2D	; 45
 5c8:	d7 2e       	mov	r13, r23
 5ca:	04 c0       	rjmp	.+8      	; 0x5d4 <vfprintf+0x198>
 5cc:	6b e2       	ldi	r22, 0x2B	; 43
 5ce:	d6 2e       	mov	r13, r22
 5d0:	01 c0       	rjmp	.+2      	; 0x5d4 <vfprintf+0x198>
 5d2:	d1 2c       	mov	r13, r1
 5d4:	8c 85       	ldd	r24, Y+12	; 0x0c
 5d6:	8c 70       	andi	r24, 0x0C	; 12
 5d8:	a1 f1       	breq	.+104    	; 0x642 <vfprintf+0x206>
 5da:	dd 20       	and	r13, r13
 5dc:	11 f0       	breq	.+4      	; 0x5e2 <vfprintf+0x1a6>
 5de:	84 e0       	ldi	r24, 0x04	; 4
 5e0:	01 c0       	rjmp	.+2      	; 0x5e4 <vfprintf+0x1a8>
 5e2:	83 e0       	ldi	r24, 0x03	; 3
 5e4:	86 15       	cp	r24, r6
 5e6:	10 f0       	brcs	.+4      	; 0x5ec <vfprintf+0x1b0>
 5e8:	61 2c       	mov	r6, r1
 5ea:	0b c0       	rjmp	.+22     	; 0x602 <vfprintf+0x1c6>
 5ec:	68 1a       	sub	r6, r24
 5ee:	53 fc       	sbrc	r5, 3
 5f0:	08 c0       	rjmp	.+16     	; 0x602 <vfprintf+0x1c6>
 5f2:	b7 01       	movw	r22, r14
 5f4:	80 e2       	ldi	r24, 0x20	; 32
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 5fc:	6a 94       	dec	r6
 5fe:	c9 f7       	brne	.-14     	; 0x5f2 <vfprintf+0x1b6>
 600:	f3 cf       	rjmp	.-26     	; 0x5e8 <vfprintf+0x1ac>
 602:	dd 20       	and	r13, r13
 604:	29 f0       	breq	.+10     	; 0x610 <vfprintf+0x1d4>
 606:	b7 01       	movw	r22, r14
 608:	8d 2d       	mov	r24, r13
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 610:	5c 85       	ldd	r21, Y+12	; 0x0c
 612:	53 fd       	sbrc	r21, 3
 614:	03 c0       	rjmp	.+6      	; 0x61c <vfprintf+0x1e0>
 616:	08 e5       	ldi	r16, 0x58	; 88
 618:	10 e0       	ldi	r17, 0x00	; 0
 61a:	0c c0       	rjmp	.+24     	; 0x634 <vfprintf+0x1f8>
 61c:	04 e5       	ldi	r16, 0x54	; 84
 61e:	10 e0       	ldi	r17, 0x00	; 0
 620:	09 c0       	rjmp	.+18     	; 0x634 <vfprintf+0x1f8>
 622:	51 10       	cpse	r5, r1
 624:	80 52       	subi	r24, 0x20	; 32
 626:	b7 01       	movw	r22, r14
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 62e:	0f 5f       	subi	r16, 0xFF	; 255
 630:	1f 4f       	sbci	r17, 0xFF	; 255
 632:	02 c0       	rjmp	.+4      	; 0x638 <vfprintf+0x1fc>
 634:	80 e1       	ldi	r24, 0x10	; 16
 636:	58 22       	and	r5, r24
 638:	f8 01       	movw	r30, r16
 63a:	84 91       	lpm	r24, Z
 63c:	81 11       	cpse	r24, r1
 63e:	f1 cf       	rjmp	.-30     	; 0x622 <vfprintf+0x1e6>
 640:	71 c2       	rjmp	.+1250   	; 0xb24 <__stack+0x2c5>
 642:	57 fe       	sbrs	r5, 7
 644:	0e c0       	rjmp	.+28     	; 0x662 <vfprintf+0x226>
 646:	40 0e       	add	r4, r16
 648:	4c 85       	ldd	r20, Y+12	; 0x0c
 64a:	44 ff       	sbrs	r20, 4
 64c:	04 c0       	rjmp	.+8      	; 0x656 <vfprintf+0x21a>
 64e:	8a 81       	ldd	r24, Y+2	; 0x02
 650:	81 33       	cpi	r24, 0x31	; 49
 652:	09 f4       	brne	.+2      	; 0x656 <vfprintf+0x21a>
 654:	4a 94       	dec	r4
 656:	14 14       	cp	r1, r4
 658:	4c f5       	brge	.+82     	; 0x6ac <vfprintf+0x270>
 65a:	58 e0       	ldi	r21, 0x08	; 8
 65c:	54 15       	cp	r21, r4
 65e:	48 f1       	brcs	.+82     	; 0x6b2 <vfprintf+0x276>
 660:	2c c0       	rjmp	.+88     	; 0x6ba <vfprintf+0x27e>
 662:	56 fc       	sbrc	r5, 6
 664:	2a c0       	rjmp	.+84     	; 0x6ba <vfprintf+0x27e>
 666:	87 2d       	mov	r24, r7
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	80 17       	cp	r24, r16
 66c:	91 07       	cpc	r25, r17
 66e:	44 f0       	brlt	.+16     	; 0x680 <vfprintf+0x244>
 670:	0c 3f       	cpi	r16, 0xFC	; 252
 672:	8f ef       	ldi	r24, 0xFF	; 255
 674:	18 07       	cpc	r17, r24
 676:	24 f0       	brlt	.+8      	; 0x680 <vfprintf+0x244>
 678:	90 e8       	ldi	r25, 0x80	; 128
 67a:	59 2a       	or	r5, r25
 67c:	01 c0       	rjmp	.+2      	; 0x680 <vfprintf+0x244>
 67e:	7a 94       	dec	r7
 680:	77 20       	and	r7, r7
 682:	49 f0       	breq	.+18     	; 0x696 <vfprintf+0x25a>
 684:	e2 e0       	ldi	r30, 0x02	; 2
 686:	f0 e0       	ldi	r31, 0x00	; 0
 688:	ec 0f       	add	r30, r28
 68a:	fd 1f       	adc	r31, r29
 68c:	e7 0d       	add	r30, r7
 68e:	f1 1d       	adc	r31, r1
 690:	80 81       	ld	r24, Z
 692:	80 33       	cpi	r24, 0x30	; 48
 694:	a1 f3       	breq	.-24     	; 0x67e <vfprintf+0x242>
 696:	57 fe       	sbrs	r5, 7
 698:	10 c0       	rjmp	.+32     	; 0x6ba <vfprintf+0x27e>
 69a:	47 2c       	mov	r4, r7
 69c:	43 94       	inc	r4
 69e:	87 2d       	mov	r24, r7
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	08 17       	cp	r16, r24
 6a4:	19 07       	cpc	r17, r25
 6a6:	44 f4       	brge	.+16     	; 0x6b8 <vfprintf+0x27c>
 6a8:	70 1a       	sub	r7, r16
 6aa:	07 c0       	rjmp	.+14     	; 0x6ba <vfprintf+0x27e>
 6ac:	44 24       	eor	r4, r4
 6ae:	43 94       	inc	r4
 6b0:	04 c0       	rjmp	.+8      	; 0x6ba <vfprintf+0x27e>
 6b2:	58 e0       	ldi	r21, 0x08	; 8
 6b4:	45 2e       	mov	r4, r21
 6b6:	01 c0       	rjmp	.+2      	; 0x6ba <vfprintf+0x27e>
 6b8:	71 2c       	mov	r7, r1
 6ba:	57 fe       	sbrs	r5, 7
 6bc:	07 c0       	rjmp	.+14     	; 0x6cc <vfprintf+0x290>
 6be:	10 16       	cp	r1, r16
 6c0:	11 06       	cpc	r1, r17
 6c2:	3c f4       	brge	.+14     	; 0x6d2 <vfprintf+0x296>
 6c4:	98 01       	movw	r18, r16
 6c6:	2f 5f       	subi	r18, 0xFF	; 255
 6c8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <vfprintf+0x29a>
 6cc:	25 e0       	ldi	r18, 0x05	; 5
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <vfprintf+0x29a>
 6d2:	21 e0       	ldi	r18, 0x01	; 1
 6d4:	30 e0       	ldi	r19, 0x00	; 0
 6d6:	dd 20       	and	r13, r13
 6d8:	11 f0       	breq	.+4      	; 0x6de <vfprintf+0x2a2>
 6da:	2f 5f       	subi	r18, 0xFF	; 255
 6dc:	3f 4f       	sbci	r19, 0xFF	; 255
 6de:	77 20       	and	r7, r7
 6e0:	31 f0       	breq	.+12     	; 0x6ee <vfprintf+0x2b2>
 6e2:	47 2d       	mov	r20, r7
 6e4:	50 e0       	ldi	r21, 0x00	; 0
 6e6:	4f 5f       	subi	r20, 0xFF	; 255
 6e8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ea:	24 0f       	add	r18, r20
 6ec:	35 1f       	adc	r19, r21
 6ee:	46 2d       	mov	r20, r6
 6f0:	50 e0       	ldi	r21, 0x00	; 0
 6f2:	24 17       	cp	r18, r20
 6f4:	35 07       	cpc	r19, r21
 6f6:	14 f4       	brge	.+4      	; 0x6fc <vfprintf+0x2c0>
 6f8:	62 1a       	sub	r6, r18
 6fa:	01 c0       	rjmp	.+2      	; 0x6fe <vfprintf+0x2c2>
 6fc:	61 2c       	mov	r6, r1
 6fe:	85 2d       	mov	r24, r5
 700:	89 70       	andi	r24, 0x09	; 9
 702:	49 f4       	brne	.+18     	; 0x716 <vfprintf+0x2da>
 704:	06 c0       	rjmp	.+12     	; 0x712 <vfprintf+0x2d6>
 706:	b7 01       	movw	r22, r14
 708:	80 e2       	ldi	r24, 0x20	; 32
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 710:	6a 94       	dec	r6
 712:	61 10       	cpse	r6, r1
 714:	f8 cf       	rjmp	.-16     	; 0x706 <vfprintf+0x2ca>
 716:	dd 20       	and	r13, r13
 718:	29 f0       	breq	.+10     	; 0x724 <vfprintf+0x2e8>
 71a:	b7 01       	movw	r22, r14
 71c:	8d 2d       	mov	r24, r13
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 724:	53 fc       	sbrc	r5, 3
 726:	09 c0       	rjmp	.+18     	; 0x73a <vfprintf+0x2fe>
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0x2fa>
 72a:	b7 01       	movw	r22, r14
 72c:	80 e3       	ldi	r24, 0x30	; 48
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 734:	6a 94       	dec	r6
 736:	61 10       	cpse	r6, r1
 738:	f8 cf       	rjmp	.-16     	; 0x72a <vfprintf+0x2ee>
 73a:	57 fe       	sbrs	r5, 7
 73c:	56 c0       	rjmp	.+172    	; 0x7ea <vfprintf+0x3ae>
 73e:	68 01       	movw	r12, r16
 740:	17 ff       	sbrs	r17, 7
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x30c>
 744:	c1 2c       	mov	r12, r1
 746:	d1 2c       	mov	r13, r1
 748:	20 e0       	ldi	r18, 0x00	; 0
 74a:	30 e0       	ldi	r19, 0x00	; 0
 74c:	a8 01       	movw	r20, r16
 74e:	44 19       	sub	r20, r4
 750:	51 09       	sbc	r21, r1
 752:	5e 87       	std	Y+14, r21	; 0x0e
 754:	4d 87       	std	Y+13, r20	; 0x0d
 756:	28 01       	movw	r4, r16
 758:	4c 18       	sub	r4, r12
 75a:	5d 08       	sbc	r5, r13
 75c:	48 0c       	add	r4, r8
 75e:	59 1c       	adc	r5, r9
 760:	87 2d       	mov	r24, r7
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	44 27       	eor	r20, r20
 766:	55 27       	eor	r21, r21
 768:	48 1b       	sub	r20, r24
 76a:	59 0b       	sbc	r21, r25
 76c:	58 8b       	std	Y+16, r21	; 0x10
 76e:	4f 87       	std	Y+15, r20	; 0x0f
 770:	5f ef       	ldi	r21, 0xFF	; 255
 772:	c5 16       	cp	r12, r21
 774:	d5 06       	cpc	r13, r21
 776:	49 f4       	brne	.+18     	; 0x78a <vfprintf+0x34e>
 778:	b7 01       	movw	r22, r14
 77a:	8e e2       	ldi	r24, 0x2E	; 46
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	2a 8b       	std	Y+18, r18	; 0x12
 780:	39 8b       	std	Y+17, r19	; 0x11
 782:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 786:	39 89       	ldd	r19, Y+17	; 0x11
 788:	2a 89       	ldd	r18, Y+18	; 0x12
 78a:	0c 15       	cp	r16, r12
 78c:	1d 05       	cpc	r17, r13
 78e:	54 f0       	brlt	.+20     	; 0x7a4 <vfprintf+0x368>
 790:	4d 85       	ldd	r20, Y+13	; 0x0d
 792:	5e 85       	ldd	r21, Y+14	; 0x0e
 794:	4c 15       	cp	r20, r12
 796:	5d 05       	cpc	r21, r13
 798:	2c f4       	brge	.+10     	; 0x7a4 <vfprintf+0x368>
 79a:	f2 01       	movw	r30, r4
 79c:	e2 0f       	add	r30, r18
 79e:	f3 1f       	adc	r31, r19
 7a0:	81 81       	ldd	r24, Z+1	; 0x01
 7a2:	01 c0       	rjmp	.+2      	; 0x7a6 <vfprintf+0x36a>
 7a4:	80 e3       	ldi	r24, 0x30	; 48
 7a6:	51 e0       	ldi	r21, 0x01	; 1
 7a8:	c5 1a       	sub	r12, r21
 7aa:	d1 08       	sbc	r13, r1
 7ac:	2f 5f       	subi	r18, 0xFF	; 255
 7ae:	3f 4f       	sbci	r19, 0xFF	; 255
 7b0:	4f 85       	ldd	r20, Y+15	; 0x0f
 7b2:	58 89       	ldd	r21, Y+16	; 0x10
 7b4:	c4 16       	cp	r12, r20
 7b6:	d5 06       	cpc	r13, r21
 7b8:	4c f0       	brlt	.+18     	; 0x7cc <vfprintf+0x390>
 7ba:	b7 01       	movw	r22, r14
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	2a 8b       	std	Y+18, r18	; 0x12
 7c0:	39 8b       	std	Y+17, r19	; 0x11
 7c2:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 7c6:	2a 89       	ldd	r18, Y+18	; 0x12
 7c8:	39 89       	ldd	r19, Y+17	; 0x11
 7ca:	d2 cf       	rjmp	.-92     	; 0x770 <vfprintf+0x334>
 7cc:	c0 16       	cp	r12, r16
 7ce:	d1 06       	cpc	r13, r17
 7d0:	49 f4       	brne	.+18     	; 0x7e4 <vfprintf+0x3a8>
 7d2:	9a 81       	ldd	r25, Y+2	; 0x02
 7d4:	96 33       	cpi	r25, 0x36	; 54
 7d6:	28 f4       	brcc	.+10     	; 0x7e2 <vfprintf+0x3a6>
 7d8:	95 33       	cpi	r25, 0x35	; 53
 7da:	21 f4       	brne	.+8      	; 0x7e4 <vfprintf+0x3a8>
 7dc:	5c 85       	ldd	r21, Y+12	; 0x0c
 7de:	54 fd       	sbrc	r21, 4
 7e0:	01 c0       	rjmp	.+2      	; 0x7e4 <vfprintf+0x3a8>
 7e2:	81 e3       	ldi	r24, 0x31	; 49
 7e4:	b7 01       	movw	r22, r14
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	4a c0       	rjmp	.+148    	; 0x87e <__stack+0x1f>
 7ea:	8a 81       	ldd	r24, Y+2	; 0x02
 7ec:	81 33       	cpi	r24, 0x31	; 49
 7ee:	19 f0       	breq	.+6      	; 0x7f6 <vfprintf+0x3ba>
 7f0:	4c 85       	ldd	r20, Y+12	; 0x0c
 7f2:	4f 7e       	andi	r20, 0xEF	; 239
 7f4:	4c 87       	std	Y+12, r20	; 0x0c
 7f6:	b7 01       	movw	r22, r14
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 7fe:	71 10       	cpse	r7, r1
 800:	05 c0       	rjmp	.+10     	; 0x80c <vfprintf+0x3d0>
 802:	54 fe       	sbrs	r5, 4
 804:	16 c0       	rjmp	.+44     	; 0x832 <vfprintf+0x3f6>
 806:	85 e4       	ldi	r24, 0x45	; 69
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	15 c0       	rjmp	.+42     	; 0x836 <vfprintf+0x3fa>
 80c:	b7 01       	movw	r22, r14
 80e:	8e e2       	ldi	r24, 0x2E	; 46
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 816:	42 e0       	ldi	r20, 0x02	; 2
 818:	d4 2e       	mov	r13, r20
 81a:	f4 01       	movw	r30, r8
 81c:	ed 0d       	add	r30, r13
 81e:	f1 1d       	adc	r31, r1
 820:	d3 94       	inc	r13
 822:	b7 01       	movw	r22, r14
 824:	80 81       	ld	r24, Z
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 82c:	7a 94       	dec	r7
 82e:	a9 f7       	brne	.-22     	; 0x81a <vfprintf+0x3de>
 830:	e8 cf       	rjmp	.-48     	; 0x802 <vfprintf+0x3c6>
 832:	85 e6       	ldi	r24, 0x65	; 101
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	b7 01       	movw	r22, r14
 838:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 83c:	17 fd       	sbrc	r17, 7
 83e:	06 c0       	rjmp	.+12     	; 0x84c <vfprintf+0x410>
 840:	01 15       	cp	r16, r1
 842:	11 05       	cpc	r17, r1
 844:	41 f4       	brne	.+16     	; 0x856 <vfprintf+0x41a>
 846:	5c 85       	ldd	r21, Y+12	; 0x0c
 848:	54 ff       	sbrs	r21, 4
 84a:	05 c0       	rjmp	.+10     	; 0x856 <vfprintf+0x41a>
 84c:	11 95       	neg	r17
 84e:	01 95       	neg	r16
 850:	11 09       	sbc	r17, r1
 852:	8d e2       	ldi	r24, 0x2D	; 45
 854:	01 c0       	rjmp	.+2      	; 0x858 <vfprintf+0x41c>
 856:	8b e2       	ldi	r24, 0x2B	; 43
 858:	b7 01       	movw	r22, r14
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 860:	80 e3       	ldi	r24, 0x30	; 48
 862:	03 c0       	rjmp	.+6      	; 0x86a <__stack+0xb>
 864:	8f 5f       	subi	r24, 0xFF	; 255
 866:	0a 50       	subi	r16, 0x0A	; 10
 868:	11 09       	sbc	r17, r1
 86a:	0a 30       	cpi	r16, 0x0A	; 10
 86c:	11 05       	cpc	r17, r1
 86e:	d4 f7       	brge	.-12     	; 0x864 <__stack+0x5>
 870:	b7 01       	movw	r22, r14
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 878:	b7 01       	movw	r22, r14
 87a:	c8 01       	movw	r24, r16
 87c:	c0 96       	adiw	r24, 0x30	; 48
 87e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 882:	50 c1       	rjmp	.+672    	; 0xb24 <__stack+0x2c5>
 884:	83 36       	cpi	r24, 0x63	; 99
 886:	31 f0       	breq	.+12     	; 0x894 <__stack+0x35>
 888:	83 37       	cpi	r24, 0x73	; 115
 88a:	81 f0       	breq	.+32     	; 0x8ac <__stack+0x4d>
 88c:	83 35       	cpi	r24, 0x53	; 83
 88e:	09 f0       	breq	.+2      	; 0x892 <__stack+0x33>
 890:	5e c0       	rjmp	.+188    	; 0x94e <__stack+0xef>
 892:	24 c0       	rjmp	.+72     	; 0x8dc <__stack+0x7d>
 894:	56 01       	movw	r10, r12
 896:	82 e0       	ldi	r24, 0x02	; 2
 898:	a8 0e       	add	r10, r24
 89a:	b1 1c       	adc	r11, r1
 89c:	f6 01       	movw	r30, r12
 89e:	80 81       	ld	r24, Z
 8a0:	89 83       	std	Y+1, r24	; 0x01
 8a2:	cc 24       	eor	r12, r12
 8a4:	c3 94       	inc	r12
 8a6:	d1 2c       	mov	r13, r1
 8a8:	84 01       	movw	r16, r8
 8aa:	14 c0       	rjmp	.+40     	; 0x8d4 <__stack+0x75>
 8ac:	56 01       	movw	r10, r12
 8ae:	f2 e0       	ldi	r31, 0x02	; 2
 8b0:	af 0e       	add	r10, r31
 8b2:	b1 1c       	adc	r11, r1
 8b4:	f6 01       	movw	r30, r12
 8b6:	00 81       	ld	r16, Z
 8b8:	11 81       	ldd	r17, Z+1	; 0x01
 8ba:	26 ff       	sbrs	r18, 6
 8bc:	03 c0       	rjmp	.+6      	; 0x8c4 <__stack+0x65>
 8be:	67 2d       	mov	r22, r7
 8c0:	70 e0       	ldi	r23, 0x00	; 0
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <__stack+0x69>
 8c4:	6f ef       	ldi	r22, 0xFF	; 255
 8c6:	7f ef       	ldi	r23, 0xFF	; 255
 8c8:	c8 01       	movw	r24, r16
 8ca:	2a 8b       	std	Y+18, r18	; 0x12
 8cc:	0e 94 ba 06 	call	0xd74	; 0xd74 <strnlen>
 8d0:	6c 01       	movw	r12, r24
 8d2:	2a 89       	ldd	r18, Y+18	; 0x12
 8d4:	9f e7       	ldi	r25, 0x7F	; 127
 8d6:	59 2e       	mov	r5, r25
 8d8:	52 22       	and	r5, r18
 8da:	17 c0       	rjmp	.+46     	; 0x90a <__stack+0xab>
 8dc:	56 01       	movw	r10, r12
 8de:	f2 e0       	ldi	r31, 0x02	; 2
 8e0:	af 0e       	add	r10, r31
 8e2:	b1 1c       	adc	r11, r1
 8e4:	f6 01       	movw	r30, r12
 8e6:	00 81       	ld	r16, Z
 8e8:	11 81       	ldd	r17, Z+1	; 0x01
 8ea:	26 ff       	sbrs	r18, 6
 8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <__stack+0x95>
 8ee:	67 2d       	mov	r22, r7
 8f0:	70 e0       	ldi	r23, 0x00	; 0
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <__stack+0x99>
 8f4:	6f ef       	ldi	r22, 0xFF	; 255
 8f6:	7f ef       	ldi	r23, 0xFF	; 255
 8f8:	c8 01       	movw	r24, r16
 8fa:	2a 8b       	std	Y+18, r18	; 0x12
 8fc:	0e 94 af 06 	call	0xd5e	; 0xd5e <strnlen_P>
 900:	6c 01       	movw	r12, r24
 902:	2a 89       	ldd	r18, Y+18	; 0x12
 904:	80 e8       	ldi	r24, 0x80	; 128
 906:	58 2e       	mov	r5, r24
 908:	52 2a       	or	r5, r18
 90a:	53 fc       	sbrc	r5, 3
 90c:	1c c0       	rjmp	.+56     	; 0x946 <__stack+0xe7>
 90e:	06 c0       	rjmp	.+12     	; 0x91c <__stack+0xbd>
 910:	b7 01       	movw	r22, r14
 912:	80 e2       	ldi	r24, 0x20	; 32
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 91a:	6a 94       	dec	r6
 91c:	86 2d       	mov	r24, r6
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	c8 16       	cp	r12, r24
 922:	d9 06       	cpc	r13, r25
 924:	a8 f3       	brcs	.-22     	; 0x910 <__stack+0xb1>
 926:	0f c0       	rjmp	.+30     	; 0x946 <__stack+0xe7>
 928:	f8 01       	movw	r30, r16
 92a:	57 fc       	sbrc	r5, 7
 92c:	85 91       	lpm	r24, Z+
 92e:	57 fe       	sbrs	r5, 7
 930:	81 91       	ld	r24, Z+
 932:	8f 01       	movw	r16, r30
 934:	b7 01       	movw	r22, r14
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 93c:	61 10       	cpse	r6, r1
 93e:	6a 94       	dec	r6
 940:	f1 e0       	ldi	r31, 0x01	; 1
 942:	cf 1a       	sub	r12, r31
 944:	d1 08       	sbc	r13, r1
 946:	c1 14       	cp	r12, r1
 948:	d1 04       	cpc	r13, r1
 94a:	71 f7       	brne	.-36     	; 0x928 <__stack+0xc9>
 94c:	eb c0       	rjmp	.+470    	; 0xb24 <__stack+0x2c5>
 94e:	84 36       	cpi	r24, 0x64	; 100
 950:	11 f0       	breq	.+4      	; 0x956 <__stack+0xf7>
 952:	89 36       	cpi	r24, 0x69	; 105
 954:	51 f5       	brne	.+84     	; 0x9aa <__stack+0x14b>
 956:	56 01       	movw	r10, r12
 958:	27 ff       	sbrs	r18, 7
 95a:	09 c0       	rjmp	.+18     	; 0x96e <__stack+0x10f>
 95c:	44 e0       	ldi	r20, 0x04	; 4
 95e:	a4 0e       	add	r10, r20
 960:	b1 1c       	adc	r11, r1
 962:	f6 01       	movw	r30, r12
 964:	60 81       	ld	r22, Z
 966:	71 81       	ldd	r23, Z+1	; 0x01
 968:	82 81       	ldd	r24, Z+2	; 0x02
 96a:	93 81       	ldd	r25, Z+3	; 0x03
 96c:	0a c0       	rjmp	.+20     	; 0x982 <__stack+0x123>
 96e:	f2 e0       	ldi	r31, 0x02	; 2
 970:	af 0e       	add	r10, r31
 972:	b1 1c       	adc	r11, r1
 974:	f6 01       	movw	r30, r12
 976:	60 81       	ld	r22, Z
 978:	71 81       	ldd	r23, Z+1	; 0x01
 97a:	88 27       	eor	r24, r24
 97c:	77 fd       	sbrc	r23, 7
 97e:	80 95       	com	r24
 980:	98 2f       	mov	r25, r24
 982:	12 2f       	mov	r17, r18
 984:	1f 76       	andi	r17, 0x6F	; 111
 986:	97 ff       	sbrs	r25, 7
 988:	08 c0       	rjmp	.+16     	; 0x99a <__stack+0x13b>
 98a:	90 95       	com	r25
 98c:	80 95       	com	r24
 98e:	70 95       	com	r23
 990:	61 95       	neg	r22
 992:	7f 4f       	sbci	r23, 0xFF	; 255
 994:	8f 4f       	sbci	r24, 0xFF	; 255
 996:	9f 4f       	sbci	r25, 0xFF	; 255
 998:	10 68       	ori	r17, 0x80	; 128
 99a:	2a e0       	ldi	r18, 0x0A	; 10
 99c:	30 e0       	ldi	r19, 0x00	; 0
 99e:	a4 01       	movw	r20, r8
 9a0:	0e 94 f1 06 	call	0xde2	; 0xde2 <__ultoa_invert>
 9a4:	d8 2e       	mov	r13, r24
 9a6:	d8 18       	sub	r13, r8
 9a8:	40 c0       	rjmp	.+128    	; 0xa2a <__stack+0x1cb>
 9aa:	12 2f       	mov	r17, r18
 9ac:	85 37       	cpi	r24, 0x75	; 117
 9ae:	21 f4       	brne	.+8      	; 0x9b8 <__stack+0x159>
 9b0:	1f 7e       	andi	r17, 0xEF	; 239
 9b2:	2a e0       	ldi	r18, 0x0A	; 10
 9b4:	30 e0       	ldi	r19, 0x00	; 0
 9b6:	1f c0       	rjmp	.+62     	; 0x9f6 <__stack+0x197>
 9b8:	19 7f       	andi	r17, 0xF9	; 249
 9ba:	8f 36       	cpi	r24, 0x6F	; 111
 9bc:	a1 f0       	breq	.+40     	; 0x9e6 <__stack+0x187>
 9be:	20 f4       	brcc	.+8      	; 0x9c8 <__stack+0x169>
 9c0:	88 35       	cpi	r24, 0x58	; 88
 9c2:	09 f0       	breq	.+2      	; 0x9c6 <__stack+0x167>
 9c4:	b2 c0       	rjmp	.+356    	; 0xb2a <__stack+0x2cb>
 9c6:	0b c0       	rjmp	.+22     	; 0x9de <__stack+0x17f>
 9c8:	80 37       	cpi	r24, 0x70	; 112
 9ca:	21 f0       	breq	.+8      	; 0x9d4 <__stack+0x175>
 9cc:	88 37       	cpi	r24, 0x78	; 120
 9ce:	09 f0       	breq	.+2      	; 0x9d2 <__stack+0x173>
 9d0:	ac c0       	rjmp	.+344    	; 0xb2a <__stack+0x2cb>
 9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <__stack+0x177>
 9d4:	10 61       	ori	r17, 0x10	; 16
 9d6:	14 ff       	sbrs	r17, 4
 9d8:	09 c0       	rjmp	.+18     	; 0x9ec <__stack+0x18d>
 9da:	14 60       	ori	r17, 0x04	; 4
 9dc:	07 c0       	rjmp	.+14     	; 0x9ec <__stack+0x18d>
 9de:	24 ff       	sbrs	r18, 4
 9e0:	08 c0       	rjmp	.+16     	; 0x9f2 <__stack+0x193>
 9e2:	16 60       	ori	r17, 0x06	; 6
 9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <__stack+0x193>
 9e6:	28 e0       	ldi	r18, 0x08	; 8
 9e8:	30 e0       	ldi	r19, 0x00	; 0
 9ea:	05 c0       	rjmp	.+10     	; 0x9f6 <__stack+0x197>
 9ec:	20 e1       	ldi	r18, 0x10	; 16
 9ee:	30 e0       	ldi	r19, 0x00	; 0
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <__stack+0x197>
 9f2:	20 e1       	ldi	r18, 0x10	; 16
 9f4:	32 e0       	ldi	r19, 0x02	; 2
 9f6:	56 01       	movw	r10, r12
 9f8:	17 ff       	sbrs	r17, 7
 9fa:	09 c0       	rjmp	.+18     	; 0xa0e <__stack+0x1af>
 9fc:	f4 e0       	ldi	r31, 0x04	; 4
 9fe:	af 0e       	add	r10, r31
 a00:	b1 1c       	adc	r11, r1
 a02:	f6 01       	movw	r30, r12
 a04:	60 81       	ld	r22, Z
 a06:	71 81       	ldd	r23, Z+1	; 0x01
 a08:	82 81       	ldd	r24, Z+2	; 0x02
 a0a:	93 81       	ldd	r25, Z+3	; 0x03
 a0c:	08 c0       	rjmp	.+16     	; 0xa1e <__stack+0x1bf>
 a0e:	f2 e0       	ldi	r31, 0x02	; 2
 a10:	af 0e       	add	r10, r31
 a12:	b1 1c       	adc	r11, r1
 a14:	f6 01       	movw	r30, r12
 a16:	60 81       	ld	r22, Z
 a18:	71 81       	ldd	r23, Z+1	; 0x01
 a1a:	80 e0       	ldi	r24, 0x00	; 0
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	a4 01       	movw	r20, r8
 a20:	0e 94 f1 06 	call	0xde2	; 0xde2 <__ultoa_invert>
 a24:	d8 2e       	mov	r13, r24
 a26:	d8 18       	sub	r13, r8
 a28:	1f 77       	andi	r17, 0x7F	; 127
 a2a:	16 ff       	sbrs	r17, 6
 a2c:	0b c0       	rjmp	.+22     	; 0xa44 <__stack+0x1e5>
 a2e:	21 2f       	mov	r18, r17
 a30:	2e 7f       	andi	r18, 0xFE	; 254
 a32:	d7 14       	cp	r13, r7
 a34:	50 f4       	brcc	.+20     	; 0xa4a <__stack+0x1eb>
 a36:	14 ff       	sbrs	r17, 4
 a38:	0a c0       	rjmp	.+20     	; 0xa4e <__stack+0x1ef>
 a3a:	12 fd       	sbrc	r17, 2
 a3c:	08 c0       	rjmp	.+16     	; 0xa4e <__stack+0x1ef>
 a3e:	21 2f       	mov	r18, r17
 a40:	2e 7e       	andi	r18, 0xEE	; 238
 a42:	05 c0       	rjmp	.+10     	; 0xa4e <__stack+0x1ef>
 a44:	0d 2d       	mov	r16, r13
 a46:	21 2f       	mov	r18, r17
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <__stack+0x1f1>
 a4a:	0d 2d       	mov	r16, r13
 a4c:	01 c0       	rjmp	.+2      	; 0xa50 <__stack+0x1f1>
 a4e:	07 2d       	mov	r16, r7
 a50:	24 ff       	sbrs	r18, 4
 a52:	0c c0       	rjmp	.+24     	; 0xa6c <__stack+0x20d>
 a54:	fe 01       	movw	r30, r28
 a56:	ed 0d       	add	r30, r13
 a58:	f1 1d       	adc	r31, r1
 a5a:	80 81       	ld	r24, Z
 a5c:	80 33       	cpi	r24, 0x30	; 48
 a5e:	11 f4       	brne	.+4      	; 0xa64 <__stack+0x205>
 a60:	29 7e       	andi	r18, 0xE9	; 233
 a62:	08 c0       	rjmp	.+16     	; 0xa74 <__stack+0x215>
 a64:	22 ff       	sbrs	r18, 2
 a66:	05 c0       	rjmp	.+10     	; 0xa72 <__stack+0x213>
 a68:	0e 5f       	subi	r16, 0xFE	; 254
 a6a:	04 c0       	rjmp	.+8      	; 0xa74 <__stack+0x215>
 a6c:	82 2f       	mov	r24, r18
 a6e:	86 78       	andi	r24, 0x86	; 134
 a70:	09 f0       	breq	.+2      	; 0xa74 <__stack+0x215>
 a72:	0f 5f       	subi	r16, 0xFF	; 255
 a74:	23 fd       	sbrc	r18, 3
 a76:	14 c0       	rjmp	.+40     	; 0xaa0 <__stack+0x241>
 a78:	20 ff       	sbrs	r18, 0
 a7a:	0f c0       	rjmp	.+30     	; 0xa9a <__stack+0x23b>
 a7c:	7d 2c       	mov	r7, r13
 a7e:	06 15       	cp	r16, r6
 a80:	60 f4       	brcc	.+24     	; 0xa9a <__stack+0x23b>
 a82:	76 0c       	add	r7, r6
 a84:	70 1a       	sub	r7, r16
 a86:	06 2d       	mov	r16, r6
 a88:	08 c0       	rjmp	.+16     	; 0xa9a <__stack+0x23b>
 a8a:	b7 01       	movw	r22, r14
 a8c:	80 e2       	ldi	r24, 0x20	; 32
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	2a 8b       	std	Y+18, r18	; 0x12
 a92:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 a96:	0f 5f       	subi	r16, 0xFF	; 255
 a98:	2a 89       	ldd	r18, Y+18	; 0x12
 a9a:	06 15       	cp	r16, r6
 a9c:	b0 f3       	brcs	.-20     	; 0xa8a <__stack+0x22b>
 a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__stack+0x249>
 aa0:	06 15       	cp	r16, r6
 aa2:	10 f4       	brcc	.+4      	; 0xaa8 <__stack+0x249>
 aa4:	60 1a       	sub	r6, r16
 aa6:	01 c0       	rjmp	.+2      	; 0xaaa <__stack+0x24b>
 aa8:	61 2c       	mov	r6, r1
 aaa:	24 ff       	sbrs	r18, 4
 aac:	12 c0       	rjmp	.+36     	; 0xad2 <__stack+0x273>
 aae:	b7 01       	movw	r22, r14
 ab0:	80 e3       	ldi	r24, 0x30	; 48
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	2a 8b       	std	Y+18, r18	; 0x12
 ab6:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 aba:	2a 89       	ldd	r18, Y+18	; 0x12
 abc:	22 ff       	sbrs	r18, 2
 abe:	1e c0       	rjmp	.+60     	; 0xafc <__stack+0x29d>
 ac0:	21 ff       	sbrs	r18, 1
 ac2:	03 c0       	rjmp	.+6      	; 0xaca <__stack+0x26b>
 ac4:	88 e5       	ldi	r24, 0x58	; 88
 ac6:	90 e0       	ldi	r25, 0x00	; 0
 ac8:	02 c0       	rjmp	.+4      	; 0xace <__stack+0x26f>
 aca:	88 e7       	ldi	r24, 0x78	; 120
 acc:	90 e0       	ldi	r25, 0x00	; 0
 ace:	b7 01       	movw	r22, r14
 ad0:	0c c0       	rjmp	.+24     	; 0xaea <__stack+0x28b>
 ad2:	82 2f       	mov	r24, r18
 ad4:	86 78       	andi	r24, 0x86	; 134
 ad6:	91 f0       	breq	.+36     	; 0xafc <__stack+0x29d>
 ad8:	21 fd       	sbrc	r18, 1
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <__stack+0x281>
 adc:	80 e2       	ldi	r24, 0x20	; 32
 ade:	01 c0       	rjmp	.+2      	; 0xae2 <__stack+0x283>
 ae0:	8b e2       	ldi	r24, 0x2B	; 43
 ae2:	27 fd       	sbrc	r18, 7
 ae4:	8d e2       	ldi	r24, 0x2D	; 45
 ae6:	b7 01       	movw	r22, r14
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 aee:	06 c0       	rjmp	.+12     	; 0xafc <__stack+0x29d>
 af0:	b7 01       	movw	r22, r14
 af2:	80 e3       	ldi	r24, 0x30	; 48
 af4:	90 e0       	ldi	r25, 0x00	; 0
 af6:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 afa:	7a 94       	dec	r7
 afc:	d7 14       	cp	r13, r7
 afe:	c0 f3       	brcs	.-16     	; 0xaf0 <__stack+0x291>
 b00:	da 94       	dec	r13
 b02:	f4 01       	movw	r30, r8
 b04:	ed 0d       	add	r30, r13
 b06:	f1 1d       	adc	r31, r1
 b08:	b7 01       	movw	r22, r14
 b0a:	80 81       	ld	r24, Z
 b0c:	90 e0       	ldi	r25, 0x00	; 0
 b0e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 b12:	d1 10       	cpse	r13, r1
 b14:	f5 cf       	rjmp	.-22     	; 0xb00 <__stack+0x2a1>
 b16:	06 c0       	rjmp	.+12     	; 0xb24 <__stack+0x2c5>
 b18:	b7 01       	movw	r22, r14
 b1a:	80 e2       	ldi	r24, 0x20	; 32
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <fputc>
 b22:	6a 94       	dec	r6
 b24:	61 10       	cpse	r6, r1
 b26:	f8 cf       	rjmp	.-16     	; 0xb18 <__stack+0x2b9>
 b28:	99 cc       	rjmp	.-1742   	; 0x45c <vfprintf+0x20>
 b2a:	f7 01       	movw	r30, r14
 b2c:	26 81       	ldd	r18, Z+6	; 0x06
 b2e:	37 81       	ldd	r19, Z+7	; 0x07
 b30:	02 c0       	rjmp	.+4      	; 0xb36 <__stack+0x2d7>
 b32:	2f ef       	ldi	r18, 0xFF	; 255
 b34:	3f ef       	ldi	r19, 0xFF	; 255
 b36:	c9 01       	movw	r24, r18
 b38:	62 96       	adiw	r28, 0x12	; 18
 b3a:	e2 e1       	ldi	r30, 0x12	; 18
 b3c:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__epilogue_restores__>

00000b40 <__prologue_saves__>:
 b40:	2f 92       	push	r2
 b42:	3f 92       	push	r3
 b44:	4f 92       	push	r4
 b46:	5f 92       	push	r5
 b48:	6f 92       	push	r6
 b4a:	7f 92       	push	r7
 b4c:	8f 92       	push	r8
 b4e:	9f 92       	push	r9
 b50:	af 92       	push	r10
 b52:	bf 92       	push	r11
 b54:	cf 92       	push	r12
 b56:	df 92       	push	r13
 b58:	ef 92       	push	r14
 b5a:	ff 92       	push	r15
 b5c:	0f 93       	push	r16
 b5e:	1f 93       	push	r17
 b60:	cf 93       	push	r28
 b62:	df 93       	push	r29
 b64:	cd b7       	in	r28, 0x3d	; 61
 b66:	de b7       	in	r29, 0x3e	; 62
 b68:	ca 1b       	sub	r28, r26
 b6a:	db 0b       	sbc	r29, r27
 b6c:	0f b6       	in	r0, 0x3f	; 63
 b6e:	f8 94       	cli
 b70:	de bf       	out	0x3e, r29	; 62
 b72:	0f be       	out	0x3f, r0	; 63
 b74:	cd bf       	out	0x3d, r28	; 61
 b76:	09 94       	ijmp

00000b78 <__epilogue_restores__>:
 b78:	2a 88       	ldd	r2, Y+18	; 0x12
 b7a:	39 88       	ldd	r3, Y+17	; 0x11
 b7c:	48 88       	ldd	r4, Y+16	; 0x10
 b7e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b80:	6e 84       	ldd	r6, Y+14	; 0x0e
 b82:	7d 84       	ldd	r7, Y+13	; 0x0d
 b84:	8c 84       	ldd	r8, Y+12	; 0x0c
 b86:	9b 84       	ldd	r9, Y+11	; 0x0b
 b88:	aa 84       	ldd	r10, Y+10	; 0x0a
 b8a:	b9 84       	ldd	r11, Y+9	; 0x09
 b8c:	c8 84       	ldd	r12, Y+8	; 0x08
 b8e:	df 80       	ldd	r13, Y+7	; 0x07
 b90:	ee 80       	ldd	r14, Y+6	; 0x06
 b92:	fd 80       	ldd	r15, Y+5	; 0x05
 b94:	0c 81       	ldd	r16, Y+4	; 0x04
 b96:	1b 81       	ldd	r17, Y+3	; 0x03
 b98:	aa 81       	ldd	r26, Y+2	; 0x02
 b9a:	b9 81       	ldd	r27, Y+1	; 0x01
 b9c:	ce 0f       	add	r28, r30
 b9e:	d1 1d       	adc	r29, r1
 ba0:	0f b6       	in	r0, 0x3f	; 63
 ba2:	f8 94       	cli
 ba4:	de bf       	out	0x3e, r29	; 62
 ba6:	0f be       	out	0x3f, r0	; 63
 ba8:	cd bf       	out	0x3d, r28	; 61
 baa:	ed 01       	movw	r28, r26
 bac:	08 95       	ret

00000bae <__ftoa_engine>:
 bae:	28 30       	cpi	r18, 0x08	; 8
 bb0:	08 f0       	brcs	.+2      	; 0xbb4 <__ftoa_engine+0x6>
 bb2:	27 e0       	ldi	r18, 0x07	; 7
 bb4:	33 27       	eor	r19, r19
 bb6:	da 01       	movw	r26, r20
 bb8:	99 0f       	add	r25, r25
 bba:	31 1d       	adc	r19, r1
 bbc:	87 fd       	sbrc	r24, 7
 bbe:	91 60       	ori	r25, 0x01	; 1
 bc0:	00 96       	adiw	r24, 0x00	; 0
 bc2:	61 05       	cpc	r22, r1
 bc4:	71 05       	cpc	r23, r1
 bc6:	39 f4       	brne	.+14     	; 0xbd6 <__ftoa_engine+0x28>
 bc8:	32 60       	ori	r19, 0x02	; 2
 bca:	2e 5f       	subi	r18, 0xFE	; 254
 bcc:	3d 93       	st	X+, r19
 bce:	30 e3       	ldi	r19, 0x30	; 48
 bd0:	2a 95       	dec	r18
 bd2:	e1 f7       	brne	.-8      	; 0xbcc <__ftoa_engine+0x1e>
 bd4:	08 95       	ret
 bd6:	9f 3f       	cpi	r25, 0xFF	; 255
 bd8:	30 f0       	brcs	.+12     	; 0xbe6 <__ftoa_engine+0x38>
 bda:	80 38       	cpi	r24, 0x80	; 128
 bdc:	71 05       	cpc	r23, r1
 bde:	61 05       	cpc	r22, r1
 be0:	09 f0       	breq	.+2      	; 0xbe4 <__ftoa_engine+0x36>
 be2:	3c 5f       	subi	r19, 0xFC	; 252
 be4:	3c 5f       	subi	r19, 0xFC	; 252
 be6:	3d 93       	st	X+, r19
 be8:	91 30       	cpi	r25, 0x01	; 1
 bea:	08 f0       	brcs	.+2      	; 0xbee <__ftoa_engine+0x40>
 bec:	80 68       	ori	r24, 0x80	; 128
 bee:	91 1d       	adc	r25, r1
 bf0:	df 93       	push	r29
 bf2:	cf 93       	push	r28
 bf4:	1f 93       	push	r17
 bf6:	0f 93       	push	r16
 bf8:	ff 92       	push	r15
 bfa:	ef 92       	push	r14
 bfc:	19 2f       	mov	r17, r25
 bfe:	98 7f       	andi	r25, 0xF8	; 248
 c00:	96 95       	lsr	r25
 c02:	e9 2f       	mov	r30, r25
 c04:	96 95       	lsr	r25
 c06:	96 95       	lsr	r25
 c08:	e9 0f       	add	r30, r25
 c0a:	ff 27       	eor	r31, r31
 c0c:	ea 54       	subi	r30, 0x4A	; 74
 c0e:	ff 4f       	sbci	r31, 0xFF	; 255
 c10:	99 27       	eor	r25, r25
 c12:	33 27       	eor	r19, r19
 c14:	ee 24       	eor	r14, r14
 c16:	ff 24       	eor	r15, r15
 c18:	a7 01       	movw	r20, r14
 c1a:	e7 01       	movw	r28, r14
 c1c:	05 90       	lpm	r0, Z+
 c1e:	08 94       	sec
 c20:	07 94       	ror	r0
 c22:	28 f4       	brcc	.+10     	; 0xc2e <__ftoa_engine+0x80>
 c24:	36 0f       	add	r19, r22
 c26:	e7 1e       	adc	r14, r23
 c28:	f8 1e       	adc	r15, r24
 c2a:	49 1f       	adc	r20, r25
 c2c:	51 1d       	adc	r21, r1
 c2e:	66 0f       	add	r22, r22
 c30:	77 1f       	adc	r23, r23
 c32:	88 1f       	adc	r24, r24
 c34:	99 1f       	adc	r25, r25
 c36:	06 94       	lsr	r0
 c38:	a1 f7       	brne	.-24     	; 0xc22 <__ftoa_engine+0x74>
 c3a:	05 90       	lpm	r0, Z+
 c3c:	07 94       	ror	r0
 c3e:	28 f4       	brcc	.+10     	; 0xc4a <__ftoa_engine+0x9c>
 c40:	e7 0e       	add	r14, r23
 c42:	f8 1e       	adc	r15, r24
 c44:	49 1f       	adc	r20, r25
 c46:	56 1f       	adc	r21, r22
 c48:	c1 1d       	adc	r28, r1
 c4a:	77 0f       	add	r23, r23
 c4c:	88 1f       	adc	r24, r24
 c4e:	99 1f       	adc	r25, r25
 c50:	66 1f       	adc	r22, r22
 c52:	06 94       	lsr	r0
 c54:	a1 f7       	brne	.-24     	; 0xc3e <__ftoa_engine+0x90>
 c56:	05 90       	lpm	r0, Z+
 c58:	07 94       	ror	r0
 c5a:	28 f4       	brcc	.+10     	; 0xc66 <__ftoa_engine+0xb8>
 c5c:	f8 0e       	add	r15, r24
 c5e:	49 1f       	adc	r20, r25
 c60:	56 1f       	adc	r21, r22
 c62:	c7 1f       	adc	r28, r23
 c64:	d1 1d       	adc	r29, r1
 c66:	88 0f       	add	r24, r24
 c68:	99 1f       	adc	r25, r25
 c6a:	66 1f       	adc	r22, r22
 c6c:	77 1f       	adc	r23, r23
 c6e:	06 94       	lsr	r0
 c70:	a1 f7       	brne	.-24     	; 0xc5a <__ftoa_engine+0xac>
 c72:	05 90       	lpm	r0, Z+
 c74:	07 94       	ror	r0
 c76:	20 f4       	brcc	.+8      	; 0xc80 <__ftoa_engine+0xd2>
 c78:	49 0f       	add	r20, r25
 c7a:	56 1f       	adc	r21, r22
 c7c:	c7 1f       	adc	r28, r23
 c7e:	d8 1f       	adc	r29, r24
 c80:	99 0f       	add	r25, r25
 c82:	66 1f       	adc	r22, r22
 c84:	77 1f       	adc	r23, r23
 c86:	88 1f       	adc	r24, r24
 c88:	06 94       	lsr	r0
 c8a:	a9 f7       	brne	.-22     	; 0xc76 <__ftoa_engine+0xc8>
 c8c:	84 91       	lpm	r24, Z
 c8e:	10 95       	com	r17
 c90:	17 70       	andi	r17, 0x07	; 7
 c92:	41 f0       	breq	.+16     	; 0xca4 <__ftoa_engine+0xf6>
 c94:	d6 95       	lsr	r29
 c96:	c7 95       	ror	r28
 c98:	57 95       	ror	r21
 c9a:	47 95       	ror	r20
 c9c:	f7 94       	ror	r15
 c9e:	e7 94       	ror	r14
 ca0:	1a 95       	dec	r17
 ca2:	c1 f7       	brne	.-16     	; 0xc94 <__ftoa_engine+0xe6>
 ca4:	ec e5       	ldi	r30, 0x5C	; 92
 ca6:	f0 e0       	ldi	r31, 0x00	; 0
 ca8:	68 94       	set
 caa:	15 90       	lpm	r1, Z+
 cac:	15 91       	lpm	r17, Z+
 cae:	35 91       	lpm	r19, Z+
 cb0:	65 91       	lpm	r22, Z+
 cb2:	95 91       	lpm	r25, Z+
 cb4:	05 90       	lpm	r0, Z+
 cb6:	7f e2       	ldi	r23, 0x2F	; 47
 cb8:	73 95       	inc	r23
 cba:	e1 18       	sub	r14, r1
 cbc:	f1 0a       	sbc	r15, r17
 cbe:	43 0b       	sbc	r20, r19
 cc0:	56 0b       	sbc	r21, r22
 cc2:	c9 0b       	sbc	r28, r25
 cc4:	d0 09       	sbc	r29, r0
 cc6:	c0 f7       	brcc	.-16     	; 0xcb8 <__ftoa_engine+0x10a>
 cc8:	e1 0c       	add	r14, r1
 cca:	f1 1e       	adc	r15, r17
 ccc:	43 1f       	adc	r20, r19
 cce:	56 1f       	adc	r21, r22
 cd0:	c9 1f       	adc	r28, r25
 cd2:	d0 1d       	adc	r29, r0
 cd4:	7e f4       	brtc	.+30     	; 0xcf4 <__ftoa_engine+0x146>
 cd6:	70 33       	cpi	r23, 0x30	; 48
 cd8:	11 f4       	brne	.+4      	; 0xcde <__ftoa_engine+0x130>
 cda:	8a 95       	dec	r24
 cdc:	e6 cf       	rjmp	.-52     	; 0xcaa <__ftoa_engine+0xfc>
 cde:	e8 94       	clt
 ce0:	01 50       	subi	r16, 0x01	; 1
 ce2:	30 f0       	brcs	.+12     	; 0xcf0 <__ftoa_engine+0x142>
 ce4:	08 0f       	add	r16, r24
 ce6:	0a f4       	brpl	.+2      	; 0xcea <__ftoa_engine+0x13c>
 ce8:	00 27       	eor	r16, r16
 cea:	02 17       	cp	r16, r18
 cec:	08 f4       	brcc	.+2      	; 0xcf0 <__ftoa_engine+0x142>
 cee:	20 2f       	mov	r18, r16
 cf0:	23 95       	inc	r18
 cf2:	02 2f       	mov	r16, r18
 cf4:	7a 33       	cpi	r23, 0x3A	; 58
 cf6:	28 f0       	brcs	.+10     	; 0xd02 <__ftoa_engine+0x154>
 cf8:	79 e3       	ldi	r23, 0x39	; 57
 cfa:	7d 93       	st	X+, r23
 cfc:	2a 95       	dec	r18
 cfe:	e9 f7       	brne	.-6      	; 0xcfa <__ftoa_engine+0x14c>
 d00:	10 c0       	rjmp	.+32     	; 0xd22 <__ftoa_engine+0x174>
 d02:	7d 93       	st	X+, r23
 d04:	2a 95       	dec	r18
 d06:	89 f6       	brne	.-94     	; 0xcaa <__ftoa_engine+0xfc>
 d08:	06 94       	lsr	r0
 d0a:	97 95       	ror	r25
 d0c:	67 95       	ror	r22
 d0e:	37 95       	ror	r19
 d10:	17 95       	ror	r17
 d12:	17 94       	ror	r1
 d14:	e1 18       	sub	r14, r1
 d16:	f1 0a       	sbc	r15, r17
 d18:	43 0b       	sbc	r20, r19
 d1a:	56 0b       	sbc	r21, r22
 d1c:	c9 0b       	sbc	r28, r25
 d1e:	d0 09       	sbc	r29, r0
 d20:	98 f0       	brcs	.+38     	; 0xd48 <__ftoa_engine+0x19a>
 d22:	23 95       	inc	r18
 d24:	7e 91       	ld	r23, -X
 d26:	73 95       	inc	r23
 d28:	7a 33       	cpi	r23, 0x3A	; 58
 d2a:	08 f0       	brcs	.+2      	; 0xd2e <__ftoa_engine+0x180>
 d2c:	70 e3       	ldi	r23, 0x30	; 48
 d2e:	7c 93       	st	X, r23
 d30:	20 13       	cpse	r18, r16
 d32:	b8 f7       	brcc	.-18     	; 0xd22 <__ftoa_engine+0x174>
 d34:	7e 91       	ld	r23, -X
 d36:	70 61       	ori	r23, 0x10	; 16
 d38:	7d 93       	st	X+, r23
 d3a:	30 f0       	brcs	.+12     	; 0xd48 <__ftoa_engine+0x19a>
 d3c:	83 95       	inc	r24
 d3e:	71 e3       	ldi	r23, 0x31	; 49
 d40:	7d 93       	st	X+, r23
 d42:	70 e3       	ldi	r23, 0x30	; 48
 d44:	2a 95       	dec	r18
 d46:	e1 f7       	brne	.-8      	; 0xd40 <__ftoa_engine+0x192>
 d48:	11 24       	eor	r1, r1
 d4a:	ef 90       	pop	r14
 d4c:	ff 90       	pop	r15
 d4e:	0f 91       	pop	r16
 d50:	1f 91       	pop	r17
 d52:	cf 91       	pop	r28
 d54:	df 91       	pop	r29
 d56:	99 27       	eor	r25, r25
 d58:	87 fd       	sbrc	r24, 7
 d5a:	90 95       	com	r25
 d5c:	08 95       	ret

00000d5e <strnlen_P>:
 d5e:	fc 01       	movw	r30, r24
 d60:	05 90       	lpm	r0, Z+
 d62:	61 50       	subi	r22, 0x01	; 1
 d64:	70 40       	sbci	r23, 0x00	; 0
 d66:	01 10       	cpse	r0, r1
 d68:	d8 f7       	brcc	.-10     	; 0xd60 <strnlen_P+0x2>
 d6a:	80 95       	com	r24
 d6c:	90 95       	com	r25
 d6e:	8e 0f       	add	r24, r30
 d70:	9f 1f       	adc	r25, r31
 d72:	08 95       	ret

00000d74 <strnlen>:
 d74:	fc 01       	movw	r30, r24
 d76:	61 50       	subi	r22, 0x01	; 1
 d78:	70 40       	sbci	r23, 0x00	; 0
 d7a:	01 90       	ld	r0, Z+
 d7c:	01 10       	cpse	r0, r1
 d7e:	d8 f7       	brcc	.-10     	; 0xd76 <strnlen+0x2>
 d80:	80 95       	com	r24
 d82:	90 95       	com	r25
 d84:	8e 0f       	add	r24, r30
 d86:	9f 1f       	adc	r25, r31
 d88:	08 95       	ret

00000d8a <fputc>:
 d8a:	0f 93       	push	r16
 d8c:	1f 93       	push	r17
 d8e:	cf 93       	push	r28
 d90:	df 93       	push	r29
 d92:	8c 01       	movw	r16, r24
 d94:	eb 01       	movw	r28, r22
 d96:	8b 81       	ldd	r24, Y+3	; 0x03
 d98:	81 fd       	sbrc	r24, 1
 d9a:	03 c0       	rjmp	.+6      	; 0xda2 <fputc+0x18>
 d9c:	0f ef       	ldi	r16, 0xFF	; 255
 d9e:	1f ef       	ldi	r17, 0xFF	; 255
 da0:	1a c0       	rjmp	.+52     	; 0xdd6 <fputc+0x4c>
 da2:	82 ff       	sbrs	r24, 2
 da4:	0d c0       	rjmp	.+26     	; 0xdc0 <fputc+0x36>
 da6:	2e 81       	ldd	r18, Y+6	; 0x06
 da8:	3f 81       	ldd	r19, Y+7	; 0x07
 daa:	8c 81       	ldd	r24, Y+4	; 0x04
 dac:	9d 81       	ldd	r25, Y+5	; 0x05
 dae:	28 17       	cp	r18, r24
 db0:	39 07       	cpc	r19, r25
 db2:	64 f4       	brge	.+24     	; 0xdcc <fputc+0x42>
 db4:	e8 81       	ld	r30, Y
 db6:	f9 81       	ldd	r31, Y+1	; 0x01
 db8:	01 93       	st	Z+, r16
 dba:	f9 83       	std	Y+1, r31	; 0x01
 dbc:	e8 83       	st	Y, r30
 dbe:	06 c0       	rjmp	.+12     	; 0xdcc <fputc+0x42>
 dc0:	e8 85       	ldd	r30, Y+8	; 0x08
 dc2:	f9 85       	ldd	r31, Y+9	; 0x09
 dc4:	80 2f       	mov	r24, r16
 dc6:	09 95       	icall
 dc8:	89 2b       	or	r24, r25
 dca:	41 f7       	brne	.-48     	; 0xd9c <fputc+0x12>
 dcc:	8e 81       	ldd	r24, Y+6	; 0x06
 dce:	9f 81       	ldd	r25, Y+7	; 0x07
 dd0:	01 96       	adiw	r24, 0x01	; 1
 dd2:	9f 83       	std	Y+7, r25	; 0x07
 dd4:	8e 83       	std	Y+6, r24	; 0x06
 dd6:	c8 01       	movw	r24, r16
 dd8:	df 91       	pop	r29
 dda:	cf 91       	pop	r28
 ddc:	1f 91       	pop	r17
 dde:	0f 91       	pop	r16
 de0:	08 95       	ret

00000de2 <__ultoa_invert>:
 de2:	fa 01       	movw	r30, r20
 de4:	aa 27       	eor	r26, r26
 de6:	28 30       	cpi	r18, 0x08	; 8
 de8:	51 f1       	breq	.+84     	; 0xe3e <__ultoa_invert+0x5c>
 dea:	20 31       	cpi	r18, 0x10	; 16
 dec:	81 f1       	breq	.+96     	; 0xe4e <__ultoa_invert+0x6c>
 dee:	e8 94       	clt
 df0:	6f 93       	push	r22
 df2:	6e 7f       	andi	r22, 0xFE	; 254
 df4:	6e 5f       	subi	r22, 0xFE	; 254
 df6:	7f 4f       	sbci	r23, 0xFF	; 255
 df8:	8f 4f       	sbci	r24, 0xFF	; 255
 dfa:	9f 4f       	sbci	r25, 0xFF	; 255
 dfc:	af 4f       	sbci	r26, 0xFF	; 255
 dfe:	b1 e0       	ldi	r27, 0x01	; 1
 e00:	3e d0       	rcall	.+124    	; 0xe7e <__ultoa_invert+0x9c>
 e02:	b4 e0       	ldi	r27, 0x04	; 4
 e04:	3c d0       	rcall	.+120    	; 0xe7e <__ultoa_invert+0x9c>
 e06:	67 0f       	add	r22, r23
 e08:	78 1f       	adc	r23, r24
 e0a:	89 1f       	adc	r24, r25
 e0c:	9a 1f       	adc	r25, r26
 e0e:	a1 1d       	adc	r26, r1
 e10:	68 0f       	add	r22, r24
 e12:	79 1f       	adc	r23, r25
 e14:	8a 1f       	adc	r24, r26
 e16:	91 1d       	adc	r25, r1
 e18:	a1 1d       	adc	r26, r1
 e1a:	6a 0f       	add	r22, r26
 e1c:	71 1d       	adc	r23, r1
 e1e:	81 1d       	adc	r24, r1
 e20:	91 1d       	adc	r25, r1
 e22:	a1 1d       	adc	r26, r1
 e24:	20 d0       	rcall	.+64     	; 0xe66 <__ultoa_invert+0x84>
 e26:	09 f4       	brne	.+2      	; 0xe2a <__ultoa_invert+0x48>
 e28:	68 94       	set
 e2a:	3f 91       	pop	r19
 e2c:	2a e0       	ldi	r18, 0x0A	; 10
 e2e:	26 9f       	mul	r18, r22
 e30:	11 24       	eor	r1, r1
 e32:	30 19       	sub	r19, r0
 e34:	30 5d       	subi	r19, 0xD0	; 208
 e36:	31 93       	st	Z+, r19
 e38:	de f6       	brtc	.-74     	; 0xdf0 <__ultoa_invert+0xe>
 e3a:	cf 01       	movw	r24, r30
 e3c:	08 95       	ret
 e3e:	46 2f       	mov	r20, r22
 e40:	47 70       	andi	r20, 0x07	; 7
 e42:	40 5d       	subi	r20, 0xD0	; 208
 e44:	41 93       	st	Z+, r20
 e46:	b3 e0       	ldi	r27, 0x03	; 3
 e48:	0f d0       	rcall	.+30     	; 0xe68 <__ultoa_invert+0x86>
 e4a:	c9 f7       	brne	.-14     	; 0xe3e <__ultoa_invert+0x5c>
 e4c:	f6 cf       	rjmp	.-20     	; 0xe3a <__ultoa_invert+0x58>
 e4e:	46 2f       	mov	r20, r22
 e50:	4f 70       	andi	r20, 0x0F	; 15
 e52:	40 5d       	subi	r20, 0xD0	; 208
 e54:	4a 33       	cpi	r20, 0x3A	; 58
 e56:	18 f0       	brcs	.+6      	; 0xe5e <__ultoa_invert+0x7c>
 e58:	49 5d       	subi	r20, 0xD9	; 217
 e5a:	31 fd       	sbrc	r19, 1
 e5c:	40 52       	subi	r20, 0x20	; 32
 e5e:	41 93       	st	Z+, r20
 e60:	02 d0       	rcall	.+4      	; 0xe66 <__ultoa_invert+0x84>
 e62:	a9 f7       	brne	.-22     	; 0xe4e <__ultoa_invert+0x6c>
 e64:	ea cf       	rjmp	.-44     	; 0xe3a <__ultoa_invert+0x58>
 e66:	b4 e0       	ldi	r27, 0x04	; 4
 e68:	a6 95       	lsr	r26
 e6a:	97 95       	ror	r25
 e6c:	87 95       	ror	r24
 e6e:	77 95       	ror	r23
 e70:	67 95       	ror	r22
 e72:	ba 95       	dec	r27
 e74:	c9 f7       	brne	.-14     	; 0xe68 <__ultoa_invert+0x86>
 e76:	00 97       	sbiw	r24, 0x00	; 0
 e78:	61 05       	cpc	r22, r1
 e7a:	71 05       	cpc	r23, r1
 e7c:	08 95       	ret
 e7e:	9b 01       	movw	r18, r22
 e80:	ac 01       	movw	r20, r24
 e82:	0a 2e       	mov	r0, r26
 e84:	06 94       	lsr	r0
 e86:	57 95       	ror	r21
 e88:	47 95       	ror	r20
 e8a:	37 95       	ror	r19
 e8c:	27 95       	ror	r18
 e8e:	ba 95       	dec	r27
 e90:	c9 f7       	brne	.-14     	; 0xe84 <__ultoa_invert+0xa2>
 e92:	62 0f       	add	r22, r18
 e94:	73 1f       	adc	r23, r19
 e96:	84 1f       	adc	r24, r20
 e98:	95 1f       	adc	r25, r21
 e9a:	a0 1d       	adc	r26, r0
 e9c:	08 95       	ret

00000e9e <_exit>:
 e9e:	f8 94       	cli

00000ea0 <__stop_program>:
 ea0:	ff cf       	rjmp	.-2      	; 0xea0 <__stop_program>
