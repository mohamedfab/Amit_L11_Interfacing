
Amit_L11_Interfacing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e14  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000e14  00000e88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000016bc  00000000  00000000  00000ea0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000277  00000000  00000000  0000255c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  000027d3  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00002802  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002357  00000000  00000000  00002a7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b68  00000000  00000000  00004dd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f9c  00000000  00000000  00005939  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000434  00000000  00000000  000068d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009aa  00000000  00000000  00006d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a18  00000000  00000000  000076b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  000090ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	ADC_ADCSRA_REG|=(ADC_ENABLE)|(ADCPS_128);
}
u16 adcRead(adc_ChannelID chnlNo)
{
    u16 result;
    ADC_ADMUX_REG = (ADC_ADMUX_REG & 0xF0)|(chnlNo);
   0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
   4:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
    SET_BIT(ADC_ADCSRA_REG,ADSC_BIT_NO);
   8:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>

 	while(!(CHECK_BIT(ADC_ADCSRA_REG,ADIF_BIT_NO)))
   c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
 		  	  /*	Do Nothing	*/
 		  	  	  ;
 	  }
 	  SET_BIT(ADC_ADCSRA_REG,ADIF_BIT_NO);

 	result=(ADC_ADCL_REG|(ADC_ADCH_REG<<8));
  10:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  14:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  18:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  1c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
 	return result;
}
  20:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
		break;

	case INT2:
		if (intSense == FAILING_EDGE_MODE)
		{
			CLEAR_BIT(EXTINT_MCUCSR_REG,EXT_INT2_SENSE_BIT);
  24:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  28:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
		}
		else if (intSense == RISING_EDGE_MODE)
  2c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
		{
			SET_BIT(EXTINT_MCUCSR_REG,EXT_INT2_SENSE_BIT);
  30:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  34:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
	/*	configure SPI SS Pin as output	*/
	Dio_ConfigureChannel(SPI_SS_PORT, SPI_SS_CHANNEL, OUTPUT);
	/*	configure SPI SCK Pin as output	*/
	Dio_ConfigureChannel(SPI_SCK_PORT, SPI_SCK_CHANNEL, OUTPUT);
	/*	configure SPI MISO Pin as input	*/
	Dio_ConfigureChannel(SPI_MISO_PORT, SPI_MISO_CHANNEL, INPUT);
  38:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  3c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
	/*	initialize SPI SS pin with HIGH (No slave selected) */
	Dio_WriteChannel(SPI_SS_PORT, SPI_SS_CHANNEL, STD_HIGH);
  40:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  44:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
  48:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
	/*	enable SPI Module	*/
	SET_BIT(SPI_SPCR_REG,SPI_SPE_BIT_NO);
	/*	enable SPI Module in Master mode	*/
	SET_BIT(SPI_SPCR_REG,SPI_MSTR_BIT_NO);
  4c:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>
	/*	set SCK frequency by F_CPU/16	*/
	SPI_SPCR_REG|=SPI_SCK_FREQ_FCPU_DIV_16;
  50:	0c 94 c0 00 	jmp	0x180	; 0x180 <__bad_interrupt>

00000054 <__c.2006>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  54:	6e 61 6e 00                                         nan.

00000058 <__c.2004>:
  58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
	Lcd_Cmd(0x03);
	_delay_ms(5);
	Lcd_Cmd(0x03);
	_delay_us(100);
	Lcd_Cmd(0x03);
	Lcd_Cmd(0x02);
  78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
	Lcd_Cmd(_LCD_4BIT_MODE);
  88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
			{
				Lcd_DisplayChr(customChar[loc_CharIndx][loc_ByteIndex]);
			}
	}
}
void Lcd_Init(void)
  98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
  a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
	u8 loc_ByteIndex=0;
	u8 loc_CharIndx=0;
	for (loc_CharIndx=0;loc_CharIndx<NO_CSTOM_CHAR;loc_CharIndx++)
	{
		Lcd_Cmd(_LCD_CGRAM_START_ADDRESS +(loc_CharIndx*8));
			for (loc_ByteIndex =0; loc_ByteIndex<NO_CSTOM_CHAR_BYTES;loc_ByteIndex++)
  b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
	_delay_us(100);
	Lcd_Cmd(0x03);
	Lcd_Cmd(0x02);
	Lcd_Cmd(_LCD_4BIT_MODE);
	Lcd_WriteCustom();
	Lcd_GoToRowColumn(0, 0);
  c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
}
  d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
  e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
  f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
 108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
 118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
 128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
 138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
 148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
 156:	11 24       	eor	r1, r1
 158:	1f be       	out	0x3f, r1	; 63
 15a:	cf e5       	ldi	r28, 0x5F	; 95
 15c:	d8 e0       	ldi	r29, 0x08	; 8
 15e:	de bf       	out	0x3e, r29	; 62
 160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
 162:	10 e0       	ldi	r17, 0x00	; 0
 164:	a0 e6       	ldi	r26, 0x60	; 96
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	e4 e1       	ldi	r30, 0x14	; 20
 16a:	fe e0       	ldi	r31, 0x0E	; 14
 16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
 16e:	05 90       	lpm	r0, Z+
 170:	0d 92       	st	X+, r0
 172:	a8 37       	cpi	r26, 0x78	; 120
 174:	b1 07       	cpc	r27, r17
 176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>
 178:	0e 94 bf 01 	call	0x37e	; 0x37e <main>
 17c:	0c 94 08 07 	jmp	0xe10	; 0xe10 <_exit>

00000180 <__bad_interrupt>:
 180:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000184 <Dio_ConfigChannel>:

#include "Dio_Interface.h"

void Dio_ConfigChannel(Dio_Port port,Dio_Channel channel, Dio_Direction direction)
{
	switch (port)
 184:	81 30       	cpi	r24, 0x01	; 1
 186:	21 f1       	breq	.+72     	; 0x1d0 <Dio_ConfigChannel+0x4c>
 188:	30 f0       	brcs	.+12     	; 0x196 <Dio_ConfigChannel+0x12>
 18a:	82 30       	cpi	r24, 0x02	; 2
 18c:	f1 f1       	breq	.+124    	; 0x20a <Dio_ConfigChannel+0x86>
 18e:	83 30       	cpi	r24, 0x03	; 3
 190:	09 f0       	breq	.+2      	; 0x194 <Dio_ConfigChannel+0x10>
 192:	74 c0       	rjmp	.+232    	; 0x27c <Dio_ConfigChannel+0xf8>
 194:	57 c0       	rjmp	.+174    	; 0x244 <Dio_ConfigChannel+0xc0>
	{
	case DIO_PORTA:
		if (direction == INPUT)
 196:	41 11       	cpse	r20, r1
 198:	0e c0       	rjmp	.+28     	; 0x1b6 <Dio_ConfigChannel+0x32>
		{
			CLEAR_BIT(DIO_DDRA_REG,channel);
 19a:	2a b3       	in	r18, 0x1a	; 26
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	ac 01       	movw	r20, r24
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <Dio_ConfigChannel+0x24>
 1a4:	44 0f       	add	r20, r20
 1a6:	55 1f       	adc	r21, r21
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <Dio_ConfigChannel+0x20>
 1ac:	ba 01       	movw	r22, r20
 1ae:	60 95       	com	r22
 1b0:	62 23       	and	r22, r18
 1b2:	6a bb       	out	0x1a, r22	; 26
 1b4:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRA_REG,channel);
 1b6:	2a b3       	in	r18, 0x1a	; 26
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	ac 01       	movw	r20, r24
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <Dio_ConfigChannel+0x40>
 1c0:	44 0f       	add	r20, r20
 1c2:	55 1f       	adc	r21, r21
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <Dio_ConfigChannel+0x3c>
 1c8:	ba 01       	movw	r22, r20
 1ca:	62 2b       	or	r22, r18
 1cc:	6a bb       	out	0x1a, r22	; 26
 1ce:	08 95       	ret
		}
		break;
	case DIO_PORTB:
		if (direction == INPUT)
 1d0:	41 11       	cpse	r20, r1
 1d2:	0e c0       	rjmp	.+28     	; 0x1f0 <Dio_ConfigChannel+0x6c>
		{
			CLEAR_BIT(DIO_DDRB_REG,channel);
 1d4:	27 b3       	in	r18, 0x17	; 23
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	ac 01       	movw	r20, r24
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <Dio_ConfigChannel+0x5e>
 1de:	44 0f       	add	r20, r20
 1e0:	55 1f       	adc	r21, r21
 1e2:	6a 95       	dec	r22
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <Dio_ConfigChannel+0x5a>
 1e6:	ba 01       	movw	r22, r20
 1e8:	60 95       	com	r22
 1ea:	62 23       	and	r22, r18
 1ec:	67 bb       	out	0x17, r22	; 23
 1ee:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRB_REG,channel);
 1f0:	27 b3       	in	r18, 0x17	; 23
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	ac 01       	movw	r20, r24
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <Dio_ConfigChannel+0x7a>
 1fa:	44 0f       	add	r20, r20
 1fc:	55 1f       	adc	r21, r21
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <Dio_ConfigChannel+0x76>
 202:	ba 01       	movw	r22, r20
 204:	62 2b       	or	r22, r18
 206:	67 bb       	out	0x17, r22	; 23
 208:	08 95       	ret
		}
		break;
	case DIO_PORTC:
		if (direction == INPUT)
 20a:	41 11       	cpse	r20, r1
 20c:	0e c0       	rjmp	.+28     	; 0x22a <Dio_ConfigChannel+0xa6>
		{
			CLEAR_BIT(DIO_DDRC_REG,channel);
 20e:	24 b3       	in	r18, 0x14	; 20
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	ac 01       	movw	r20, r24
 216:	02 c0       	rjmp	.+4      	; 0x21c <Dio_ConfigChannel+0x98>
 218:	44 0f       	add	r20, r20
 21a:	55 1f       	adc	r21, r21
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <Dio_ConfigChannel+0x94>
 220:	ba 01       	movw	r22, r20
 222:	60 95       	com	r22
 224:	62 23       	and	r22, r18
 226:	64 bb       	out	0x14, r22	; 20
 228:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRC_REG,channel);
 22a:	24 b3       	in	r18, 0x14	; 20
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	ac 01       	movw	r20, r24
 232:	02 c0       	rjmp	.+4      	; 0x238 <Dio_ConfigChannel+0xb4>
 234:	44 0f       	add	r20, r20
 236:	55 1f       	adc	r21, r21
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <Dio_ConfigChannel+0xb0>
 23c:	ba 01       	movw	r22, r20
 23e:	62 2b       	or	r22, r18
 240:	64 bb       	out	0x14, r22	; 20
 242:	08 95       	ret
		}
		break;
	case DIO_PORTD:
		if (direction == INPUT)
 244:	41 11       	cpse	r20, r1
 246:	0e c0       	rjmp	.+28     	; 0x264 <Dio_ConfigChannel+0xe0>
		{
			CLEAR_BIT(DIO_DDRD_REG,channel);
 248:	21 b3       	in	r18, 0x11	; 17
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	ac 01       	movw	r20, r24
 250:	02 c0       	rjmp	.+4      	; 0x256 <Dio_ConfigChannel+0xd2>
 252:	44 0f       	add	r20, r20
 254:	55 1f       	adc	r21, r21
 256:	6a 95       	dec	r22
 258:	e2 f7       	brpl	.-8      	; 0x252 <Dio_ConfigChannel+0xce>
 25a:	ba 01       	movw	r22, r20
 25c:	60 95       	com	r22
 25e:	62 23       	and	r22, r18
 260:	61 bb       	out	0x11, r22	; 17
 262:	08 95       	ret
		}
		else
		{
			SET_BIT(DIO_DDRD_REG,channel);
 264:	21 b3       	in	r18, 0x11	; 17
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	ac 01       	movw	r20, r24
 26c:	02 c0       	rjmp	.+4      	; 0x272 <Dio_ConfigChannel+0xee>
 26e:	44 0f       	add	r20, r20
 270:	55 1f       	adc	r21, r21
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <Dio_ConfigChannel+0xea>
 276:	ba 01       	movw	r22, r20
 278:	62 2b       	or	r22, r18
 27a:	61 bb       	out	0x11, r22	; 17
 27c:	08 95       	ret

0000027e <Dio_FlipChannel>:
		break;
	}
}
void Dio_FlipChannel(Dio_Port port,Dio_Channel channel)
{
	switch (port)
 27e:	81 30       	cpi	r24, 0x01	; 1
 280:	99 f0       	breq	.+38     	; 0x2a8 <Dio_FlipChannel+0x2a>
 282:	28 f0       	brcs	.+10     	; 0x28e <Dio_FlipChannel+0x10>
 284:	82 30       	cpi	r24, 0x02	; 2
 286:	e9 f0       	breq	.+58     	; 0x2c2 <Dio_FlipChannel+0x44>
 288:	83 30       	cpi	r24, 0x03	; 3
 28a:	a1 f5       	brne	.+104    	; 0x2f4 <Dio_FlipChannel+0x76>
 28c:	27 c0       	rjmp	.+78     	; 0x2dc <Dio_FlipChannel+0x5e>
	{
	case DIO_PORTA:
		TOGGLE_BIT(DIO_PORTA_REG,channel);
 28e:	2b b3       	in	r18, 0x1b	; 27
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	ac 01       	movw	r20, r24
 296:	02 c0       	rjmp	.+4      	; 0x29c <Dio_FlipChannel+0x1e>
 298:	44 0f       	add	r20, r20
 29a:	55 1f       	adc	r21, r21
 29c:	6a 95       	dec	r22
 29e:	e2 f7       	brpl	.-8      	; 0x298 <Dio_FlipChannel+0x1a>
 2a0:	ba 01       	movw	r22, r20
 2a2:	62 27       	eor	r22, r18
 2a4:	6b bb       	out	0x1b, r22	; 27
		break;
 2a6:	08 95       	ret
	case DIO_PORTB:
		TOGGLE_BIT(DIO_PORTB_REG,channel);
 2a8:	28 b3       	in	r18, 0x18	; 24
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	ac 01       	movw	r20, r24
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <Dio_FlipChannel+0x38>
 2b2:	44 0f       	add	r20, r20
 2b4:	55 1f       	adc	r21, r21
 2b6:	6a 95       	dec	r22
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <Dio_FlipChannel+0x34>
 2ba:	ba 01       	movw	r22, r20
 2bc:	62 27       	eor	r22, r18
 2be:	68 bb       	out	0x18, r22	; 24
		break;
 2c0:	08 95       	ret
	case DIO_PORTC:
		TOGGLE_BIT(DIO_PORTC_REG,channel);
 2c2:	25 b3       	in	r18, 0x15	; 21
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	ac 01       	movw	r20, r24
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <Dio_FlipChannel+0x52>
 2cc:	44 0f       	add	r20, r20
 2ce:	55 1f       	adc	r21, r21
 2d0:	6a 95       	dec	r22
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <Dio_FlipChannel+0x4e>
 2d4:	ba 01       	movw	r22, r20
 2d6:	62 27       	eor	r22, r18
 2d8:	65 bb       	out	0x15, r22	; 21
		break;
 2da:	08 95       	ret
	case DIO_PORTD:
		TOGGLE_BIT(DIO_PORTD_REG,channel);
 2dc:	22 b3       	in	r18, 0x12	; 18
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	ac 01       	movw	r20, r24
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <Dio_FlipChannel+0x6c>
 2e6:	44 0f       	add	r20, r20
 2e8:	55 1f       	adc	r21, r21
 2ea:	6a 95       	dec	r22
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <Dio_FlipChannel+0x68>
 2ee:	ba 01       	movw	r22, r20
 2f0:	62 27       	eor	r22, r18
 2f2:	62 bb       	out	0x12, r22	; 18
 2f4:	08 95       	ret

000002f6 <UART_Init>:
#include "Uart_Interface.h"

void UART_Init(u16 baudRate)
{
	/* Set baud rate */
	UART_UBRRH_REG = (u8)(baudRate>>8);
 2f6:	90 bd       	out	0x20, r25	; 32
	UART_UBRRL_REG = (u8)baudRate;
 2f8:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	SET_BIT(UART_UCSRB_REG,RXEN_BIT_NO);  /* Enable Receiver*/
 2fa:	54 9a       	sbi	0x0a, 4	; 10
	SET_BIT(UART_UCSRB_REG,TXEN_BIT_NO);  /* Enable Transmitter */
 2fc:	53 9a       	sbi	0x0a, 3	; 10
	/* Set frame format: 8data, 1stop bit, Even Parity */
	UART_UCSRC_REG |= (1 << URSEL_BIT_NO)|UART_8_BIT_DATA | UART_EVEN_PARITY;
 2fe:	80 b5       	in	r24, 0x20	; 32
 300:	86 6a       	ori	r24, 0xA6	; 166
 302:	80 bd       	out	0x20, r24	; 32
 304:	08 95       	ret

00000306 <UART_TransmitChr>:
}

void UART_TransmitChr(u8 data)
{
	/* Wait for empty transmit buffer */
		while (!(CHECK_BIT(UART_UCSRA_REG,UDRE_BIT_NO)))
 306:	5d 9b       	sbis	0x0b, 5	; 11
 308:	fe cf       	rjmp	.-4      	; 0x306 <UART_TransmitChr>
				;
		/* Put data into buffer, sends the data */
		UART_UDR_REG = data;
 30a:	8c b9       	out	0x0c, r24	; 12
 30c:	08 95       	ret

0000030e <UART_TransmitStr>:
}

void UART_TransmitStr(u8 *str)
{
 30e:	cf 93       	push	r28
 310:	df 93       	push	r29
 312:	ec 01       	movw	r28, r24
	/* Wait for empty transmit buffer */
	while (*str != '\0')
 314:	88 81       	ld	r24, Y
 316:	88 23       	and	r24, r24
 318:	31 f0       	breq	.+12     	; 0x326 <UART_TransmitStr+0x18>
				;
		/* Put data into buffer, sends the data */
		UART_UDR_REG = data;
}

void UART_TransmitStr(u8 *str)
 31a:	21 96       	adiw	r28, 0x01	; 1
{
	/* Wait for empty transmit buffer */
	while (*str != '\0')
	{
		UART_TransmitChr(*str);
 31c:	0e 94 83 01 	call	0x306	; 0x306 <UART_TransmitChr>
}

void UART_TransmitStr(u8 *str)
{
	/* Wait for empty transmit buffer */
	while (*str != '\0')
 320:	89 91       	ld	r24, Y+
 322:	81 11       	cpse	r24, r1
 324:	fb cf       	rjmp	.-10     	; 0x31c <UART_TransmitStr+0xe>
	{
		UART_TransmitChr(*str);
		str++;
	}
}
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <UART_ReceiveChr>:

u8 UART_ReceiveChr(void)
{
	/* Wait for data to be received */
	while (!(CHECK_BIT(UART_UCSRA_REG,RXC_BIT_NO)))
 32c:	5f 9b       	sbis	0x0b, 7	; 11
 32e:	fe cf       	rjmp	.-4      	; 0x32c <UART_ReceiveChr>
			;
	/* Get and return received data from buffer */
	return UART_UDR_REG;
 330:	8c b1       	in	r24, 0x0c	; 12
}
 332:	08 95       	ret

00000334 <Led_Init>:

#include "Led_Interface.h"

void Led_Init(void)
{
	Dio_ConfigChannel(LED0_PORT, LED0_CHANNEL, OUTPUT);
 334:	41 e0       	ldi	r20, 0x01	; 1
 336:	62 e0       	ldi	r22, 0x02	; 2
 338:	82 e0       	ldi	r24, 0x02	; 2
 33a:	0e 94 c2 00 	call	0x184	; 0x184 <Dio_ConfigChannel>
	Dio_ConfigChannel(LED1_PORT, LED1_CHANNEL, OUTPUT);
 33e:	41 e0       	ldi	r20, 0x01	; 1
 340:	67 e0       	ldi	r22, 0x07	; 7
 342:	82 e0       	ldi	r24, 0x02	; 2
 344:	0e 94 c2 00 	call	0x184	; 0x184 <Dio_ConfigChannel>
	Dio_ConfigChannel(LED2_PORT, LED2_CHANNEL, OUTPUT);
 348:	41 e0       	ldi	r20, 0x01	; 1
 34a:	63 e0       	ldi	r22, 0x03	; 3
 34c:	83 e0       	ldi	r24, 0x03	; 3
 34e:	0e 94 c2 00 	call	0x184	; 0x184 <Dio_ConfigChannel>
 352:	08 95       	ret

00000354 <Led_Toggle>:
		break;
	}
}
void Led_Toggle(Led_ID led)
{
	switch (led)
 354:	81 30       	cpi	r24, 0x01	; 1
 356:	49 f0       	breq	.+18     	; 0x36a <Led_Toggle+0x16>
 358:	18 f0       	brcs	.+6      	; 0x360 <Led_Toggle+0xc>
 35a:	82 30       	cpi	r24, 0x02	; 2
 35c:	79 f4       	brne	.+30     	; 0x37c <Led_Toggle+0x28>
 35e:	0a c0       	rjmp	.+20     	; 0x374 <Led_Toggle+0x20>
	{
	case LED0:
		Dio_FlipChannel(LED0_PORT,LED0_CHANNEL);
 360:	62 e0       	ldi	r22, 0x02	; 2
 362:	82 e0       	ldi	r24, 0x02	; 2
 364:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_FlipChannel>
		break;
 368:	08 95       	ret
	case LED1:
		Dio_FlipChannel(LED1_PORT,LED1_CHANNEL);
 36a:	67 e0       	ldi	r22, 0x07	; 7
 36c:	82 e0       	ldi	r24, 0x02	; 2
 36e:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_FlipChannel>
		break;
 372:	08 95       	ret
	case LED2:
		Dio_FlipChannel(LED2_PORT,LED2_CHANNEL);
 374:	63 e0       	ldi	r22, 0x03	; 3
 376:	83 e0       	ldi	r24, 0x03	; 3
 378:	0e 94 3f 01 	call	0x27e	; 0x27e <Dio_FlipChannel>
 37c:	08 95       	ret

0000037e <main>:
#include "Uart_Interface.h"
#include "Led_Interface.h"
int main(void)
{
	u8 uartRead;
	Led_Init();
 37e:	0e 94 9a 01 	call	0x334	; 0x334 <Led_Init>
	UART_Init(103);
 382:	87 e6       	ldi	r24, 0x67	; 103
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <UART_Init>
	UART_TransmitStr("Hello UART.............");
 38a:	80 e6       	ldi	r24, 0x60	; 96
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	0e 94 87 01 	call	0x30e	; 0x30e <UART_TransmitStr>
    while(1)
    {
		uartRead = UART_ReceiveChr();
 392:	0e 94 96 01 	call	0x32c	; 0x32c <UART_ReceiveChr>
		
		if (uartRead == 'm')
 396:	8d 36       	cpi	r24, 0x6D	; 109
 398:	21 f4       	brne	.+8      	; 0x3a2 <main+0x24>
		{
			Led_Toggle(LED0);
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	0e 94 aa 01 	call	0x354	; 0x354 <Led_Toggle>
 3a0:	f8 cf       	rjmp	.-16     	; 0x392 <main+0x14>
		}
		else if (uartRead == 'l')
 3a2:	8c 36       	cpi	r24, 0x6C	; 108
 3a4:	b1 f7       	brne	.-20     	; 0x392 <main+0x14>
		{
			Led_Toggle(LED1);
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	0e 94 aa 01 	call	0x354	; 0x354 <Led_Toggle>
 3ac:	f2 cf       	rjmp	.-28     	; 0x392 <main+0x14>

000003ae <vfprintf>:
 3ae:	a2 e1       	ldi	r26, 0x12	; 18
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	ed ed       	ldi	r30, 0xDD	; 221
 3b4:	f1 e0       	ldi	r31, 0x01	; 1
 3b6:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__prologue_saves__>
 3ba:	7c 01       	movw	r14, r24
 3bc:	1b 01       	movw	r2, r22
 3be:	6a 01       	movw	r12, r20
 3c0:	fc 01       	movw	r30, r24
 3c2:	17 82       	std	Z+7, r1	; 0x07
 3c4:	16 82       	std	Z+6, r1	; 0x06
 3c6:	83 81       	ldd	r24, Z+3	; 0x03
 3c8:	81 fd       	sbrc	r24, 1
 3ca:	03 c0       	rjmp	.+6      	; 0x3d2 <vfprintf+0x24>
 3cc:	6b c3       	rjmp	.+1750   	; 0xaa4 <__stack+0x245>
 3ce:	65 01       	movw	r12, r10
 3d0:	05 c0       	rjmp	.+10     	; 0x3dc <vfprintf+0x2e>
 3d2:	88 24       	eor	r8, r8
 3d4:	83 94       	inc	r8
 3d6:	91 2c       	mov	r9, r1
 3d8:	8c 0e       	add	r8, r28
 3da:	9d 1e       	adc	r9, r29
 3dc:	f7 01       	movw	r30, r14
 3de:	93 81       	ldd	r25, Z+3	; 0x03
 3e0:	f1 01       	movw	r30, r2
 3e2:	93 fd       	sbrc	r25, 3
 3e4:	85 91       	lpm	r24, Z+
 3e6:	93 ff       	sbrs	r25, 3
 3e8:	81 91       	ld	r24, Z+
 3ea:	1f 01       	movw	r2, r30
 3ec:	88 23       	and	r24, r24
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <vfprintf+0x44>
 3f0:	55 c3       	rjmp	.+1706   	; 0xa9c <__stack+0x23d>
 3f2:	85 32       	cpi	r24, 0x25	; 37
 3f4:	39 f4       	brne	.+14     	; 0x404 <vfprintf+0x56>
 3f6:	93 fd       	sbrc	r25, 3
 3f8:	85 91       	lpm	r24, Z+
 3fa:	93 ff       	sbrs	r25, 3
 3fc:	81 91       	ld	r24, Z+
 3fe:	1f 01       	movw	r2, r30
 400:	85 32       	cpi	r24, 0x25	; 37
 402:	31 f4       	brne	.+12     	; 0x410 <vfprintf+0x62>
 404:	b7 01       	movw	r22, r14
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 40c:	56 01       	movw	r10, r12
 40e:	df cf       	rjmp	.-66     	; 0x3ce <vfprintf+0x20>
 410:	71 2c       	mov	r7, r1
 412:	61 2c       	mov	r6, r1
 414:	20 e0       	ldi	r18, 0x00	; 0
 416:	20 32       	cpi	r18, 0x20	; 32
 418:	a8 f4       	brcc	.+42     	; 0x444 <vfprintf+0x96>
 41a:	8b 32       	cpi	r24, 0x2B	; 43
 41c:	61 f0       	breq	.+24     	; 0x436 <vfprintf+0x88>
 41e:	28 f4       	brcc	.+10     	; 0x42a <vfprintf+0x7c>
 420:	80 32       	cpi	r24, 0x20	; 32
 422:	51 f0       	breq	.+20     	; 0x438 <vfprintf+0x8a>
 424:	83 32       	cpi	r24, 0x23	; 35
 426:	71 f4       	brne	.+28     	; 0x444 <vfprintf+0x96>
 428:	0b c0       	rjmp	.+22     	; 0x440 <vfprintf+0x92>
 42a:	8d 32       	cpi	r24, 0x2D	; 45
 42c:	39 f0       	breq	.+14     	; 0x43c <vfprintf+0x8e>
 42e:	80 33       	cpi	r24, 0x30	; 48
 430:	49 f4       	brne	.+18     	; 0x444 <vfprintf+0x96>
 432:	21 60       	ori	r18, 0x01	; 1
 434:	28 c0       	rjmp	.+80     	; 0x486 <vfprintf+0xd8>
 436:	22 60       	ori	r18, 0x02	; 2
 438:	24 60       	ori	r18, 0x04	; 4
 43a:	25 c0       	rjmp	.+74     	; 0x486 <vfprintf+0xd8>
 43c:	28 60       	ori	r18, 0x08	; 8
 43e:	23 c0       	rjmp	.+70     	; 0x486 <vfprintf+0xd8>
 440:	20 61       	ori	r18, 0x10	; 16
 442:	21 c0       	rjmp	.+66     	; 0x486 <vfprintf+0xd8>
 444:	27 fd       	sbrc	r18, 7
 446:	27 c0       	rjmp	.+78     	; 0x496 <vfprintf+0xe8>
 448:	38 2f       	mov	r19, r24
 44a:	30 53       	subi	r19, 0x30	; 48
 44c:	3a 30       	cpi	r19, 0x0A	; 10
 44e:	78 f4       	brcc	.+30     	; 0x46e <vfprintf+0xc0>
 450:	26 ff       	sbrs	r18, 6
 452:	06 c0       	rjmp	.+12     	; 0x460 <vfprintf+0xb2>
 454:	fa e0       	ldi	r31, 0x0A	; 10
 456:	7f 9e       	mul	r7, r31
 458:	30 0d       	add	r19, r0
 45a:	11 24       	eor	r1, r1
 45c:	73 2e       	mov	r7, r19
 45e:	13 c0       	rjmp	.+38     	; 0x486 <vfprintf+0xd8>
 460:	4a e0       	ldi	r20, 0x0A	; 10
 462:	64 9e       	mul	r6, r20
 464:	30 0d       	add	r19, r0
 466:	11 24       	eor	r1, r1
 468:	63 2e       	mov	r6, r19
 46a:	20 62       	ori	r18, 0x20	; 32
 46c:	0c c0       	rjmp	.+24     	; 0x486 <vfprintf+0xd8>
 46e:	8e 32       	cpi	r24, 0x2E	; 46
 470:	21 f4       	brne	.+8      	; 0x47a <vfprintf+0xcc>
 472:	26 fd       	sbrc	r18, 6
 474:	13 c3       	rjmp	.+1574   	; 0xa9c <__stack+0x23d>
 476:	20 64       	ori	r18, 0x40	; 64
 478:	06 c0       	rjmp	.+12     	; 0x486 <vfprintf+0xd8>
 47a:	8c 36       	cpi	r24, 0x6C	; 108
 47c:	11 f4       	brne	.+4      	; 0x482 <vfprintf+0xd4>
 47e:	20 68       	ori	r18, 0x80	; 128
 480:	02 c0       	rjmp	.+4      	; 0x486 <vfprintf+0xd8>
 482:	88 36       	cpi	r24, 0x68	; 104
 484:	41 f4       	brne	.+16     	; 0x496 <vfprintf+0xe8>
 486:	f1 01       	movw	r30, r2
 488:	93 fd       	sbrc	r25, 3
 48a:	85 91       	lpm	r24, Z+
 48c:	93 ff       	sbrs	r25, 3
 48e:	81 91       	ld	r24, Z+
 490:	1f 01       	movw	r2, r30
 492:	81 11       	cpse	r24, r1
 494:	c0 cf       	rjmp	.-128    	; 0x416 <vfprintf+0x68>
 496:	98 2f       	mov	r25, r24
 498:	95 54       	subi	r25, 0x45	; 69
 49a:	93 30       	cpi	r25, 0x03	; 3
 49c:	18 f4       	brcc	.+6      	; 0x4a4 <vfprintf+0xf6>
 49e:	20 61       	ori	r18, 0x10	; 16
 4a0:	80 5e       	subi	r24, 0xE0	; 224
 4a2:	06 c0       	rjmp	.+12     	; 0x4b0 <vfprintf+0x102>
 4a4:	98 2f       	mov	r25, r24
 4a6:	95 56       	subi	r25, 0x65	; 101
 4a8:	93 30       	cpi	r25, 0x03	; 3
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <vfprintf+0x100>
 4ac:	a4 c1       	rjmp	.+840    	; 0x7f6 <vfprintf+0x448>
 4ae:	2f 7e       	andi	r18, 0xEF	; 239
 4b0:	26 fd       	sbrc	r18, 6
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <vfprintf+0x10a>
 4b4:	16 e0       	ldi	r17, 0x06	; 6
 4b6:	71 2e       	mov	r7, r17
 4b8:	bf e3       	ldi	r27, 0x3F	; 63
 4ba:	5b 2e       	mov	r5, r27
 4bc:	52 22       	and	r5, r18
 4be:	85 36       	cpi	r24, 0x65	; 101
 4c0:	19 f4       	brne	.+6      	; 0x4c8 <vfprintf+0x11a>
 4c2:	f0 e4       	ldi	r31, 0x40	; 64
 4c4:	5f 2a       	or	r5, r31
 4c6:	07 c0       	rjmp	.+14     	; 0x4d6 <vfprintf+0x128>
 4c8:	86 36       	cpi	r24, 0x66	; 102
 4ca:	19 f4       	brne	.+6      	; 0x4d2 <vfprintf+0x124>
 4cc:	40 e8       	ldi	r20, 0x80	; 128
 4ce:	54 2a       	or	r5, r20
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <vfprintf+0x128>
 4d2:	71 10       	cpse	r7, r1
 4d4:	7a 94       	dec	r7
 4d6:	57 fe       	sbrs	r5, 7
 4d8:	07 c0       	rjmp	.+14     	; 0x4e8 <vfprintf+0x13a>
 4da:	5b e3       	ldi	r21, 0x3B	; 59
 4dc:	57 15       	cp	r21, r7
 4de:	48 f0       	brcs	.+18     	; 0x4f2 <vfprintf+0x144>
 4e0:	47 2c       	mov	r4, r7
 4e2:	43 94       	inc	r4
 4e4:	27 e0       	ldi	r18, 0x07	; 7
 4e6:	0d c0       	rjmp	.+26     	; 0x502 <vfprintf+0x154>
 4e8:	87 e0       	ldi	r24, 0x07	; 7
 4ea:	87 15       	cp	r24, r7
 4ec:	30 f0       	brcs	.+12     	; 0x4fa <vfprintf+0x14c>
 4ee:	27 2d       	mov	r18, r7
 4f0:	07 c0       	rjmp	.+14     	; 0x500 <vfprintf+0x152>
 4f2:	27 e0       	ldi	r18, 0x07	; 7
 4f4:	ac e3       	ldi	r26, 0x3C	; 60
 4f6:	4a 2e       	mov	r4, r26
 4f8:	04 c0       	rjmp	.+8      	; 0x502 <vfprintf+0x154>
 4fa:	27 e0       	ldi	r18, 0x07	; 7
 4fc:	f7 e0       	ldi	r31, 0x07	; 7
 4fe:	7f 2e       	mov	r7, r31
 500:	41 2c       	mov	r4, r1
 502:	56 01       	movw	r10, r12
 504:	94 e0       	ldi	r25, 0x04	; 4
 506:	a9 0e       	add	r10, r25
 508:	b1 1c       	adc	r11, r1
 50a:	f6 01       	movw	r30, r12
 50c:	60 81       	ld	r22, Z
 50e:	71 81       	ldd	r23, Z+1	; 0x01
 510:	82 81       	ldd	r24, Z+2	; 0x02
 512:	93 81       	ldd	r25, Z+3	; 0x03
 514:	04 2d       	mov	r16, r4
 516:	a4 01       	movw	r20, r8
 518:	0e 94 90 05 	call	0xb20	; 0xb20 <__ftoa_engine>
 51c:	8c 01       	movw	r16, r24
 51e:	49 81       	ldd	r20, Y+1	; 0x01
 520:	4c 87       	std	Y+12, r20	; 0x0c
 522:	40 ff       	sbrs	r20, 0
 524:	02 c0       	rjmp	.+4      	; 0x52a <vfprintf+0x17c>
 526:	43 ff       	sbrs	r20, 3
 528:	07 c0       	rjmp	.+14     	; 0x538 <vfprintf+0x18a>
 52a:	51 fc       	sbrc	r5, 1
 52c:	08 c0       	rjmp	.+16     	; 0x53e <vfprintf+0x190>
 52e:	52 fe       	sbrs	r5, 2
 530:	09 c0       	rjmp	.+18     	; 0x544 <vfprintf+0x196>
 532:	e0 e2       	ldi	r30, 0x20	; 32
 534:	de 2e       	mov	r13, r30
 536:	07 c0       	rjmp	.+14     	; 0x546 <vfprintf+0x198>
 538:	7d e2       	ldi	r23, 0x2D	; 45
 53a:	d7 2e       	mov	r13, r23
 53c:	04 c0       	rjmp	.+8      	; 0x546 <vfprintf+0x198>
 53e:	6b e2       	ldi	r22, 0x2B	; 43
 540:	d6 2e       	mov	r13, r22
 542:	01 c0       	rjmp	.+2      	; 0x546 <vfprintf+0x198>
 544:	d1 2c       	mov	r13, r1
 546:	8c 85       	ldd	r24, Y+12	; 0x0c
 548:	8c 70       	andi	r24, 0x0C	; 12
 54a:	a1 f1       	breq	.+104    	; 0x5b4 <vfprintf+0x206>
 54c:	dd 20       	and	r13, r13
 54e:	11 f0       	breq	.+4      	; 0x554 <vfprintf+0x1a6>
 550:	84 e0       	ldi	r24, 0x04	; 4
 552:	01 c0       	rjmp	.+2      	; 0x556 <vfprintf+0x1a8>
 554:	83 e0       	ldi	r24, 0x03	; 3
 556:	86 15       	cp	r24, r6
 558:	10 f0       	brcs	.+4      	; 0x55e <vfprintf+0x1b0>
 55a:	61 2c       	mov	r6, r1
 55c:	0b c0       	rjmp	.+22     	; 0x574 <vfprintf+0x1c6>
 55e:	68 1a       	sub	r6, r24
 560:	53 fc       	sbrc	r5, 3
 562:	08 c0       	rjmp	.+16     	; 0x574 <vfprintf+0x1c6>
 564:	b7 01       	movw	r22, r14
 566:	80 e2       	ldi	r24, 0x20	; 32
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 56e:	6a 94       	dec	r6
 570:	c9 f7       	brne	.-14     	; 0x564 <vfprintf+0x1b6>
 572:	f3 cf       	rjmp	.-26     	; 0x55a <vfprintf+0x1ac>
 574:	dd 20       	and	r13, r13
 576:	29 f0       	breq	.+10     	; 0x582 <vfprintf+0x1d4>
 578:	b7 01       	movw	r22, r14
 57a:	8d 2d       	mov	r24, r13
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 582:	5c 85       	ldd	r21, Y+12	; 0x0c
 584:	53 fd       	sbrc	r21, 3
 586:	03 c0       	rjmp	.+6      	; 0x58e <vfprintf+0x1e0>
 588:	08 e5       	ldi	r16, 0x58	; 88
 58a:	10 e0       	ldi	r17, 0x00	; 0
 58c:	0c c0       	rjmp	.+24     	; 0x5a6 <vfprintf+0x1f8>
 58e:	04 e5       	ldi	r16, 0x54	; 84
 590:	10 e0       	ldi	r17, 0x00	; 0
 592:	09 c0       	rjmp	.+18     	; 0x5a6 <vfprintf+0x1f8>
 594:	51 10       	cpse	r5, r1
 596:	80 52       	subi	r24, 0x20	; 32
 598:	b7 01       	movw	r22, r14
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 5a0:	0f 5f       	subi	r16, 0xFF	; 255
 5a2:	1f 4f       	sbci	r17, 0xFF	; 255
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <vfprintf+0x1fc>
 5a6:	80 e1       	ldi	r24, 0x10	; 16
 5a8:	58 22       	and	r5, r24
 5aa:	f8 01       	movw	r30, r16
 5ac:	84 91       	lpm	r24, Z
 5ae:	81 11       	cpse	r24, r1
 5b0:	f1 cf       	rjmp	.-30     	; 0x594 <vfprintf+0x1e6>
 5b2:	71 c2       	rjmp	.+1250   	; 0xa96 <__stack+0x237>
 5b4:	57 fe       	sbrs	r5, 7
 5b6:	0e c0       	rjmp	.+28     	; 0x5d4 <vfprintf+0x226>
 5b8:	40 0e       	add	r4, r16
 5ba:	4c 85       	ldd	r20, Y+12	; 0x0c
 5bc:	44 ff       	sbrs	r20, 4
 5be:	04 c0       	rjmp	.+8      	; 0x5c8 <vfprintf+0x21a>
 5c0:	8a 81       	ldd	r24, Y+2	; 0x02
 5c2:	81 33       	cpi	r24, 0x31	; 49
 5c4:	09 f4       	brne	.+2      	; 0x5c8 <vfprintf+0x21a>
 5c6:	4a 94       	dec	r4
 5c8:	14 14       	cp	r1, r4
 5ca:	4c f5       	brge	.+82     	; 0x61e <vfprintf+0x270>
 5cc:	58 e0       	ldi	r21, 0x08	; 8
 5ce:	54 15       	cp	r21, r4
 5d0:	48 f1       	brcs	.+82     	; 0x624 <vfprintf+0x276>
 5d2:	2c c0       	rjmp	.+88     	; 0x62c <vfprintf+0x27e>
 5d4:	56 fc       	sbrc	r5, 6
 5d6:	2a c0       	rjmp	.+84     	; 0x62c <vfprintf+0x27e>
 5d8:	87 2d       	mov	r24, r7
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	80 17       	cp	r24, r16
 5de:	91 07       	cpc	r25, r17
 5e0:	44 f0       	brlt	.+16     	; 0x5f2 <vfprintf+0x244>
 5e2:	0c 3f       	cpi	r16, 0xFC	; 252
 5e4:	8f ef       	ldi	r24, 0xFF	; 255
 5e6:	18 07       	cpc	r17, r24
 5e8:	24 f0       	brlt	.+8      	; 0x5f2 <vfprintf+0x244>
 5ea:	90 e8       	ldi	r25, 0x80	; 128
 5ec:	59 2a       	or	r5, r25
 5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <vfprintf+0x244>
 5f0:	7a 94       	dec	r7
 5f2:	77 20       	and	r7, r7
 5f4:	49 f0       	breq	.+18     	; 0x608 <vfprintf+0x25a>
 5f6:	e2 e0       	ldi	r30, 0x02	; 2
 5f8:	f0 e0       	ldi	r31, 0x00	; 0
 5fa:	ec 0f       	add	r30, r28
 5fc:	fd 1f       	adc	r31, r29
 5fe:	e7 0d       	add	r30, r7
 600:	f1 1d       	adc	r31, r1
 602:	80 81       	ld	r24, Z
 604:	80 33       	cpi	r24, 0x30	; 48
 606:	a1 f3       	breq	.-24     	; 0x5f0 <vfprintf+0x242>
 608:	57 fe       	sbrs	r5, 7
 60a:	10 c0       	rjmp	.+32     	; 0x62c <vfprintf+0x27e>
 60c:	47 2c       	mov	r4, r7
 60e:	43 94       	inc	r4
 610:	87 2d       	mov	r24, r7
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	08 17       	cp	r16, r24
 616:	19 07       	cpc	r17, r25
 618:	44 f4       	brge	.+16     	; 0x62a <vfprintf+0x27c>
 61a:	70 1a       	sub	r7, r16
 61c:	07 c0       	rjmp	.+14     	; 0x62c <vfprintf+0x27e>
 61e:	44 24       	eor	r4, r4
 620:	43 94       	inc	r4
 622:	04 c0       	rjmp	.+8      	; 0x62c <vfprintf+0x27e>
 624:	58 e0       	ldi	r21, 0x08	; 8
 626:	45 2e       	mov	r4, r21
 628:	01 c0       	rjmp	.+2      	; 0x62c <vfprintf+0x27e>
 62a:	71 2c       	mov	r7, r1
 62c:	57 fe       	sbrs	r5, 7
 62e:	07 c0       	rjmp	.+14     	; 0x63e <vfprintf+0x290>
 630:	10 16       	cp	r1, r16
 632:	11 06       	cpc	r1, r17
 634:	3c f4       	brge	.+14     	; 0x644 <vfprintf+0x296>
 636:	98 01       	movw	r18, r16
 638:	2f 5f       	subi	r18, 0xFF	; 255
 63a:	3f 4f       	sbci	r19, 0xFF	; 255
 63c:	05 c0       	rjmp	.+10     	; 0x648 <vfprintf+0x29a>
 63e:	25 e0       	ldi	r18, 0x05	; 5
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	02 c0       	rjmp	.+4      	; 0x648 <vfprintf+0x29a>
 644:	21 e0       	ldi	r18, 0x01	; 1
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	dd 20       	and	r13, r13
 64a:	11 f0       	breq	.+4      	; 0x650 <vfprintf+0x2a2>
 64c:	2f 5f       	subi	r18, 0xFF	; 255
 64e:	3f 4f       	sbci	r19, 0xFF	; 255
 650:	77 20       	and	r7, r7
 652:	31 f0       	breq	.+12     	; 0x660 <vfprintf+0x2b2>
 654:	47 2d       	mov	r20, r7
 656:	50 e0       	ldi	r21, 0x00	; 0
 658:	4f 5f       	subi	r20, 0xFF	; 255
 65a:	5f 4f       	sbci	r21, 0xFF	; 255
 65c:	24 0f       	add	r18, r20
 65e:	35 1f       	adc	r19, r21
 660:	46 2d       	mov	r20, r6
 662:	50 e0       	ldi	r21, 0x00	; 0
 664:	24 17       	cp	r18, r20
 666:	35 07       	cpc	r19, r21
 668:	14 f4       	brge	.+4      	; 0x66e <vfprintf+0x2c0>
 66a:	62 1a       	sub	r6, r18
 66c:	01 c0       	rjmp	.+2      	; 0x670 <vfprintf+0x2c2>
 66e:	61 2c       	mov	r6, r1
 670:	85 2d       	mov	r24, r5
 672:	89 70       	andi	r24, 0x09	; 9
 674:	49 f4       	brne	.+18     	; 0x688 <vfprintf+0x2da>
 676:	06 c0       	rjmp	.+12     	; 0x684 <vfprintf+0x2d6>
 678:	b7 01       	movw	r22, r14
 67a:	80 e2       	ldi	r24, 0x20	; 32
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 682:	6a 94       	dec	r6
 684:	61 10       	cpse	r6, r1
 686:	f8 cf       	rjmp	.-16     	; 0x678 <vfprintf+0x2ca>
 688:	dd 20       	and	r13, r13
 68a:	29 f0       	breq	.+10     	; 0x696 <vfprintf+0x2e8>
 68c:	b7 01       	movw	r22, r14
 68e:	8d 2d       	mov	r24, r13
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 696:	53 fc       	sbrc	r5, 3
 698:	09 c0       	rjmp	.+18     	; 0x6ac <vfprintf+0x2fe>
 69a:	06 c0       	rjmp	.+12     	; 0x6a8 <vfprintf+0x2fa>
 69c:	b7 01       	movw	r22, r14
 69e:	80 e3       	ldi	r24, 0x30	; 48
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 6a6:	6a 94       	dec	r6
 6a8:	61 10       	cpse	r6, r1
 6aa:	f8 cf       	rjmp	.-16     	; 0x69c <vfprintf+0x2ee>
 6ac:	57 fe       	sbrs	r5, 7
 6ae:	56 c0       	rjmp	.+172    	; 0x75c <vfprintf+0x3ae>
 6b0:	68 01       	movw	r12, r16
 6b2:	17 ff       	sbrs	r17, 7
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <vfprintf+0x30c>
 6b6:	c1 2c       	mov	r12, r1
 6b8:	d1 2c       	mov	r13, r1
 6ba:	20 e0       	ldi	r18, 0x00	; 0
 6bc:	30 e0       	ldi	r19, 0x00	; 0
 6be:	a8 01       	movw	r20, r16
 6c0:	44 19       	sub	r20, r4
 6c2:	51 09       	sbc	r21, r1
 6c4:	5e 87       	std	Y+14, r21	; 0x0e
 6c6:	4d 87       	std	Y+13, r20	; 0x0d
 6c8:	28 01       	movw	r4, r16
 6ca:	4c 18       	sub	r4, r12
 6cc:	5d 08       	sbc	r5, r13
 6ce:	48 0c       	add	r4, r8
 6d0:	59 1c       	adc	r5, r9
 6d2:	87 2d       	mov	r24, r7
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	44 27       	eor	r20, r20
 6d8:	55 27       	eor	r21, r21
 6da:	48 1b       	sub	r20, r24
 6dc:	59 0b       	sbc	r21, r25
 6de:	58 8b       	std	Y+16, r21	; 0x10
 6e0:	4f 87       	std	Y+15, r20	; 0x0f
 6e2:	5f ef       	ldi	r21, 0xFF	; 255
 6e4:	c5 16       	cp	r12, r21
 6e6:	d5 06       	cpc	r13, r21
 6e8:	49 f4       	brne	.+18     	; 0x6fc <vfprintf+0x34e>
 6ea:	b7 01       	movw	r22, r14
 6ec:	8e e2       	ldi	r24, 0x2E	; 46
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	2a 8b       	std	Y+18, r18	; 0x12
 6f2:	39 8b       	std	Y+17, r19	; 0x11
 6f4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 6f8:	39 89       	ldd	r19, Y+17	; 0x11
 6fa:	2a 89       	ldd	r18, Y+18	; 0x12
 6fc:	0c 15       	cp	r16, r12
 6fe:	1d 05       	cpc	r17, r13
 700:	54 f0       	brlt	.+20     	; 0x716 <vfprintf+0x368>
 702:	4d 85       	ldd	r20, Y+13	; 0x0d
 704:	5e 85       	ldd	r21, Y+14	; 0x0e
 706:	4c 15       	cp	r20, r12
 708:	5d 05       	cpc	r21, r13
 70a:	2c f4       	brge	.+10     	; 0x716 <vfprintf+0x368>
 70c:	f2 01       	movw	r30, r4
 70e:	e2 0f       	add	r30, r18
 710:	f3 1f       	adc	r31, r19
 712:	81 81       	ldd	r24, Z+1	; 0x01
 714:	01 c0       	rjmp	.+2      	; 0x718 <vfprintf+0x36a>
 716:	80 e3       	ldi	r24, 0x30	; 48
 718:	51 e0       	ldi	r21, 0x01	; 1
 71a:	c5 1a       	sub	r12, r21
 71c:	d1 08       	sbc	r13, r1
 71e:	2f 5f       	subi	r18, 0xFF	; 255
 720:	3f 4f       	sbci	r19, 0xFF	; 255
 722:	4f 85       	ldd	r20, Y+15	; 0x0f
 724:	58 89       	ldd	r21, Y+16	; 0x10
 726:	c4 16       	cp	r12, r20
 728:	d5 06       	cpc	r13, r21
 72a:	4c f0       	brlt	.+18     	; 0x73e <vfprintf+0x390>
 72c:	b7 01       	movw	r22, r14
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	2a 8b       	std	Y+18, r18	; 0x12
 732:	39 8b       	std	Y+17, r19	; 0x11
 734:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 738:	2a 89       	ldd	r18, Y+18	; 0x12
 73a:	39 89       	ldd	r19, Y+17	; 0x11
 73c:	d2 cf       	rjmp	.-92     	; 0x6e2 <vfprintf+0x334>
 73e:	c0 16       	cp	r12, r16
 740:	d1 06       	cpc	r13, r17
 742:	49 f4       	brne	.+18     	; 0x756 <vfprintf+0x3a8>
 744:	9a 81       	ldd	r25, Y+2	; 0x02
 746:	96 33       	cpi	r25, 0x36	; 54
 748:	28 f4       	brcc	.+10     	; 0x754 <vfprintf+0x3a6>
 74a:	95 33       	cpi	r25, 0x35	; 53
 74c:	21 f4       	brne	.+8      	; 0x756 <vfprintf+0x3a8>
 74e:	5c 85       	ldd	r21, Y+12	; 0x0c
 750:	54 fd       	sbrc	r21, 4
 752:	01 c0       	rjmp	.+2      	; 0x756 <vfprintf+0x3a8>
 754:	81 e3       	ldi	r24, 0x31	; 49
 756:	b7 01       	movw	r22, r14
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	4a c0       	rjmp	.+148    	; 0x7f0 <vfprintf+0x442>
 75c:	8a 81       	ldd	r24, Y+2	; 0x02
 75e:	81 33       	cpi	r24, 0x31	; 49
 760:	19 f0       	breq	.+6      	; 0x768 <vfprintf+0x3ba>
 762:	4c 85       	ldd	r20, Y+12	; 0x0c
 764:	4f 7e       	andi	r20, 0xEF	; 239
 766:	4c 87       	std	Y+12, r20	; 0x0c
 768:	b7 01       	movw	r22, r14
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 770:	71 10       	cpse	r7, r1
 772:	05 c0       	rjmp	.+10     	; 0x77e <vfprintf+0x3d0>
 774:	54 fe       	sbrs	r5, 4
 776:	16 c0       	rjmp	.+44     	; 0x7a4 <vfprintf+0x3f6>
 778:	85 e4       	ldi	r24, 0x45	; 69
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	15 c0       	rjmp	.+42     	; 0x7a8 <vfprintf+0x3fa>
 77e:	b7 01       	movw	r22, r14
 780:	8e e2       	ldi	r24, 0x2E	; 46
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 788:	42 e0       	ldi	r20, 0x02	; 2
 78a:	d4 2e       	mov	r13, r20
 78c:	f4 01       	movw	r30, r8
 78e:	ed 0d       	add	r30, r13
 790:	f1 1d       	adc	r31, r1
 792:	d3 94       	inc	r13
 794:	b7 01       	movw	r22, r14
 796:	80 81       	ld	r24, Z
 798:	90 e0       	ldi	r25, 0x00	; 0
 79a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 79e:	7a 94       	dec	r7
 7a0:	a9 f7       	brne	.-22     	; 0x78c <vfprintf+0x3de>
 7a2:	e8 cf       	rjmp	.-48     	; 0x774 <vfprintf+0x3c6>
 7a4:	85 e6       	ldi	r24, 0x65	; 101
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	b7 01       	movw	r22, r14
 7aa:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 7ae:	17 fd       	sbrc	r17, 7
 7b0:	06 c0       	rjmp	.+12     	; 0x7be <vfprintf+0x410>
 7b2:	01 15       	cp	r16, r1
 7b4:	11 05       	cpc	r17, r1
 7b6:	41 f4       	brne	.+16     	; 0x7c8 <vfprintf+0x41a>
 7b8:	5c 85       	ldd	r21, Y+12	; 0x0c
 7ba:	54 ff       	sbrs	r21, 4
 7bc:	05 c0       	rjmp	.+10     	; 0x7c8 <vfprintf+0x41a>
 7be:	11 95       	neg	r17
 7c0:	01 95       	neg	r16
 7c2:	11 09       	sbc	r17, r1
 7c4:	8d e2       	ldi	r24, 0x2D	; 45
 7c6:	01 c0       	rjmp	.+2      	; 0x7ca <vfprintf+0x41c>
 7c8:	8b e2       	ldi	r24, 0x2B	; 43
 7ca:	b7 01       	movw	r22, r14
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 7d2:	80 e3       	ldi	r24, 0x30	; 48
 7d4:	03 c0       	rjmp	.+6      	; 0x7dc <vfprintf+0x42e>
 7d6:	8f 5f       	subi	r24, 0xFF	; 255
 7d8:	0a 50       	subi	r16, 0x0A	; 10
 7da:	11 09       	sbc	r17, r1
 7dc:	0a 30       	cpi	r16, 0x0A	; 10
 7de:	11 05       	cpc	r17, r1
 7e0:	d4 f7       	brge	.-12     	; 0x7d6 <vfprintf+0x428>
 7e2:	b7 01       	movw	r22, r14
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 7ea:	b7 01       	movw	r22, r14
 7ec:	c8 01       	movw	r24, r16
 7ee:	c0 96       	adiw	r24, 0x30	; 48
 7f0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 7f4:	50 c1       	rjmp	.+672    	; 0xa96 <__stack+0x237>
 7f6:	83 36       	cpi	r24, 0x63	; 99
 7f8:	31 f0       	breq	.+12     	; 0x806 <vfprintf+0x458>
 7fa:	83 37       	cpi	r24, 0x73	; 115
 7fc:	81 f0       	breq	.+32     	; 0x81e <vfprintf+0x470>
 7fe:	83 35       	cpi	r24, 0x53	; 83
 800:	09 f0       	breq	.+2      	; 0x804 <vfprintf+0x456>
 802:	5e c0       	rjmp	.+188    	; 0x8c0 <__stack+0x61>
 804:	24 c0       	rjmp	.+72     	; 0x84e <vfprintf+0x4a0>
 806:	56 01       	movw	r10, r12
 808:	82 e0       	ldi	r24, 0x02	; 2
 80a:	a8 0e       	add	r10, r24
 80c:	b1 1c       	adc	r11, r1
 80e:	f6 01       	movw	r30, r12
 810:	80 81       	ld	r24, Z
 812:	89 83       	std	Y+1, r24	; 0x01
 814:	cc 24       	eor	r12, r12
 816:	c3 94       	inc	r12
 818:	d1 2c       	mov	r13, r1
 81a:	84 01       	movw	r16, r8
 81c:	14 c0       	rjmp	.+40     	; 0x846 <vfprintf+0x498>
 81e:	56 01       	movw	r10, r12
 820:	f2 e0       	ldi	r31, 0x02	; 2
 822:	af 0e       	add	r10, r31
 824:	b1 1c       	adc	r11, r1
 826:	f6 01       	movw	r30, r12
 828:	00 81       	ld	r16, Z
 82a:	11 81       	ldd	r17, Z+1	; 0x01
 82c:	26 ff       	sbrs	r18, 6
 82e:	03 c0       	rjmp	.+6      	; 0x836 <vfprintf+0x488>
 830:	67 2d       	mov	r22, r7
 832:	70 e0       	ldi	r23, 0x00	; 0
 834:	02 c0       	rjmp	.+4      	; 0x83a <vfprintf+0x48c>
 836:	6f ef       	ldi	r22, 0xFF	; 255
 838:	7f ef       	ldi	r23, 0xFF	; 255
 83a:	c8 01       	movw	r24, r16
 83c:	2a 8b       	std	Y+18, r18	; 0x12
 83e:	0e 94 73 06 	call	0xce6	; 0xce6 <strnlen>
 842:	6c 01       	movw	r12, r24
 844:	2a 89       	ldd	r18, Y+18	; 0x12
 846:	9f e7       	ldi	r25, 0x7F	; 127
 848:	59 2e       	mov	r5, r25
 84a:	52 22       	and	r5, r18
 84c:	17 c0       	rjmp	.+46     	; 0x87c <__stack+0x1d>
 84e:	56 01       	movw	r10, r12
 850:	f2 e0       	ldi	r31, 0x02	; 2
 852:	af 0e       	add	r10, r31
 854:	b1 1c       	adc	r11, r1
 856:	f6 01       	movw	r30, r12
 858:	00 81       	ld	r16, Z
 85a:	11 81       	ldd	r17, Z+1	; 0x01
 85c:	26 ff       	sbrs	r18, 6
 85e:	03 c0       	rjmp	.+6      	; 0x866 <__stack+0x7>
 860:	67 2d       	mov	r22, r7
 862:	70 e0       	ldi	r23, 0x00	; 0
 864:	02 c0       	rjmp	.+4      	; 0x86a <__stack+0xb>
 866:	6f ef       	ldi	r22, 0xFF	; 255
 868:	7f ef       	ldi	r23, 0xFF	; 255
 86a:	c8 01       	movw	r24, r16
 86c:	2a 8b       	std	Y+18, r18	; 0x12
 86e:	0e 94 68 06 	call	0xcd0	; 0xcd0 <strnlen_P>
 872:	6c 01       	movw	r12, r24
 874:	2a 89       	ldd	r18, Y+18	; 0x12
 876:	80 e8       	ldi	r24, 0x80	; 128
 878:	58 2e       	mov	r5, r24
 87a:	52 2a       	or	r5, r18
 87c:	53 fc       	sbrc	r5, 3
 87e:	1c c0       	rjmp	.+56     	; 0x8b8 <__stack+0x59>
 880:	06 c0       	rjmp	.+12     	; 0x88e <__stack+0x2f>
 882:	b7 01       	movw	r22, r14
 884:	80 e2       	ldi	r24, 0x20	; 32
 886:	90 e0       	ldi	r25, 0x00	; 0
 888:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 88c:	6a 94       	dec	r6
 88e:	86 2d       	mov	r24, r6
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	c8 16       	cp	r12, r24
 894:	d9 06       	cpc	r13, r25
 896:	a8 f3       	brcs	.-22     	; 0x882 <__stack+0x23>
 898:	0f c0       	rjmp	.+30     	; 0x8b8 <__stack+0x59>
 89a:	f8 01       	movw	r30, r16
 89c:	57 fc       	sbrc	r5, 7
 89e:	85 91       	lpm	r24, Z+
 8a0:	57 fe       	sbrs	r5, 7
 8a2:	81 91       	ld	r24, Z+
 8a4:	8f 01       	movw	r16, r30
 8a6:	b7 01       	movw	r22, r14
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 8ae:	61 10       	cpse	r6, r1
 8b0:	6a 94       	dec	r6
 8b2:	f1 e0       	ldi	r31, 0x01	; 1
 8b4:	cf 1a       	sub	r12, r31
 8b6:	d1 08       	sbc	r13, r1
 8b8:	c1 14       	cp	r12, r1
 8ba:	d1 04       	cpc	r13, r1
 8bc:	71 f7       	brne	.-36     	; 0x89a <__stack+0x3b>
 8be:	eb c0       	rjmp	.+470    	; 0xa96 <__stack+0x237>
 8c0:	84 36       	cpi	r24, 0x64	; 100
 8c2:	11 f0       	breq	.+4      	; 0x8c8 <__stack+0x69>
 8c4:	89 36       	cpi	r24, 0x69	; 105
 8c6:	51 f5       	brne	.+84     	; 0x91c <__stack+0xbd>
 8c8:	56 01       	movw	r10, r12
 8ca:	27 ff       	sbrs	r18, 7
 8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
 8ce:	44 e0       	ldi	r20, 0x04	; 4
 8d0:	a4 0e       	add	r10, r20
 8d2:	b1 1c       	adc	r11, r1
 8d4:	f6 01       	movw	r30, r12
 8d6:	60 81       	ld	r22, Z
 8d8:	71 81       	ldd	r23, Z+1	; 0x01
 8da:	82 81       	ldd	r24, Z+2	; 0x02
 8dc:	93 81       	ldd	r25, Z+3	; 0x03
 8de:	0a c0       	rjmp	.+20     	; 0x8f4 <__stack+0x95>
 8e0:	f2 e0       	ldi	r31, 0x02	; 2
 8e2:	af 0e       	add	r10, r31
 8e4:	b1 1c       	adc	r11, r1
 8e6:	f6 01       	movw	r30, r12
 8e8:	60 81       	ld	r22, Z
 8ea:	71 81       	ldd	r23, Z+1	; 0x01
 8ec:	88 27       	eor	r24, r24
 8ee:	77 fd       	sbrc	r23, 7
 8f0:	80 95       	com	r24
 8f2:	98 2f       	mov	r25, r24
 8f4:	12 2f       	mov	r17, r18
 8f6:	1f 76       	andi	r17, 0x6F	; 111
 8f8:	97 ff       	sbrs	r25, 7
 8fa:	08 c0       	rjmp	.+16     	; 0x90c <__stack+0xad>
 8fc:	90 95       	com	r25
 8fe:	80 95       	com	r24
 900:	70 95       	com	r23
 902:	61 95       	neg	r22
 904:	7f 4f       	sbci	r23, 0xFF	; 255
 906:	8f 4f       	sbci	r24, 0xFF	; 255
 908:	9f 4f       	sbci	r25, 0xFF	; 255
 90a:	10 68       	ori	r17, 0x80	; 128
 90c:	2a e0       	ldi	r18, 0x0A	; 10
 90e:	30 e0       	ldi	r19, 0x00	; 0
 910:	a4 01       	movw	r20, r8
 912:	0e 94 aa 06 	call	0xd54	; 0xd54 <__ultoa_invert>
 916:	d8 2e       	mov	r13, r24
 918:	d8 18       	sub	r13, r8
 91a:	40 c0       	rjmp	.+128    	; 0x99c <__stack+0x13d>
 91c:	12 2f       	mov	r17, r18
 91e:	85 37       	cpi	r24, 0x75	; 117
 920:	21 f4       	brne	.+8      	; 0x92a <__stack+0xcb>
 922:	1f 7e       	andi	r17, 0xEF	; 239
 924:	2a e0       	ldi	r18, 0x0A	; 10
 926:	30 e0       	ldi	r19, 0x00	; 0
 928:	1f c0       	rjmp	.+62     	; 0x968 <__stack+0x109>
 92a:	19 7f       	andi	r17, 0xF9	; 249
 92c:	8f 36       	cpi	r24, 0x6F	; 111
 92e:	a1 f0       	breq	.+40     	; 0x958 <__stack+0xf9>
 930:	20 f4       	brcc	.+8      	; 0x93a <__stack+0xdb>
 932:	88 35       	cpi	r24, 0x58	; 88
 934:	09 f0       	breq	.+2      	; 0x938 <__stack+0xd9>
 936:	b2 c0       	rjmp	.+356    	; 0xa9c <__stack+0x23d>
 938:	0b c0       	rjmp	.+22     	; 0x950 <__stack+0xf1>
 93a:	80 37       	cpi	r24, 0x70	; 112
 93c:	21 f0       	breq	.+8      	; 0x946 <__stack+0xe7>
 93e:	88 37       	cpi	r24, 0x78	; 120
 940:	09 f0       	breq	.+2      	; 0x944 <__stack+0xe5>
 942:	ac c0       	rjmp	.+344    	; 0xa9c <__stack+0x23d>
 944:	01 c0       	rjmp	.+2      	; 0x948 <__stack+0xe9>
 946:	10 61       	ori	r17, 0x10	; 16
 948:	14 ff       	sbrs	r17, 4
 94a:	09 c0       	rjmp	.+18     	; 0x95e <__stack+0xff>
 94c:	14 60       	ori	r17, 0x04	; 4
 94e:	07 c0       	rjmp	.+14     	; 0x95e <__stack+0xff>
 950:	24 ff       	sbrs	r18, 4
 952:	08 c0       	rjmp	.+16     	; 0x964 <__stack+0x105>
 954:	16 60       	ori	r17, 0x06	; 6
 956:	06 c0       	rjmp	.+12     	; 0x964 <__stack+0x105>
 958:	28 e0       	ldi	r18, 0x08	; 8
 95a:	30 e0       	ldi	r19, 0x00	; 0
 95c:	05 c0       	rjmp	.+10     	; 0x968 <__stack+0x109>
 95e:	20 e1       	ldi	r18, 0x10	; 16
 960:	30 e0       	ldi	r19, 0x00	; 0
 962:	02 c0       	rjmp	.+4      	; 0x968 <__stack+0x109>
 964:	20 e1       	ldi	r18, 0x10	; 16
 966:	32 e0       	ldi	r19, 0x02	; 2
 968:	56 01       	movw	r10, r12
 96a:	17 ff       	sbrs	r17, 7
 96c:	09 c0       	rjmp	.+18     	; 0x980 <__stack+0x121>
 96e:	f4 e0       	ldi	r31, 0x04	; 4
 970:	af 0e       	add	r10, r31
 972:	b1 1c       	adc	r11, r1
 974:	f6 01       	movw	r30, r12
 976:	60 81       	ld	r22, Z
 978:	71 81       	ldd	r23, Z+1	; 0x01
 97a:	82 81       	ldd	r24, Z+2	; 0x02
 97c:	93 81       	ldd	r25, Z+3	; 0x03
 97e:	08 c0       	rjmp	.+16     	; 0x990 <__stack+0x131>
 980:	f2 e0       	ldi	r31, 0x02	; 2
 982:	af 0e       	add	r10, r31
 984:	b1 1c       	adc	r11, r1
 986:	f6 01       	movw	r30, r12
 988:	60 81       	ld	r22, Z
 98a:	71 81       	ldd	r23, Z+1	; 0x01
 98c:	80 e0       	ldi	r24, 0x00	; 0
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	a4 01       	movw	r20, r8
 992:	0e 94 aa 06 	call	0xd54	; 0xd54 <__ultoa_invert>
 996:	d8 2e       	mov	r13, r24
 998:	d8 18       	sub	r13, r8
 99a:	1f 77       	andi	r17, 0x7F	; 127
 99c:	16 ff       	sbrs	r17, 6
 99e:	0b c0       	rjmp	.+22     	; 0x9b6 <__stack+0x157>
 9a0:	21 2f       	mov	r18, r17
 9a2:	2e 7f       	andi	r18, 0xFE	; 254
 9a4:	d7 14       	cp	r13, r7
 9a6:	50 f4       	brcc	.+20     	; 0x9bc <__stack+0x15d>
 9a8:	14 ff       	sbrs	r17, 4
 9aa:	0a c0       	rjmp	.+20     	; 0x9c0 <__stack+0x161>
 9ac:	12 fd       	sbrc	r17, 2
 9ae:	08 c0       	rjmp	.+16     	; 0x9c0 <__stack+0x161>
 9b0:	21 2f       	mov	r18, r17
 9b2:	2e 7e       	andi	r18, 0xEE	; 238
 9b4:	05 c0       	rjmp	.+10     	; 0x9c0 <__stack+0x161>
 9b6:	0d 2d       	mov	r16, r13
 9b8:	21 2f       	mov	r18, r17
 9ba:	03 c0       	rjmp	.+6      	; 0x9c2 <__stack+0x163>
 9bc:	0d 2d       	mov	r16, r13
 9be:	01 c0       	rjmp	.+2      	; 0x9c2 <__stack+0x163>
 9c0:	07 2d       	mov	r16, r7
 9c2:	24 ff       	sbrs	r18, 4
 9c4:	0c c0       	rjmp	.+24     	; 0x9de <__stack+0x17f>
 9c6:	fe 01       	movw	r30, r28
 9c8:	ed 0d       	add	r30, r13
 9ca:	f1 1d       	adc	r31, r1
 9cc:	80 81       	ld	r24, Z
 9ce:	80 33       	cpi	r24, 0x30	; 48
 9d0:	11 f4       	brne	.+4      	; 0x9d6 <__stack+0x177>
 9d2:	29 7e       	andi	r18, 0xE9	; 233
 9d4:	08 c0       	rjmp	.+16     	; 0x9e6 <__stack+0x187>
 9d6:	22 ff       	sbrs	r18, 2
 9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <__stack+0x185>
 9da:	0e 5f       	subi	r16, 0xFE	; 254
 9dc:	04 c0       	rjmp	.+8      	; 0x9e6 <__stack+0x187>
 9de:	82 2f       	mov	r24, r18
 9e0:	86 78       	andi	r24, 0x86	; 134
 9e2:	09 f0       	breq	.+2      	; 0x9e6 <__stack+0x187>
 9e4:	0f 5f       	subi	r16, 0xFF	; 255
 9e6:	23 fd       	sbrc	r18, 3
 9e8:	14 c0       	rjmp	.+40     	; 0xa12 <__stack+0x1b3>
 9ea:	20 ff       	sbrs	r18, 0
 9ec:	0f c0       	rjmp	.+30     	; 0xa0c <__stack+0x1ad>
 9ee:	7d 2c       	mov	r7, r13
 9f0:	06 15       	cp	r16, r6
 9f2:	60 f4       	brcc	.+24     	; 0xa0c <__stack+0x1ad>
 9f4:	76 0c       	add	r7, r6
 9f6:	70 1a       	sub	r7, r16
 9f8:	06 2d       	mov	r16, r6
 9fa:	08 c0       	rjmp	.+16     	; 0xa0c <__stack+0x1ad>
 9fc:	b7 01       	movw	r22, r14
 9fe:	80 e2       	ldi	r24, 0x20	; 32
 a00:	90 e0       	ldi	r25, 0x00	; 0
 a02:	2a 8b       	std	Y+18, r18	; 0x12
 a04:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 a08:	0f 5f       	subi	r16, 0xFF	; 255
 a0a:	2a 89       	ldd	r18, Y+18	; 0x12
 a0c:	06 15       	cp	r16, r6
 a0e:	b0 f3       	brcs	.-20     	; 0x9fc <__stack+0x19d>
 a10:	04 c0       	rjmp	.+8      	; 0xa1a <__stack+0x1bb>
 a12:	06 15       	cp	r16, r6
 a14:	10 f4       	brcc	.+4      	; 0xa1a <__stack+0x1bb>
 a16:	60 1a       	sub	r6, r16
 a18:	01 c0       	rjmp	.+2      	; 0xa1c <__stack+0x1bd>
 a1a:	61 2c       	mov	r6, r1
 a1c:	24 ff       	sbrs	r18, 4
 a1e:	12 c0       	rjmp	.+36     	; 0xa44 <__stack+0x1e5>
 a20:	b7 01       	movw	r22, r14
 a22:	80 e3       	ldi	r24, 0x30	; 48
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	2a 8b       	std	Y+18, r18	; 0x12
 a28:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 a2c:	2a 89       	ldd	r18, Y+18	; 0x12
 a2e:	22 ff       	sbrs	r18, 2
 a30:	1e c0       	rjmp	.+60     	; 0xa6e <__stack+0x20f>
 a32:	21 ff       	sbrs	r18, 1
 a34:	03 c0       	rjmp	.+6      	; 0xa3c <__stack+0x1dd>
 a36:	88 e5       	ldi	r24, 0x58	; 88
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	02 c0       	rjmp	.+4      	; 0xa40 <__stack+0x1e1>
 a3c:	88 e7       	ldi	r24, 0x78	; 120
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	b7 01       	movw	r22, r14
 a42:	0c c0       	rjmp	.+24     	; 0xa5c <__stack+0x1fd>
 a44:	82 2f       	mov	r24, r18
 a46:	86 78       	andi	r24, 0x86	; 134
 a48:	91 f0       	breq	.+36     	; 0xa6e <__stack+0x20f>
 a4a:	21 fd       	sbrc	r18, 1
 a4c:	02 c0       	rjmp	.+4      	; 0xa52 <__stack+0x1f3>
 a4e:	80 e2       	ldi	r24, 0x20	; 32
 a50:	01 c0       	rjmp	.+2      	; 0xa54 <__stack+0x1f5>
 a52:	8b e2       	ldi	r24, 0x2B	; 43
 a54:	27 fd       	sbrc	r18, 7
 a56:	8d e2       	ldi	r24, 0x2D	; 45
 a58:	b7 01       	movw	r22, r14
 a5a:	90 e0       	ldi	r25, 0x00	; 0
 a5c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 a60:	06 c0       	rjmp	.+12     	; 0xa6e <__stack+0x20f>
 a62:	b7 01       	movw	r22, r14
 a64:	80 e3       	ldi	r24, 0x30	; 48
 a66:	90 e0       	ldi	r25, 0x00	; 0
 a68:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 a6c:	7a 94       	dec	r7
 a6e:	d7 14       	cp	r13, r7
 a70:	c0 f3       	brcs	.-16     	; 0xa62 <__stack+0x203>
 a72:	da 94       	dec	r13
 a74:	f4 01       	movw	r30, r8
 a76:	ed 0d       	add	r30, r13
 a78:	f1 1d       	adc	r31, r1
 a7a:	b7 01       	movw	r22, r14
 a7c:	80 81       	ld	r24, Z
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 a84:	d1 10       	cpse	r13, r1
 a86:	f5 cf       	rjmp	.-22     	; 0xa72 <__stack+0x213>
 a88:	06 c0       	rjmp	.+12     	; 0xa96 <__stack+0x237>
 a8a:	b7 01       	movw	r22, r14
 a8c:	80 e2       	ldi	r24, 0x20	; 32
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	0e 94 7e 06 	call	0xcfc	; 0xcfc <fputc>
 a94:	6a 94       	dec	r6
 a96:	61 10       	cpse	r6, r1
 a98:	f8 cf       	rjmp	.-16     	; 0xa8a <__stack+0x22b>
 a9a:	99 cc       	rjmp	.-1742   	; 0x3ce <vfprintf+0x20>
 a9c:	f7 01       	movw	r30, r14
 a9e:	26 81       	ldd	r18, Z+6	; 0x06
 aa0:	37 81       	ldd	r19, Z+7	; 0x07
 aa2:	02 c0       	rjmp	.+4      	; 0xaa8 <__stack+0x249>
 aa4:	2f ef       	ldi	r18, 0xFF	; 255
 aa6:	3f ef       	ldi	r19, 0xFF	; 255
 aa8:	c9 01       	movw	r24, r18
 aaa:	62 96       	adiw	r28, 0x12	; 18
 aac:	e2 e1       	ldi	r30, 0x12	; 18
 aae:	0c 94 75 05 	jmp	0xaea	; 0xaea <__epilogue_restores__>

00000ab2 <__prologue_saves__>:
 ab2:	2f 92       	push	r2
 ab4:	3f 92       	push	r3
 ab6:	4f 92       	push	r4
 ab8:	5f 92       	push	r5
 aba:	6f 92       	push	r6
 abc:	7f 92       	push	r7
 abe:	8f 92       	push	r8
 ac0:	9f 92       	push	r9
 ac2:	af 92       	push	r10
 ac4:	bf 92       	push	r11
 ac6:	cf 92       	push	r12
 ac8:	df 92       	push	r13
 aca:	ef 92       	push	r14
 acc:	ff 92       	push	r15
 ace:	0f 93       	push	r16
 ad0:	1f 93       	push	r17
 ad2:	cf 93       	push	r28
 ad4:	df 93       	push	r29
 ad6:	cd b7       	in	r28, 0x3d	; 61
 ad8:	de b7       	in	r29, 0x3e	; 62
 ada:	ca 1b       	sub	r28, r26
 adc:	db 0b       	sbc	r29, r27
 ade:	0f b6       	in	r0, 0x3f	; 63
 ae0:	f8 94       	cli
 ae2:	de bf       	out	0x3e, r29	; 62
 ae4:	0f be       	out	0x3f, r0	; 63
 ae6:	cd bf       	out	0x3d, r28	; 61
 ae8:	09 94       	ijmp

00000aea <__epilogue_restores__>:
 aea:	2a 88       	ldd	r2, Y+18	; 0x12
 aec:	39 88       	ldd	r3, Y+17	; 0x11
 aee:	48 88       	ldd	r4, Y+16	; 0x10
 af0:	5f 84       	ldd	r5, Y+15	; 0x0f
 af2:	6e 84       	ldd	r6, Y+14	; 0x0e
 af4:	7d 84       	ldd	r7, Y+13	; 0x0d
 af6:	8c 84       	ldd	r8, Y+12	; 0x0c
 af8:	9b 84       	ldd	r9, Y+11	; 0x0b
 afa:	aa 84       	ldd	r10, Y+10	; 0x0a
 afc:	b9 84       	ldd	r11, Y+9	; 0x09
 afe:	c8 84       	ldd	r12, Y+8	; 0x08
 b00:	df 80       	ldd	r13, Y+7	; 0x07
 b02:	ee 80       	ldd	r14, Y+6	; 0x06
 b04:	fd 80       	ldd	r15, Y+5	; 0x05
 b06:	0c 81       	ldd	r16, Y+4	; 0x04
 b08:	1b 81       	ldd	r17, Y+3	; 0x03
 b0a:	aa 81       	ldd	r26, Y+2	; 0x02
 b0c:	b9 81       	ldd	r27, Y+1	; 0x01
 b0e:	ce 0f       	add	r28, r30
 b10:	d1 1d       	adc	r29, r1
 b12:	0f b6       	in	r0, 0x3f	; 63
 b14:	f8 94       	cli
 b16:	de bf       	out	0x3e, r29	; 62
 b18:	0f be       	out	0x3f, r0	; 63
 b1a:	cd bf       	out	0x3d, r28	; 61
 b1c:	ed 01       	movw	r28, r26
 b1e:	08 95       	ret

00000b20 <__ftoa_engine>:
 b20:	28 30       	cpi	r18, 0x08	; 8
 b22:	08 f0       	brcs	.+2      	; 0xb26 <__ftoa_engine+0x6>
 b24:	27 e0       	ldi	r18, 0x07	; 7
 b26:	33 27       	eor	r19, r19
 b28:	da 01       	movw	r26, r20
 b2a:	99 0f       	add	r25, r25
 b2c:	31 1d       	adc	r19, r1
 b2e:	87 fd       	sbrc	r24, 7
 b30:	91 60       	ori	r25, 0x01	; 1
 b32:	00 96       	adiw	r24, 0x00	; 0
 b34:	61 05       	cpc	r22, r1
 b36:	71 05       	cpc	r23, r1
 b38:	39 f4       	brne	.+14     	; 0xb48 <__ftoa_engine+0x28>
 b3a:	32 60       	ori	r19, 0x02	; 2
 b3c:	2e 5f       	subi	r18, 0xFE	; 254
 b3e:	3d 93       	st	X+, r19
 b40:	30 e3       	ldi	r19, 0x30	; 48
 b42:	2a 95       	dec	r18
 b44:	e1 f7       	brne	.-8      	; 0xb3e <__ftoa_engine+0x1e>
 b46:	08 95       	ret
 b48:	9f 3f       	cpi	r25, 0xFF	; 255
 b4a:	30 f0       	brcs	.+12     	; 0xb58 <__ftoa_engine+0x38>
 b4c:	80 38       	cpi	r24, 0x80	; 128
 b4e:	71 05       	cpc	r23, r1
 b50:	61 05       	cpc	r22, r1
 b52:	09 f0       	breq	.+2      	; 0xb56 <__ftoa_engine+0x36>
 b54:	3c 5f       	subi	r19, 0xFC	; 252
 b56:	3c 5f       	subi	r19, 0xFC	; 252
 b58:	3d 93       	st	X+, r19
 b5a:	91 30       	cpi	r25, 0x01	; 1
 b5c:	08 f0       	brcs	.+2      	; 0xb60 <__ftoa_engine+0x40>
 b5e:	80 68       	ori	r24, 0x80	; 128
 b60:	91 1d       	adc	r25, r1
 b62:	df 93       	push	r29
 b64:	cf 93       	push	r28
 b66:	1f 93       	push	r17
 b68:	0f 93       	push	r16
 b6a:	ff 92       	push	r15
 b6c:	ef 92       	push	r14
 b6e:	19 2f       	mov	r17, r25
 b70:	98 7f       	andi	r25, 0xF8	; 248
 b72:	96 95       	lsr	r25
 b74:	e9 2f       	mov	r30, r25
 b76:	96 95       	lsr	r25
 b78:	96 95       	lsr	r25
 b7a:	e9 0f       	add	r30, r25
 b7c:	ff 27       	eor	r31, r31
 b7e:	ea 54       	subi	r30, 0x4A	; 74
 b80:	ff 4f       	sbci	r31, 0xFF	; 255
 b82:	99 27       	eor	r25, r25
 b84:	33 27       	eor	r19, r19
 b86:	ee 24       	eor	r14, r14
 b88:	ff 24       	eor	r15, r15
 b8a:	a7 01       	movw	r20, r14
 b8c:	e7 01       	movw	r28, r14
 b8e:	05 90       	lpm	r0, Z+
 b90:	08 94       	sec
 b92:	07 94       	ror	r0
 b94:	28 f4       	brcc	.+10     	; 0xba0 <__ftoa_engine+0x80>
 b96:	36 0f       	add	r19, r22
 b98:	e7 1e       	adc	r14, r23
 b9a:	f8 1e       	adc	r15, r24
 b9c:	49 1f       	adc	r20, r25
 b9e:	51 1d       	adc	r21, r1
 ba0:	66 0f       	add	r22, r22
 ba2:	77 1f       	adc	r23, r23
 ba4:	88 1f       	adc	r24, r24
 ba6:	99 1f       	adc	r25, r25
 ba8:	06 94       	lsr	r0
 baa:	a1 f7       	brne	.-24     	; 0xb94 <__ftoa_engine+0x74>
 bac:	05 90       	lpm	r0, Z+
 bae:	07 94       	ror	r0
 bb0:	28 f4       	brcc	.+10     	; 0xbbc <__ftoa_engine+0x9c>
 bb2:	e7 0e       	add	r14, r23
 bb4:	f8 1e       	adc	r15, r24
 bb6:	49 1f       	adc	r20, r25
 bb8:	56 1f       	adc	r21, r22
 bba:	c1 1d       	adc	r28, r1
 bbc:	77 0f       	add	r23, r23
 bbe:	88 1f       	adc	r24, r24
 bc0:	99 1f       	adc	r25, r25
 bc2:	66 1f       	adc	r22, r22
 bc4:	06 94       	lsr	r0
 bc6:	a1 f7       	brne	.-24     	; 0xbb0 <__ftoa_engine+0x90>
 bc8:	05 90       	lpm	r0, Z+
 bca:	07 94       	ror	r0
 bcc:	28 f4       	brcc	.+10     	; 0xbd8 <__ftoa_engine+0xb8>
 bce:	f8 0e       	add	r15, r24
 bd0:	49 1f       	adc	r20, r25
 bd2:	56 1f       	adc	r21, r22
 bd4:	c7 1f       	adc	r28, r23
 bd6:	d1 1d       	adc	r29, r1
 bd8:	88 0f       	add	r24, r24
 bda:	99 1f       	adc	r25, r25
 bdc:	66 1f       	adc	r22, r22
 bde:	77 1f       	adc	r23, r23
 be0:	06 94       	lsr	r0
 be2:	a1 f7       	brne	.-24     	; 0xbcc <__ftoa_engine+0xac>
 be4:	05 90       	lpm	r0, Z+
 be6:	07 94       	ror	r0
 be8:	20 f4       	brcc	.+8      	; 0xbf2 <__ftoa_engine+0xd2>
 bea:	49 0f       	add	r20, r25
 bec:	56 1f       	adc	r21, r22
 bee:	c7 1f       	adc	r28, r23
 bf0:	d8 1f       	adc	r29, r24
 bf2:	99 0f       	add	r25, r25
 bf4:	66 1f       	adc	r22, r22
 bf6:	77 1f       	adc	r23, r23
 bf8:	88 1f       	adc	r24, r24
 bfa:	06 94       	lsr	r0
 bfc:	a9 f7       	brne	.-22     	; 0xbe8 <__ftoa_engine+0xc8>
 bfe:	84 91       	lpm	r24, Z
 c00:	10 95       	com	r17
 c02:	17 70       	andi	r17, 0x07	; 7
 c04:	41 f0       	breq	.+16     	; 0xc16 <__ftoa_engine+0xf6>
 c06:	d6 95       	lsr	r29
 c08:	c7 95       	ror	r28
 c0a:	57 95       	ror	r21
 c0c:	47 95       	ror	r20
 c0e:	f7 94       	ror	r15
 c10:	e7 94       	ror	r14
 c12:	1a 95       	dec	r17
 c14:	c1 f7       	brne	.-16     	; 0xc06 <__ftoa_engine+0xe6>
 c16:	ec e5       	ldi	r30, 0x5C	; 92
 c18:	f0 e0       	ldi	r31, 0x00	; 0
 c1a:	68 94       	set
 c1c:	15 90       	lpm	r1, Z+
 c1e:	15 91       	lpm	r17, Z+
 c20:	35 91       	lpm	r19, Z+
 c22:	65 91       	lpm	r22, Z+
 c24:	95 91       	lpm	r25, Z+
 c26:	05 90       	lpm	r0, Z+
 c28:	7f e2       	ldi	r23, 0x2F	; 47
 c2a:	73 95       	inc	r23
 c2c:	e1 18       	sub	r14, r1
 c2e:	f1 0a       	sbc	r15, r17
 c30:	43 0b       	sbc	r20, r19
 c32:	56 0b       	sbc	r21, r22
 c34:	c9 0b       	sbc	r28, r25
 c36:	d0 09       	sbc	r29, r0
 c38:	c0 f7       	brcc	.-16     	; 0xc2a <__ftoa_engine+0x10a>
 c3a:	e1 0c       	add	r14, r1
 c3c:	f1 1e       	adc	r15, r17
 c3e:	43 1f       	adc	r20, r19
 c40:	56 1f       	adc	r21, r22
 c42:	c9 1f       	adc	r28, r25
 c44:	d0 1d       	adc	r29, r0
 c46:	7e f4       	brtc	.+30     	; 0xc66 <__ftoa_engine+0x146>
 c48:	70 33       	cpi	r23, 0x30	; 48
 c4a:	11 f4       	brne	.+4      	; 0xc50 <__ftoa_engine+0x130>
 c4c:	8a 95       	dec	r24
 c4e:	e6 cf       	rjmp	.-52     	; 0xc1c <__ftoa_engine+0xfc>
 c50:	e8 94       	clt
 c52:	01 50       	subi	r16, 0x01	; 1
 c54:	30 f0       	brcs	.+12     	; 0xc62 <__ftoa_engine+0x142>
 c56:	08 0f       	add	r16, r24
 c58:	0a f4       	brpl	.+2      	; 0xc5c <__ftoa_engine+0x13c>
 c5a:	00 27       	eor	r16, r16
 c5c:	02 17       	cp	r16, r18
 c5e:	08 f4       	brcc	.+2      	; 0xc62 <__ftoa_engine+0x142>
 c60:	20 2f       	mov	r18, r16
 c62:	23 95       	inc	r18
 c64:	02 2f       	mov	r16, r18
 c66:	7a 33       	cpi	r23, 0x3A	; 58
 c68:	28 f0       	brcs	.+10     	; 0xc74 <__ftoa_engine+0x154>
 c6a:	79 e3       	ldi	r23, 0x39	; 57
 c6c:	7d 93       	st	X+, r23
 c6e:	2a 95       	dec	r18
 c70:	e9 f7       	brne	.-6      	; 0xc6c <__ftoa_engine+0x14c>
 c72:	10 c0       	rjmp	.+32     	; 0xc94 <__ftoa_engine+0x174>
 c74:	7d 93       	st	X+, r23
 c76:	2a 95       	dec	r18
 c78:	89 f6       	brne	.-94     	; 0xc1c <__ftoa_engine+0xfc>
 c7a:	06 94       	lsr	r0
 c7c:	97 95       	ror	r25
 c7e:	67 95       	ror	r22
 c80:	37 95       	ror	r19
 c82:	17 95       	ror	r17
 c84:	17 94       	ror	r1
 c86:	e1 18       	sub	r14, r1
 c88:	f1 0a       	sbc	r15, r17
 c8a:	43 0b       	sbc	r20, r19
 c8c:	56 0b       	sbc	r21, r22
 c8e:	c9 0b       	sbc	r28, r25
 c90:	d0 09       	sbc	r29, r0
 c92:	98 f0       	brcs	.+38     	; 0xcba <__ftoa_engine+0x19a>
 c94:	23 95       	inc	r18
 c96:	7e 91       	ld	r23, -X
 c98:	73 95       	inc	r23
 c9a:	7a 33       	cpi	r23, 0x3A	; 58
 c9c:	08 f0       	brcs	.+2      	; 0xca0 <__ftoa_engine+0x180>
 c9e:	70 e3       	ldi	r23, 0x30	; 48
 ca0:	7c 93       	st	X, r23
 ca2:	20 13       	cpse	r18, r16
 ca4:	b8 f7       	brcc	.-18     	; 0xc94 <__ftoa_engine+0x174>
 ca6:	7e 91       	ld	r23, -X
 ca8:	70 61       	ori	r23, 0x10	; 16
 caa:	7d 93       	st	X+, r23
 cac:	30 f0       	brcs	.+12     	; 0xcba <__ftoa_engine+0x19a>
 cae:	83 95       	inc	r24
 cb0:	71 e3       	ldi	r23, 0x31	; 49
 cb2:	7d 93       	st	X+, r23
 cb4:	70 e3       	ldi	r23, 0x30	; 48
 cb6:	2a 95       	dec	r18
 cb8:	e1 f7       	brne	.-8      	; 0xcb2 <__ftoa_engine+0x192>
 cba:	11 24       	eor	r1, r1
 cbc:	ef 90       	pop	r14
 cbe:	ff 90       	pop	r15
 cc0:	0f 91       	pop	r16
 cc2:	1f 91       	pop	r17
 cc4:	cf 91       	pop	r28
 cc6:	df 91       	pop	r29
 cc8:	99 27       	eor	r25, r25
 cca:	87 fd       	sbrc	r24, 7
 ccc:	90 95       	com	r25
 cce:	08 95       	ret

00000cd0 <strnlen_P>:
 cd0:	fc 01       	movw	r30, r24
 cd2:	05 90       	lpm	r0, Z+
 cd4:	61 50       	subi	r22, 0x01	; 1
 cd6:	70 40       	sbci	r23, 0x00	; 0
 cd8:	01 10       	cpse	r0, r1
 cda:	d8 f7       	brcc	.-10     	; 0xcd2 <strnlen_P+0x2>
 cdc:	80 95       	com	r24
 cde:	90 95       	com	r25
 ce0:	8e 0f       	add	r24, r30
 ce2:	9f 1f       	adc	r25, r31
 ce4:	08 95       	ret

00000ce6 <strnlen>:
 ce6:	fc 01       	movw	r30, r24
 ce8:	61 50       	subi	r22, 0x01	; 1
 cea:	70 40       	sbci	r23, 0x00	; 0
 cec:	01 90       	ld	r0, Z+
 cee:	01 10       	cpse	r0, r1
 cf0:	d8 f7       	brcc	.-10     	; 0xce8 <strnlen+0x2>
 cf2:	80 95       	com	r24
 cf4:	90 95       	com	r25
 cf6:	8e 0f       	add	r24, r30
 cf8:	9f 1f       	adc	r25, r31
 cfa:	08 95       	ret

00000cfc <fputc>:
 cfc:	0f 93       	push	r16
 cfe:	1f 93       	push	r17
 d00:	cf 93       	push	r28
 d02:	df 93       	push	r29
 d04:	8c 01       	movw	r16, r24
 d06:	eb 01       	movw	r28, r22
 d08:	8b 81       	ldd	r24, Y+3	; 0x03
 d0a:	81 fd       	sbrc	r24, 1
 d0c:	03 c0       	rjmp	.+6      	; 0xd14 <fputc+0x18>
 d0e:	0f ef       	ldi	r16, 0xFF	; 255
 d10:	1f ef       	ldi	r17, 0xFF	; 255
 d12:	1a c0       	rjmp	.+52     	; 0xd48 <fputc+0x4c>
 d14:	82 ff       	sbrs	r24, 2
 d16:	0d c0       	rjmp	.+26     	; 0xd32 <fputc+0x36>
 d18:	2e 81       	ldd	r18, Y+6	; 0x06
 d1a:	3f 81       	ldd	r19, Y+7	; 0x07
 d1c:	8c 81       	ldd	r24, Y+4	; 0x04
 d1e:	9d 81       	ldd	r25, Y+5	; 0x05
 d20:	28 17       	cp	r18, r24
 d22:	39 07       	cpc	r19, r25
 d24:	64 f4       	brge	.+24     	; 0xd3e <fputc+0x42>
 d26:	e8 81       	ld	r30, Y
 d28:	f9 81       	ldd	r31, Y+1	; 0x01
 d2a:	01 93       	st	Z+, r16
 d2c:	f9 83       	std	Y+1, r31	; 0x01
 d2e:	e8 83       	st	Y, r30
 d30:	06 c0       	rjmp	.+12     	; 0xd3e <fputc+0x42>
 d32:	e8 85       	ldd	r30, Y+8	; 0x08
 d34:	f9 85       	ldd	r31, Y+9	; 0x09
 d36:	80 2f       	mov	r24, r16
 d38:	09 95       	icall
 d3a:	89 2b       	or	r24, r25
 d3c:	41 f7       	brne	.-48     	; 0xd0e <fputc+0x12>
 d3e:	8e 81       	ldd	r24, Y+6	; 0x06
 d40:	9f 81       	ldd	r25, Y+7	; 0x07
 d42:	01 96       	adiw	r24, 0x01	; 1
 d44:	9f 83       	std	Y+7, r25	; 0x07
 d46:	8e 83       	std	Y+6, r24	; 0x06
 d48:	c8 01       	movw	r24, r16
 d4a:	df 91       	pop	r29
 d4c:	cf 91       	pop	r28
 d4e:	1f 91       	pop	r17
 d50:	0f 91       	pop	r16
 d52:	08 95       	ret

00000d54 <__ultoa_invert>:
 d54:	fa 01       	movw	r30, r20
 d56:	aa 27       	eor	r26, r26
 d58:	28 30       	cpi	r18, 0x08	; 8
 d5a:	51 f1       	breq	.+84     	; 0xdb0 <__ultoa_invert+0x5c>
 d5c:	20 31       	cpi	r18, 0x10	; 16
 d5e:	81 f1       	breq	.+96     	; 0xdc0 <__ultoa_invert+0x6c>
 d60:	e8 94       	clt
 d62:	6f 93       	push	r22
 d64:	6e 7f       	andi	r22, 0xFE	; 254
 d66:	6e 5f       	subi	r22, 0xFE	; 254
 d68:	7f 4f       	sbci	r23, 0xFF	; 255
 d6a:	8f 4f       	sbci	r24, 0xFF	; 255
 d6c:	9f 4f       	sbci	r25, 0xFF	; 255
 d6e:	af 4f       	sbci	r26, 0xFF	; 255
 d70:	b1 e0       	ldi	r27, 0x01	; 1
 d72:	3e d0       	rcall	.+124    	; 0xdf0 <__ultoa_invert+0x9c>
 d74:	b4 e0       	ldi	r27, 0x04	; 4
 d76:	3c d0       	rcall	.+120    	; 0xdf0 <__ultoa_invert+0x9c>
 d78:	67 0f       	add	r22, r23
 d7a:	78 1f       	adc	r23, r24
 d7c:	89 1f       	adc	r24, r25
 d7e:	9a 1f       	adc	r25, r26
 d80:	a1 1d       	adc	r26, r1
 d82:	68 0f       	add	r22, r24
 d84:	79 1f       	adc	r23, r25
 d86:	8a 1f       	adc	r24, r26
 d88:	91 1d       	adc	r25, r1
 d8a:	a1 1d       	adc	r26, r1
 d8c:	6a 0f       	add	r22, r26
 d8e:	71 1d       	adc	r23, r1
 d90:	81 1d       	adc	r24, r1
 d92:	91 1d       	adc	r25, r1
 d94:	a1 1d       	adc	r26, r1
 d96:	20 d0       	rcall	.+64     	; 0xdd8 <__ultoa_invert+0x84>
 d98:	09 f4       	brne	.+2      	; 0xd9c <__ultoa_invert+0x48>
 d9a:	68 94       	set
 d9c:	3f 91       	pop	r19
 d9e:	2a e0       	ldi	r18, 0x0A	; 10
 da0:	26 9f       	mul	r18, r22
 da2:	11 24       	eor	r1, r1
 da4:	30 19       	sub	r19, r0
 da6:	30 5d       	subi	r19, 0xD0	; 208
 da8:	31 93       	st	Z+, r19
 daa:	de f6       	brtc	.-74     	; 0xd62 <__ultoa_invert+0xe>
 dac:	cf 01       	movw	r24, r30
 dae:	08 95       	ret
 db0:	46 2f       	mov	r20, r22
 db2:	47 70       	andi	r20, 0x07	; 7
 db4:	40 5d       	subi	r20, 0xD0	; 208
 db6:	41 93       	st	Z+, r20
 db8:	b3 e0       	ldi	r27, 0x03	; 3
 dba:	0f d0       	rcall	.+30     	; 0xdda <__ultoa_invert+0x86>
 dbc:	c9 f7       	brne	.-14     	; 0xdb0 <__ultoa_invert+0x5c>
 dbe:	f6 cf       	rjmp	.-20     	; 0xdac <__ultoa_invert+0x58>
 dc0:	46 2f       	mov	r20, r22
 dc2:	4f 70       	andi	r20, 0x0F	; 15
 dc4:	40 5d       	subi	r20, 0xD0	; 208
 dc6:	4a 33       	cpi	r20, 0x3A	; 58
 dc8:	18 f0       	brcs	.+6      	; 0xdd0 <__ultoa_invert+0x7c>
 dca:	49 5d       	subi	r20, 0xD9	; 217
 dcc:	31 fd       	sbrc	r19, 1
 dce:	40 52       	subi	r20, 0x20	; 32
 dd0:	41 93       	st	Z+, r20
 dd2:	02 d0       	rcall	.+4      	; 0xdd8 <__ultoa_invert+0x84>
 dd4:	a9 f7       	brne	.-22     	; 0xdc0 <__ultoa_invert+0x6c>
 dd6:	ea cf       	rjmp	.-44     	; 0xdac <__ultoa_invert+0x58>
 dd8:	b4 e0       	ldi	r27, 0x04	; 4
 dda:	a6 95       	lsr	r26
 ddc:	97 95       	ror	r25
 dde:	87 95       	ror	r24
 de0:	77 95       	ror	r23
 de2:	67 95       	ror	r22
 de4:	ba 95       	dec	r27
 de6:	c9 f7       	brne	.-14     	; 0xdda <__ultoa_invert+0x86>
 de8:	00 97       	sbiw	r24, 0x00	; 0
 dea:	61 05       	cpc	r22, r1
 dec:	71 05       	cpc	r23, r1
 dee:	08 95       	ret
 df0:	9b 01       	movw	r18, r22
 df2:	ac 01       	movw	r20, r24
 df4:	0a 2e       	mov	r0, r26
 df6:	06 94       	lsr	r0
 df8:	57 95       	ror	r21
 dfa:	47 95       	ror	r20
 dfc:	37 95       	ror	r19
 dfe:	27 95       	ror	r18
 e00:	ba 95       	dec	r27
 e02:	c9 f7       	brne	.-14     	; 0xdf6 <__ultoa_invert+0xa2>
 e04:	62 0f       	add	r22, r18
 e06:	73 1f       	adc	r23, r19
 e08:	84 1f       	adc	r24, r20
 e0a:	95 1f       	adc	r25, r21
 e0c:	a0 1d       	adc	r26, r0
 e0e:	08 95       	ret

00000e10 <_exit>:
 e10:	f8 94       	cli

00000e12 <__stop_program>:
 e12:	ff cf       	rjmp	.-2      	; 0xe12 <__stop_program>
